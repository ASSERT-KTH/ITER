bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  assign  =  n.nodesToCollapse.getFirstChild();  [CE]  cannot  find  symbol  nodesToCollapse  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.nodesToCollapse.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.nodesToCollapse.getFirstChild();	  Node    assign    =    collapse.nodesToCollapse.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nodesToCollapse	107	None	replace
2	[BUG]  [BUGGY]  Node  assign  =  collapse.nodesToCollapse.getLastChild();  [CE]  cannot  find  symbol  nodesToCollapse  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.nodesToCollapse.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.nodesToCollapse.getLastChild();	  Node    assign    =    collapse.nodesToCollapse.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nodesToCollapse	107	None	replace
3	[BUG]  [BUGGY]  Node  assign  =  collapse.nodesToCollapse.removeFirstChild();  [CE]  cannot  find  symbol  nodesToCollapse  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.nodesToCollapse.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.nodesToCollapse.removeFirstChild();	  Node    assign    =    collapse.nodesToCollapse.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nodesToCollapse	107	None	replace
4	[BUG]  [BUGGY]  Node  assign  =  collapse.varNodesToCollapse.getFirstChild();  [CE]  cannot  find  symbol  varNodesToCollapse  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.varNodesToCollapse.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.varNodesToCollapse.getFirstChild();	  Node    assign    =    collapse.nodesToCollapse.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  varNodesToCollapse	107	None	replace
5	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.NAME);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	76	2	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getParent();  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.NAME);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	76	2	replace
7	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.NAME);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	76	2	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getNext();  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.NAME);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	76	2	replace
9	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()!=  Token.NAME);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.NAME);    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	76	2	replace
10	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  Node  assign  =  n.getParent();  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()!=  Token.NAME);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.NAME);    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	76	2	replace
11	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getLastChild();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.NAME);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	76	2	replace
12	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getLastChild();  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getLastChild();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.NAME);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	76	2	replace
13	[BUG]  [BUGGY]  Node  assign  =  collapse.getLastChild();  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.getLastChild();	  Node    assign    =    nodesToCollapse.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
14	[BUG]  [BUGGY]  Node  assign  =  collapsesToCollapse.getLastChild();  [CE]  cannot  find  symbol  collapsesToCollapse  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsesToCollapse.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsesToCollapse.getLastChild();	  Node    assign    =    nodesToCollapse.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  collapsesToCollapse	2	None	replace
15	[BUG]  [BUGGY]  Node  assign  =  collapses.getLastChild();  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapses.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapses.getLastChild();	  Node    assign    =    nodesToCollapse.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
16	[BUG]  [BUGGY]  Node  assign  =  collapsed.getLastChild();  [CE]  cannot  find  symbol  collapsed  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsed.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsed.getLastChild();	  Node    assign    =    nodesToCollapse.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  collapsed	2	None	replace
17	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	69	None	replace
18	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	69	None	replace
19	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	69	None	replace
20	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	69	None	replace
21	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	69	None	replace
22	[BUG]  [BUGGY]  Node  assign  =  parent.getAssignmentOp();  [CE]  cannot  find  symbol  parent  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.getAssignmentOp();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.getAssignmentOp();	  Node    assign    =    n.getAssignmentOp();    	non-compiled	[CE]  cannot  find  symbol  parent	15	None	replace
23	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getAssignmentOp();  [CE]  cannot  find  symbol  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getAssignmentOp();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getAssignmentOp();	  Node    assign    =    n.getAssignmentOp();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
24	[BUG]  [BUGGY]  Node  assign  =  varNode.getAssignmentOp();  [CE]  cannot  find  symbol  varNode  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  varNode.getAssignmentOp();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  varNode.getAssignmentOp();	  Node    assign    =    n.getAssignmentOp();    	non-compiled	[CE]  cannot  find  symbol  varNode	15	None	replace
25	[BUG]  [BUGGY]  Node  assign  =  this.assignment.getAssignmentOp();  [CE]  cannot  find  symbol  assignment  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  this.assignment.getAssignmentOp();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  this.assignment.getAssignmentOp();	  Node    assign    =    n.getAssignmentOp();    	non-compiled	[CE]  cannot  find  symbol  assignment	15	None	replace
26	[BUG]  [BUGGY]  Node  assign  =  a.getAssignmentOp();  [CE]  cannot  find  symbol  a  [FE]                                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  a.getAssignmentOp();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  a.getAssignmentOp();	  Node    assign    =    n.getAssignmentOp();    	non-compiled	[CE]  cannot  find  symbol  a	15	None	replace
27	[BUG]  [BUGGY]  Node  assign  =  endNode.getAssignmentOp();  [CE]  cannot  find  symbol  endNode  [FE]                                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  endNode.getAssignmentOp();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  endNode.getAssignmentOp();	  Node    assign    =    n.getAssignmentOp();    	non-compiled	[CE]  cannot  find  symbol  endNode	15	None	replace
28	[BUG]  [BUGGY]  Node  assign  =  varNodesToCollapse.getFirstChild();  [CE]  cannot  find  symbol  varNodesToCollapse  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  varNodesToCollapse.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  varNodesToCollapse.getFirstChild();	  Node    assign    =    collapsesToCollapse.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  varNodesToCollapse	3	None	replace
29	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  var.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  var.getFirstChild();	  Node    assign    =    collapsesToCollapse.getFirstChild();    	compilable	  [FE]  IllegalStateException  	3	2	replace
30	[BUG]  [BUGGY]  Node  assign  =  var.getFirstChild();  [FE]  IllegalStateException  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  var.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  var.getFirstChild();	  Node    assign    =    collapsesToCollapse.getFirstChild();    	compilable	  [FE]  IllegalStateException  	3	2	replace
31	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	35	2	replace
32	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getParent();  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	35	2	replace
33	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	35	2	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  assign  =  n.getParent();  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	35	2	replace
35	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	35	2	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getParent();  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	35	2	replace
37	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(5);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getAncestor(5);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(4);    	compilable	  [FE]  NullPointerException  	63	2	replace
38	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(5);  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(5);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(5);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(4);    	compilable	  [FE]  NullPointerException  	63	2	replace
39	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(6);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getAncestor(6);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(4);    	compilable	  [FE]  NullPointerException  	63	2	replace
40	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(6);  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(6);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(6);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(4);    	compilable	  [FE]  NullPointerException  	63	2	replace
41	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  not  a  statement	58	None	replace
42	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  not  a  statement	58	None	replace
43	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  not  a  statement	58	None	replace
44	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  not  a  statement	58	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  assign  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  assign	18	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()!=  Token.NAME);  [CE]  cannot  find  symbol  a  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()!=  Token.NAME);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()!=  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  a	18	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME,  c);  [CE]  cannot  find  symbol  a  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME,  c);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME,  c);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  a	18	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME,  b);  [CE]  cannot  find  symbol  a  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME,  b);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME,  b);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  a	18	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(f.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  f  [FE]                                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(f.getType()  ==  Token.NAME);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(f.getType()  ==  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  f	18	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(b.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  b  [FE]                                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(b.getType()  ==  Token.NAME);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(b.getType()  ==  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  b	18	None	replace
51	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getLastChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getLastChild();	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    [Delete]    n.getLastChild();    	non-compiled	[CE]  not  a  statement	104	None	replace
52	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.getLastChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.getLastChild();	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    [Delete]    n.getLastChild();    	non-compiled	[CE]  not  a  statement	104	None	replace
53	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getLastChild();  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getLastChild();  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getLastChild();  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    [Delete]    n.getLastChild();    	non-compiled	[CE]  not  a  statement	104	None	replace
54	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.getLastChild();  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.getLastChild();  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.getLastChild();  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    [Delete]    n.getLastChild();    	non-compiled	[CE]  not  a  statement	104	None	replace
55	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  }  n.getLastChild();  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  }  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  }  n.getLastChild();	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    [Delete]    n.getLastChild();    	non-compiled	[CE]  not  a  statement	104	None	replace
56	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  [Delete]  n.getLastChild();  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  [Delete]  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  [Delete]  n.getLastChild();	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    [Delete]    n.getLastChild();    	non-compiled	[CE]  not  a  statement	104	None	replace
57	[BUG]  [BUGGY]  Result:  function  f(a)  {  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
58	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
59	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
60	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
61	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
62	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
63	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(a);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(a);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    var.addChildToBack(a);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
65	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(a);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(a);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    var.addChildToBack(a);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
66	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(1);  Preconditions.checkState(var.hasAncestor(2));  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(1);  Preconditions.checkState(var.hasAncestor(2));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(1);  Preconditions.checkState(var.hasAncestor(2));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    var.addChildToBack(a);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
67	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(a);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(a);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    var.addChildToBack(a);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
68	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(var.hasAncestor(2));  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(var.hasAncestor(2));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(2);  Preconditions.checkState(var.hasAncestor(2));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    var.addChildToBack(a);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
69	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  }  n.getFirstChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  }  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  }  n.getFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	122	None	replace
70	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  n.getFirstChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  n.getFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	122	None	replace
71	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getFirstChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	122	None	replace
72	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  n.getFirstChild();  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1!=  n.getFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	122	None	replace
73	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  }  n.getFirstChild();  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  }  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  }  n.getFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	122	None	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  assign  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);	  Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  assign	110	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()!=  Token.VAR);  [CE]  cannot  find  symbol  a  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()!=  Token.VAR);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()!=  Token.VAR);	  Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  a	110	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkState(b.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  b  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(b.getType()  ==  Token.VAR);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(b.getType()  ==  Token.VAR);	  Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  b	110	None	replace
77	[BUG]  [BUGGY]  Preconditions.checkState(var.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  assign  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(var.getType()  ==  Token.VAR);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(var.getType()  ==  Token.VAR);	  Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  assign	110	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  c  [FE]                                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.VAR);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(c.getType()  ==  Token.VAR);	  Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  c	110	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(f.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  f  [FE]                                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(f.getType()  ==  Token.VAR);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(f.getType()  ==  Token.VAR);	  Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  f	110	None	replace
80	[BUG]  [BUGGY]  Node  assign  =  collapse(n.getLastChild());  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse(n.getLastChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse(n.getLastChild());	  Node    assign    =    collapse(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
81	[BUG]  [BUGGY]  Node  assign  =  collapse(n.getFirstChild(),  varNode);  [CE]  cannot  find  symbol  varNode  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse(n.getFirstChild(),  varNode);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse(n.getFirstChild(),  varNode);	  Node    assign    =    collapse(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  varNode	16	None	replace
82	[BUG]  [BUGGY]  Node  assign  =  collapse(n.getFirstChild(),  b);  [CE]  cannot  find  symbol  b  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse(n.getFirstChild(),  b);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse(n.getFirstChild(),  b);	  Node    assign    =    collapse(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  b	16	None	replace
83	[BUG]  [BUGGY]  Node  assign  =  collapse(n.getFirstChild(),  c);  [CE]  cannot  find  symbol  c  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse(n.getFirstChild(),  c);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse(n.getFirstChild(),  c);	  Node    assign    =    collapse(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  c	16	None	replace
84	[BUG]  [BUGGY]  Node  assign  =  collapse(n,  n.getFirstChild());  [CE]  cannot  find  symbol  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse(n,  n.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse(n,  n.getFirstChild());	  Node    assign    =    collapse(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
85	[BUG]  [BUGGY]  Node  assign  =  collapse(n.getFirstChild(),  a);  [CE]  cannot  find  symbol  a  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse(n.getFirstChild(),  a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse(n.getFirstChild(),  a);	  Node    assign    =    collapse(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  a	16	None	replace
86	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  [CE]  cannot  find  symbol  assign  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  assign	79	None	replace
87	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    	compilable	  [FE]  NullPointerException  	79	2	replace
88	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    	compilable	  [FE]  NullPointerException  	79	2	replace
89	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getLastChild();  Preconditions.checkState(n.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	79	1	replace
90	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Preconditions.checkState(n.hasChildren());  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Preconditions.checkState(n.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	79	1	replace
91	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	79	1	replace
92	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren());  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	79	1	replace
93	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(var.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(var.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    	compilable	  [FE]  NullPointerException  	79	2	replace
94	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(var.hasChildren());  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(var.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(var.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    	compilable	  [FE]  NullPointerException  	79	2	replace
95	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  preconditions.checkState(n.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  preconditions.checkState(n.hasChildren());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    preconditions.checkState(n.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	38	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkState(var.hasChildren());  [CE]  cannot  find  symbol  assign  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(var.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(var.hasChildren());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    preconditions.checkState(n.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  assign	38	None	replace
97	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  preconditions.checkState(n.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getNext();  preconditions.checkState(n.hasChildren());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    preconditions.checkState(n.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	38	None	replace
98	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  preconditions.checkState(var.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  preconditions.checkState(var.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  preconditions.checkState(var.hasChildren());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    preconditions.checkState(n.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	38	None	replace
99	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	55	None	replace
100	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	55	None	replace
101	[BUG]  [BUGGY]  Node  assign  =  parent.getAncestor(1);  [CE]  cannot  find  symbol  parent  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol  parent	60	None	replace
102	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  IllegalStateException  	61	2	replace
103	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(2);  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  IllegalStateException  	61	2	replace
104	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(1)  ==  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(1)  ==  null);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  NullPointerException  	61	2	replace
105	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(1)  ==  null);  Node  assign  =  n.getAncestor(2);  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(1)  ==  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(1)  ==  null);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  NullPointerException  	61	2	replace
106	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  IllegalStateException  	61	2	replace
107	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(2);  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  IllegalStateException  	61	2	replace
108	[BUG]  [BUGGY]  Node  assign  =  nodes.getFirstChild();  [CE]  cannot  find  symbol  nodes  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodes.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodes.getFirstChild();	  Node    assign    =    collapses.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nodes	5	None	replace
109	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    var.addChildToBack(a);    	compilable	  [FE]  NullPointerException  	113	2	replace
110	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    var.addChildToBack(a);    	compilable	  [FE]  NullPointerException  	113	2	replace
111	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    var.addChildToBack(a);    	compilable	  [FE]  NullPointerException  	113	2	replace
112	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    var.addChildToBack(a);    	compilable	  [FE]  NullPointerException  	113	2	replace
113	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    var.addChildToBack(a);    	compilable	  [FE]  IllegalArgumentException  	113	2	replace
114	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [FE]  IllegalArgumentException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    var.addChildToBack(a);    	compilable	  [FE]  IllegalArgumentException  	113	2	replace
115	[BUG]  [BUGGY]  Node  assign  =  parent.getParent();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [CE]  cannot  find  symbol  parent  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.getParent();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.getParent();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    var.addChildToBack(a);    	non-compiled	[CE]  cannot  find  symbol  parent	113	None	replace
116	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getParent();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getParent();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getParent();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(assign);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    var.addChildToBack(a);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
117	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  }  n.getFirstChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  }  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  }  n.getFirstChild();	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	103	None	replace
118	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.getFirstChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.getFirstChild();	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	103	None	replace
119	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getFirstChild();  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getFirstChild();  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getFirstChild();  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	103	None	replace
120	[BUG]  [BUGGY]  Node  assign  =  var.getAssignedValue();  [CE]  cannot  find  symbol  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  var.getAssignedValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  var.getAssignedValue();	  Node    assign    =    endNode.getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
121	[BUG]  [BUGGY]  Node  assign  =  startNode.getAssignedValue();  [CE]  cannot  find  symbol  startNode  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  startNode.getAssignedValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  startNode.getAssignedValue();	  Node    assign    =    endNode.getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol  startNode	26	None	replace
122	[BUG]  [BUGGY]  Node  assign  =  child.getAssignedValue();  [CE]  cannot  find  symbol  child  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  child.getAssignedValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  child.getAssignedValue();	  Node    assign    =    endNode.getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol  child	26	None	replace
123	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  var  b=1  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  {  var  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  {  var  b=1	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  ';'  expected	45	None	replace
124	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	45	None	replace
125	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  }	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	45	None	replace
126	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	45	None	replace
127	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.removeFirstChild();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	118	None	replace
128	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  n.removeFirstChild();  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	118	None	replace
129	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.removeFirstChild();  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	118	None	replace
130	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  n.removeFirstChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	118	None	replace
131	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.removeFirstChild();  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.removeFirstChild();  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.removeFirstChild();  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	118	None	replace
132	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  n.removeFirstChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1!=  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	118	None	replace
133	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  [Delete]  n.removeFirstChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  [Delete]  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  [Delete]  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	118	None	replace
134	[BUG]  [BUGGY]  ASSIGNED:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  ASSIGNED:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	ASSIGNED:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	56	None	replace
135	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	56	None	replace
136	[BUG]  [BUGGY]  Node  assign  =  collapse.getParent();  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.getParent();	  Node    assign    =    nodesToCollapse.getParent();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
137	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getNext();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getNext();	  Node    assign    =    nodesToCollapse.getParent();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
138	[BUG]  [BUGGY]  Node  assign  =  parent.getParent();  [CE]  cannot  find  symbol  parent  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.getParent();	  Node    assign    =    nodesToCollapse.getParent();    	non-compiled	[CE]  cannot  find  symbol  parent	66	None	replace
139	[BUG]  [BUGGY]  Node  assign  =  startNode.getFirstChild();  [CE]  cannot  find  symbol  startNode  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  startNode.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  startNode.getFirstChild();	  Node    assign    =    node.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  startNode	73	None	replace
140	[BUG]  [BUGGY]  Node  assign  =  child.getFirstChild();  [CE]  cannot  find  symbol  child  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  child.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  child.getFirstChild();	  Node    assign    =    node.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  child	73	None	replace
141	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  }  n.getLastChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  }  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  }  n.getLastChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    n.getLastChild();    	non-compiled	[CE]  not  a  statement	123	None	replace
142	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  >>  n.getLastChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  >>  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  >>  n.getLastChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    n.getLastChild();    	non-compiled	[CE]  not  a  statement	123	None	replace
143	[BUG]  [BUGGY]  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.isVar());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	40	None	replace
144	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(a.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(a.isVar());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	40	None	replace
145	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(a.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getNext();  Preconditions.checkState(a.isVar());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	40	None	replace
146	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Preconditions.checkState(a.isVar());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	40	None	replace
147	[BUG]  [BUGGY]  Node  assign  =  a.getParent();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  a.getParent();  Preconditions.checkState(a.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  a.getParent();  Preconditions.checkState(a.isVar());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	40	None	replace
148	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.removeAssignedChild();  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.removeAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.removeAssignedChild();	  Node    assign    =    n.removeAssignedChild();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
149	[BUG]  [BUGGY]  Node  assign  =  n.removeAssignmentChild();  [CE]  cannot  find  symbol  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeAssignmentChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeAssignmentChild();	  Node    assign    =    n.removeAssignedChild();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
150	[BUG]  [BUGGY]  Node  assign  =  parent.removeAssignedChild();  [CE]  cannot  find  symbol  parent  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.removeAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.removeAssignedChild();	  Node    assign    =    n.removeAssignedChild();    	non-compiled	[CE]  cannot  find  symbol  parent	14	None	replace
151	[BUG]  [BUGGY]  Node  assign  =  null.getFirstChild();  [CE]  <null>  cannot  be  dereferenced  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  null.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  null.getFirstChild();	  Node    assign    =    collapsed.getFirstChild();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	72	None	replace
152	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(n.isVar());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(n.isVar());    	compilable	  [FE]  IllegalStateException  	42	2	replace
153	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.isVar());  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(n.isVar());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(n.isVar());    	compilable	  [FE]  IllegalStateException  	42	2	replace
154	[BUG]  [BUGGY]  Preconditions.checkState(n.isVar());  [CE]  cannot  find  symbol  assign  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.isVar());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(n.isVar());    	non-compiled	[CE]  cannot  find  symbol  assign	42	None	replace
155	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getNext();  Preconditions.checkState(n.isVar());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(n.isVar());    	compilable	  [FE]  IllegalStateException  	42	2	replace
156	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.isVar());  [FE]  IllegalStateException  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getNext();  Preconditions.checkState(n.isVar());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(n.isVar());    	compilable	  [FE]  IllegalStateException  	42	2	replace
157	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.isVar());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(n.isVar());    	compilable	  [FE]  IllegalStateException  	42	2	replace
158	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.isVar());  [FE]  IllegalStateException  [FE]                            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.isVar());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(n.isVar());    	compilable	  [FE]  IllegalStateException  	42	2	replace
159	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Node  assign  =  n.getAncestor(2);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(2);    Node  assign  =  n.getAncestor(2);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	28	None	add
160	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(2);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(2);    Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(2);	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
161	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(2);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(2);    Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(2);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	28	None	add
162	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(2);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(2);    Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(2);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	28	None	add
163	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(2);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(2);    Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(2);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	28	None	add
164	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(n.getAncestor(2));  [CE]  cannot  find  symbol  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(n.getAncestor(2));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(2);    Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(n.getAncestor(2));	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
165	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.getAncestor(2));  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.getAncestor(2));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(2);    Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.getAncestor(2));	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	28	None	add
166	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(n.getFirstChild());  [CE]  cannot  find  symbol  [FE]                  NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(n.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(2);    Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(n.getFirstChild());	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
167	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Node  assign  =  n.getAncestor(3);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Node  assign  =  n.getAncestor(3);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	30	None	add
168	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(3));  Node  assign  =  n.getAncestor(3);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(3));  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Preconditions.checkState(n.hasAncestor(3));  Node  assign  =  n.getAncestor(3);	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
169	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(3);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(3);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	30	None	add
170	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.getAncestor(3)!=  null);  Node  assign  =  n.getAncestor(3);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.getAncestor(3)!=  null);  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Preconditions.checkState(n.getAncestor(3)!=  null);  Node  assign  =  n.getAncestor(3);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	30	None	add
171	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(3));  var.addChildToBack(n.getAncestor(3));  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(3));  var.addChildToBack(n.getAncestor(3));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Preconditions.checkState(n.hasAncestor(3));  var.addChildToBack(n.getAncestor(3));	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
172	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.getAncestor(3)  ==  null);  Node  assign  =  n.getAncestor(3);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.getAncestor(3)  ==  null);  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Preconditions.checkState(n.getAncestor(3)  ==  null);  Node  assign  =  n.getAncestor(3);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	30	None	add
173	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.getAncestor(3));  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.getAncestor(3));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.getAncestor(3));	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	30	None	add
174	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(3));  var.addChildToBack(n.getFirstChild());  [CE]  cannot  find  symbol  [FE]                  NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(3));  var.addChildToBack(n.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Preconditions.checkState(n.hasAncestor(3));  var.addChildToBack(n.getFirstChild());	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
175	[BUG]  [BUGGY]  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(1);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    Node    assign    =    n.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
176	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(1);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    Node    assign    =    n.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
177	[BUG]  [BUGGY]  Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(1);  [CE]  cannot  find  symbol  parent  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    Node    assign    =    n.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol  parent	93	None	replace
178	[BUG]  [BUGGY]  Node  assign  =  varNode.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  varNode.getAncestor(1);  [CE]  cannot  find  symbol  varNode  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  varNode.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  varNode.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  varNode.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  varNode.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    Node    assign    =    n.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol  varNode	93	None	replace
179	[BUG]  [BUGGY]  Node  assign  =  next.getAssignedChild();  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  next.getAssignedChild();	  Node    assign    =    parent.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
180	[BUG]  [BUGGY]  Node  assign  =  varNode.getAssignedChild();  [CE]  cannot  find  symbol  varNode  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  varNode.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  varNode.getAssignedChild();	  Node    assign    =    parent.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol  varNode	12	None	replace
181	[BUG]  [BUGGY]  Node  assign  =  endNode.getAssignedChild();  [CE]  cannot  find  symbol  endNode  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  endNode.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  endNode.getAssignedChild();	  Node    assign    =    parent.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol  endNode	12	None	replace
182	[BUG]  [BUGGY]  Node  assign  =  lastNode.getAssignedChild();  [CE]  cannot  find  symbol  lastNode  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  lastNode.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  lastNode.getAssignedChild();	  Node    assign    =    parent.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol  lastNode	12	None	replace
183	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.removeLastChild();  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.removeLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.removeLastChild();	  Node    assign    =    n.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
184	[BUG]  [BUGGY]  Node  assign  =  parent.removeLastChild();  [CE]  cannot  find  symbol  parent  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.removeLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.removeLastChild();	  Node    assign    =    n.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol  parent	51	None	replace
185	[BUG]  [BUGGY]  Node  assign  =  n.removeLastChild()  +  1;  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeLastChild()  +  1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeLastChild()  +  1;	  Node    assign    =    n.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
186	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
187	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
188	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
189	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
190	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
191	[BUG]  [BUGGY]  Node  assign  =  collapse.getAssignedChild();  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.getAssignedChild();	  Node    assign    =    nodesToCollapse.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
192	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.cloneTree().getAssignedChild();  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.cloneTree().getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.cloneTree().getAssignedChild();	  Node    assign    =    nodesToCollapse.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
193	[BUG]  [BUGGY]  Node  assign  =  collapsesToCollapse.getAssignedChild();  [CE]  cannot  find  symbol  collapsesToCollapse  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsesToCollapse.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsesToCollapse.getAssignedChild();	  Node    assign    =    nodesToCollapse.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol  collapsesToCollapse	11	None	replace
194	[BUG]  [BUGGY]  Node  assign  =  collapses.getAssignedChild();  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapses.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapses.getAssignedChild();	  Node    assign    =    nodesToCollapse.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
195	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	67	None	replace
196	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(3);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getAncestor(3);	  Node    assign    =    n.getAncestor(3);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
197	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(0);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getAncestor(0);	  Node    assign    =    n.getAncestor(3);    	compilable	  [FE]  IllegalStateException  	31	2	replace
198	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(0);  [FE]  IllegalStateException  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(0);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(0);	  Node    assign    =    n.getAncestor(3);    	compilable	  [FE]  IllegalStateException  	31	2	replace
199	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Node  assign  =  next.getFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	6	None	add
200	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Node  assign  =  next.getLastChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	6	None	add
201	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getLastChild();  Preconditions.checkState(n.hasChildren());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getLastChild();  Preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Node  assign  =  next.getLastChild();  Preconditions.checkState(n.hasChildren());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	6	None	add
202	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  Preconditions.checkState(n.hasChildren());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  Preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Node  assign  =  next.getFirstChild();  Preconditions.checkState(n.hasChildren());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	6	None	add
203	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  preconditions.checkState(n.hasChildren());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Node  assign  =  next.getFirstChild();  preconditions.checkState(n.hasChildren());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	6	None	add
204	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  var.addChildToBack(n.removeFirstChild());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  var.addChildToBack(n.removeFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Node  assign  =  next.getFirstChild();  var.addChildToBack(n.removeFirstChild());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	6	None	add
205	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getLastChild();  Preconditions.checkState(a.isVar());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getLastChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Node  assign  =  next.getLastChild();  Preconditions.checkState(a.isVar());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	6	None	add
206	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  Preconditions.checkState(a.isVar());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Node  assign  =  next.getFirstChild();  Preconditions.checkState(a.isVar());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	6	None	add
207	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  collapses);  [CE]  cannot  find  symbol  parent  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  collapses);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  collapses);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  cannot  find  symbol  parent	96	None	replace
208	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodesToCollapse,  collapses);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Set<Node>,List<Collapse>)  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodesToCollapse,  collapses);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  nodesToCollapse,  collapses);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Set<Node>,List<Collapse>)	96	None	replace
209	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodesToCollapse);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Set<Node>)  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodesToCollapse);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  nodesToCollapse);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Set<Node>)	96	None	replace
210	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  collapses);  [CE]  cannot  find  symbol  root  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  collapses);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  root,  collapses);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  cannot  find  symbol  root	96	None	replace
211	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  collapses,  nodesToCollapse);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,List<Collapse>,Set<Node>)  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  collapses,  nodesToCollapse);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  collapses,  nodesToCollapse);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,List<Collapse>,Set<Node>)	96	None	replace
212	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  collapses,  parent);  [CE]  cannot  find  symbol  parent  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  collapses,  parent);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  collapses,  parent);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  cannot  find  symbol  parent	96	None	replace
213	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.collapses);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,List<Collapse>)  [FE]                                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.collapses);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  this.collapses);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,List<Collapse>)	96	None	replace
214	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Node  assign  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Node  assign  =  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Node  assign  =  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Node    assign    =    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	48	None	replace
215	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  Node  assign  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  Node  assign  =  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  Node  assign  =  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Node    assign    =    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	48	None	replace
216	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Node  assign  =  n.removeLastChild();  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Node  assign  =  n.removeLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Node  assign  =  n.removeLastChild();	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Node    assign    =    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	48	None	replace
217	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c  }  Node  assign  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c  }  Node  assign  =  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1;a=2;var  c  }  Node  assign  =  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Node    assign    =    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	48	None	replace
218	[BUG]  [BUGGY]  Node  assign  =  n.getAssignedValue()  /  1;  [CE]  cannot  find  symbol  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAssignedValue()  /  1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAssignedValue()  /  1;	  Node    assign    =    n.getAssignedValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
219	[BUG]  [BUGGY]  Node  assign  =  n.getAssignedValue(),  b  +  1;  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAssignedValue(),  b  +  1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAssignedValue(),  b  +  1;	  Node    assign    =    n.getAssignedValue()    +    1;    	non-compiled	[CE]  ';'  expected	27	None	replace
220	[BUG]  [BUGGY]  Node  assign  =  n.getAssignedValue()  *  1;  [CE]  cannot  find  symbol  [FE]                                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAssignedValue()  *  1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAssignedValue()  *  1;	  Node    assign    =    n.getAssignedValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
221	[BUG]  [BUGGY]  Node  assign  =  n.getAssignedValue(),  c  +  1;  [CE]  ';'  expected  [FE]                                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAssignedValue(),  c  +  1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAssignedValue(),  c  +  1;	  Node    assign    =    n.getAssignedValue()    +    1;    	non-compiled	[CE]  ';'  expected	27	None	replace
222	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getAssignedValue()  +  1;  [CE]  cannot  find  symbol  [FE]                                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getAssignedValue()  +  1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getAssignedValue()  +  1;	  Node    assign    =    n.getAssignedValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
223	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(1));  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(1));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(1));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(1));    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
224	[BUG]  [BUGGY]  Preconditions.checkState(n.hasAncestor(1));  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasAncestor(1));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasAncestor(1));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(1));    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
225	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(1));    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
226	[BUG]  [BUGGY]  Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  [CE]  cannot  find  symbol  parent  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(1));    	non-compiled	[CE]  cannot  find  symbol  parent	65	None	replace
227	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(1);  Preconditions.checkState(var.hasAncestor(1));  [CE]  cannot  find  symbol  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(1);  Preconditions.checkState(var.hasAncestor(1));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(1);  Preconditions.checkState(var.hasAncestor(1));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(1));    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
228	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	44	None	replace
229	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  b=1  }	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	44	None	replace
230	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	44	None	replace
231	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	77	2	replace
232	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getNext();  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	77	2	replace
233	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()!=  Token.FUNCTION);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	77	2	replace
234	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION);  Node  assign  =  n.getParent();  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()!=  Token.FUNCTION);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	77	2	replace
235	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EMPTY);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()  ==  Token.EMPTY);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	77	2	replace
236	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EMPTY);  Node  assign  =  n.getParent();  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EMPTY);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.EMPTY);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	77	2	replace
237	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
238	[BUG]  [BUGGY]  Preconditions.checkState(n.hasAncestor(2));  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasAncestor(2));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasAncestor(2));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
239	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(2));  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(2));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(2));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
240	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(assign.hasAncestor(2));  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(assign.hasAncestor(2));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(2);  Preconditions.checkState(assign.hasAncestor(2));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
241	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  [CE]  cannot  find  symbol  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
242	[BUG]  [BUGGY]  Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  [CE]  cannot  find  symbol  parent  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    	non-compiled	[CE]  cannot  find  symbol  parent	64	None	replace
243	[BUG]  [BUGGY]  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(2);  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(1));    Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
244	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(2);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(1));    Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
245	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  nodesToCollapse.getAncestor(2);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  nodesToCollapse.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  nodesToCollapse.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(1));    Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
246	[BUG]  [BUGGY]  Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(2);  [CE]  cannot  find  symbol  parent  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(1));    Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  cannot  find  symbol  parent	114	None	replace
247	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	59	None	replace
248	[BUG]  [BUGGY]  c  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  c  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	c  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	59	None	replace
249	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	59	None	replace
250	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	59	None	replace
251	[BUG]  [BUGGY]  ASSIGNED:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  ASSIGNED:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	ASSIGNED:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	59	None	replace
252	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.GETPROP);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	80	2	replace
253	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  assign  =  n.getParent();  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.GETPROP);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	80	2	replace
254	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.GETPROP);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	80	2	replace
255	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  assign  =  n.getNext();  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.GETPROP);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	80	2	replace
256	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()!=  Token.GETPROP);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.GETPROP);    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	80	2	replace
257	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP);  Node  assign  =  n.getParent();  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()!=  Token.GETPROP);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.GETPROP);    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	80	2	replace
258	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.SETPROP);  Node  assign  =  n.getParent();  [CE]  cannot  find  symbol  SETPROP  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.SETPROP);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.SETPROP);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.GETPROP);    Node    assign    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  SETPROP	80	None	replace
259	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	85	None	replace
260	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	85	None	replace
261	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	85	None	replace
262	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	85	None	replace
263	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	85	None	replace
264	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.hasChildren());  Node  assign  =  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Node    assign    =    n.removeFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	43	1	replace
265	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.removeFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren());  Node  assign  =  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Node    assign    =    n.removeFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	43	1	replace
266	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren();)  {  Node  assign  =  n.removeFirstChild();  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren();)  {  Node  assign  =  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren();)  {  Node  assign  =  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Node    assign    =    n.removeFirstChild();    	non-compiled	[CE]  ')'  expected	43	None	replace
267	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	83	None	replace
268	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	83	None	replace
269	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(var.getAncestor(2)!=  null);  Node  assign  =  var.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(var.getAncestor(2)!=  null);  Node  assign  =  var.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  IllegalStateException  	90	2	replace
270	[BUG]  [BUGGY]  Preconditions.checkState(var.getAncestor(2)!=  null);  Node  assign  =  var.getAncestor(2);  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(var.getAncestor(2)!=  null);  Node  assign  =  var.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(var.getAncestor(2)!=  null);  Node  assign  =  var.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  IllegalStateException  	90	2	replace
271	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  NullPointerException  	90	2	replace
272	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(2);  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  NullPointerException  	90	2	replace
273	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(3)!=  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(3)!=  null);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  IllegalStateException  	90	2	replace
274	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(3)!=  null);  Node  assign  =  n.getAncestor(2);  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(3)!=  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(3)!=  null);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  IllegalStateException  	90	2	replace
275	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  next.getLastChild();	  Node    assign    =    parent.getLastChild();    	compilable	  [FE]  NullPointerException  	21	2	replace
276	[BUG]  [BUGGY]  Node  assign  =  next.getLastChild();  [FE]  NullPointerException  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  next.getLastChild();	  Node    assign    =    parent.getLastChild();    	compilable	  [FE]  NullPointerException  	21	2	replace
277	[BUG]  [BUGGY]  Node  assign  =  endNode.getLastChild();  [CE]  cannot  find  symbol  endNode  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  endNode.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  endNode.getLastChild();	  Node    assign    =    parent.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  endNode	21	None	replace
278	[BUG]  [BUGGY]  Node  assign  =  lastNode.getLastChild();  [CE]  cannot  find  symbol  lastNode  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  lastNode.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  lastNode.getLastChild();	  Node    assign    =    parent.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  lastNode	21	None	replace
279	[BUG]  [BUGGY]  Node  assign  =  varNode.getLastChild();  [CE]  cannot  find  symbol  varNode  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  varNode.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  varNode.getLastChild();	  Node    assign    =    parent.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  varNode	21	None	replace
280	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getfirstChild();  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getfirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getfirstChild();	  Node    assign    =    n.getfirstChild();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
281	[BUG]  [BUGGY]  Node  assign  =  next.getAssignedValue();  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getAssignedValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  next.getAssignedValue();	  Node    assign    =    parent.getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
282	[BUG]  [BUGGY]  Node  assign  =  b.getAssignedValue();  [CE]  cannot  find  symbol  b  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  b.getAssignedValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  b.getAssignedValue();	  Node    assign    =    parent.getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol  b	23	None	replace
283	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(var.getAncestor(2)  ==  null);  Node  assign  =  var.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(var.getAncestor(2)  ==  null);  Node  assign  =  var.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)    ==    null);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  IllegalStateException  	92	2	replace
284	[BUG]  [BUGGY]  Preconditions.checkState(var.getAncestor(2)  ==  null);  Node  assign  =  var.getAncestor(2);  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(var.getAncestor(2)  ==  null);  Node  assign  =  var.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(var.getAncestor(2)  ==  null);  Node  assign  =  var.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)    ==    null);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  IllegalStateException  	92	2	replace
285	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(3)  ==  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(3)  ==  null);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)    ==    null);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  NullPointerException  	92	2	replace
286	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(3)  ==  null);  Node  assign  =  n.getAncestor(2);  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(3)  ==  null);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(3)  ==  null);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)    ==    null);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  NullPointerException  	92	2	replace
287	[BUG]  [BUGGY]  Node  assign  =  collapses.getAssignedValue();  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapses.getAssignedValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapses.getAssignedValue();	  Node    assign    =    collapse.getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
288	[BUG]  [BUGGY]  Node  assign  =  collapsed.getAssignedValue();  [CE]  cannot  find  symbol  collapsed  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsed.getAssignedValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsed.getAssignedValue();	  Node    assign    =    collapse.getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol  collapsed	82	None	replace
289	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  IllegalStateException  	78	2	replace
290	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  IllegalStateException  	78	2	replace
291	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [CE]  cannot  find  symbol  assign  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	non-compiled	[CE]  cannot  find  symbol  assign	78	None	replace
292	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  IllegalStateException  	78	2	replace
293	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  IllegalStateException  	78	2	replace
294	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  ||  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  ||  NodeUtil.isFunctionDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  NullPointerException  	78	2	replace
295	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  ||  NodeUtil.isFunctionDeclaration(n));  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  ||  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  ||  NodeUtil.isFunctionDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  NullPointerException  	78	2	replace
296	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getLastChild();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  IllegalStateException  	78	2	replace
297	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  IllegalStateException  	78	2	replace
298	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(var.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(var.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  IllegalStateException  	78	2	replace
299	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(var.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(var.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(var.hasChildren()  &&  NodeUtil.isFunctionDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  IllegalStateException  	78	2	replace
300	[BUG]  [BUGGY]  n.removeChild(varNode);  [CE]  cannot  find  symbol  varNode  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  n.removeChild(varNode);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	n.removeChild(varNode);	  n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  varNode	108	None	replace
301	[BUG]  [BUGGY]  n.removeChild(assign);  [CE]  cannot  find  symbol  assign  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  n.removeChild(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	n.removeChild(assign);	  n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  assign	108	None	replace
302	[BUG]  [BUGGY]  n.removeChild(c);  [CE]  cannot  find  symbol  c  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  n.removeChild(c);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	n.removeChild(c);	  n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  c	108	None	replace
303	[BUG]  [BUGGY]  n.removeChild(var);  [CE]  cannot  find  symbol  assign  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  n.removeChild(var);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	n.removeChild(var);	  n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  assign	108	None	replace
304	[BUG]  [BUGGY]  n.removeChild(b);  [CE]  cannot  find  symbol  b  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  n.removeChild(b);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	n.removeChild(b);	  n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  b	108	None	replace
305	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(2);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getAncestor(2);	  Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
306	[BUG]  [BUGGY]  Node  assignNode  =  n.getLastChild();  [CE]  cannot  find  symbol  assign  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assignNode  =  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assignNode  =  n.getLastChild();	  Node    assignNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assign	97	None	replace
307	[BUG]  [BUGGY]  Node  assignNode  =  nodesToCollapse.getFirstChild();  [CE]  cannot  find  symbol  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assignNode  =  nodesToCollapse.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assignNode  =  nodesToCollapse.getFirstChild();	  Node    assignNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
308	[BUG]  [BUGGY]  Node  assignNode  =  n.removeFirstChild();  [CE]  cannot  find  symbol  assign  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assignNode  =  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assignNode  =  n.removeFirstChild();	  Node    assignNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assign	97	None	replace
309	[BUG]  [BUGGY]  Node  assignNode  =  parent.getFirstChild();  [CE]  cannot  find  symbol  parent  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assignNode  =  parent.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assignNode  =  parent.getFirstChild();	  Node    assignNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  parent	97	None	replace
310	[BUG]  [BUGGY]  Node  assignNode  =  endNode.getFirstChild();  [CE]  cannot  find  symbol  endNode  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assignNode  =  endNode.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assignNode  =  endNode.getFirstChild();	  Node    assignNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  endNode	97	None	replace
311	[BUG]  [BUGGY]  Node  assignNode  =  startNode.getFirstChild();  [CE]  cannot  find  symbol  startNode  [FE]                                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assignNode  =  startNode.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assignNode  =  startNode.getFirstChild();	  Node    assignNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  startNode	97	None	replace
312	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasOneChild());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	111	2	replace
313	[BUG]  [BUGGY]  Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getParent();  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasOneChild());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	111	2	replace
314	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasOneChild());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	111	2	replace
315	[BUG]  [BUGGY]  Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getNext();  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasOneChild());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	111	2	replace
316	[BUG]  [BUGGY]  Preconditions.checkState(n.hasOneChild(),  n.hasNext());  Node  assign  =  n.getParent();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasOneChild(),  n.hasNext());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasOneChild(),  n.hasNext());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasOneChild());    Node    assign    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
317	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasOneChild()  ||  n.hasOneChild());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.hasOneChild()  ||  n.hasOneChild());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasOneChild());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	111	2	replace
318	[BUG]  [BUGGY]  Preconditions.checkState(n.hasOneChild()  ||  n.hasOneChild());  Node  assign  =  n.getParent();  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasOneChild()  ||  n.hasOneChild());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasOneChild()  ||  n.hasOneChild());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasOneChild());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	111	2	replace
319	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.getFirstChild();  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.getFirstChild();  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  n.getFirstChild();  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	106	None	replace
320	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >=  n.getLastChild();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >=  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >=  n.getLastChild();	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    n.getLastChild();    	non-compiled	[CE]  not  a  statement	100	None	replace
321	[BUG]  [BUGGY]  Node  assign  =  collapse.removeFirstChild();  [CE]  cannot  find  symbol  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.removeFirstChild();	  Node    assign    =    nodesToCollapse.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
322	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.nextChild();  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.nextChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.nextChild();	  Node    assign    =    nodesToCollapse.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
323	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(a.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(a.hasChildren());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	39	None	replace
324	[BUG]  [BUGGY]  Preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.hasChildren());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	39	None	replace
325	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(a.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getNext();  Preconditions.checkState(a.hasChildren());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	39	None	replace
326	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(a.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Preconditions.checkState(a.hasChildren());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	39	None	replace
327	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  assign  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  assign	17	None	replace
328	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()!=  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()!=  Token.FUNCTION);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()!=  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	17	None	replace
329	[BUG]  [BUGGY]  Preconditions.checkState(f.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  f  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(f.getType()  ==  Token.FUNCTION);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(f.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  f	17	None	replace
330	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  b.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  b.getType()  ==  Token.FUNCTION);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  b.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	17	None	replace
331	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  c.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  c.getType()  ==  Token.FUNCTION);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  c.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	17	None	replace
332	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  c  [FE]                                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.FUNCTION);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(c.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  c	17	None	replace
333	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  NullPointerException  	41	2	replace
334	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getNext();  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  NullPointerException  	41	2	replace
335	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  IllegalStateException  	41	2	replace
336	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  assign  =  n.getNext();  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  IllegalStateException  	41	2	replace
337	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getParent()!=  null);  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  IllegalStateException  	41	2	replace
338	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  assign  =  n.getNext();  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getParent()!=  null);  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  IllegalStateException  	41	2	replace
339	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  >=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  b=1  >=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  b=1  >=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	86	None	replace
340	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getLastChild();	  Node    assign    =    n.getLastChild();    Node    assign    =    n.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	53	1	replace
341	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getLastChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getLastChild();	  Node    assign    =    n.getLastChild();    Node    assign    =    n.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	53	1	replace
342	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren();)  {  Node  assign  =  n.getLastChild();  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren();)  {  Node  assign  =  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren();)  {  Node  assign  =  n.getLastChild();	  Node    assign    =    n.getLastChild();    Node    assign    =    n.getLastChild();    	non-compiled	[CE]  ')'  expected	53	None	replace
343	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getFirstChild();	  Node    assign    =    n.getLastChild();    Node    assign    =    n.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	53	1	replace
344	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getFirstChild();	  Node    assign    =    n.getLastChild();    Node    assign    =    n.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	53	1	replace
345	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >=  n.removeFirstChild();  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >=  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >=  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	119	None	replace
346	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  n.removeFirstChild();  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	119	None	replace
347	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  >>  n.removeFirstChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  >>  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  >>  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	119	None	replace
348	[BUG]  [BUGGY]  Node  assign  =  parent.getPreviousChild();  [CE]  cannot  find  symbol  parent  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.getPreviousChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.getPreviousChild();	  Node    assign    =    n.getPreviousChild();    	non-compiled	[CE]  cannot  find  symbol  parent	89	None	replace
349	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getPreviousChild();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getPreviousChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getPreviousChild();	  Node    assign    =    n.getPreviousChild();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
350	[BUG]  [BUGGY]  Node  assign  =  n.getNextChild();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNextChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getNextChild();	  Node    assign    =    n.getPreviousChild();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
351	[BUG]  [BUGGY]  Node  assign  =  next.getPreviousChild();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getPreviousChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  next.getPreviousChild();	  Node    assign    =    n.getPreviousChild();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
352	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(1);    	compilable	  [FE]  IllegalStateException  	94	2	replace
353	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(1);  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(1);    	compilable	  [FE]  IllegalStateException  	94	2	replace
354	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(1);    	compilable	  [FE]  IllegalStateException  	94	2	replace
355	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(1);  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(1);    	compilable	  [FE]  IllegalStateException  	94	2	replace
356	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(1);    	compilable	  [FE]  NullPointerException  	94	2	replace
357	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(1);  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(2)  ==  null);  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(1);    	compilable	  [FE]  NullPointerException  	94	2	replace
358	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(var.getAncestor(2)!=  null);  Node  assign  =  var.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(var.getAncestor(2)!=  null);  Node  assign  =  var.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(1);    	compilable	  [FE]  IllegalStateException  	94	2	replace
359	[BUG]  [BUGGY]  Preconditions.checkState(var.getAncestor(2)!=  null);  Node  assign  =  var.getAncestor(1);  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(var.getAncestor(2)!=  null);  Node  assign  =  var.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(var.getAncestor(2)!=  null);  Node  assign  =  var.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(1);    	compilable	  [FE]  IllegalStateException  	94	2	replace
360	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(1)  ==  null);  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(1)  ==  null);  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(1);    	compilable	  [FE]  NullPointerException  	94	2	replace
361	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(1)  ==  null);  Node  assign  =  n.getAncestor(1);  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(1)  ==  null);  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(1)  ==  null);  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(1);    	compilable	  [FE]  NullPointerException  	94	2	replace
362	[BUG]  [BUGGY]  Node  assign  =  varNodesToCollapse.getAssignedValue();  [CE]  cannot  find  symbol  varNodesToCollapse  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  varNodesToCollapse.getAssignedValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  varNodesToCollapse.getAssignedValue();	  Node    assign    =    nodesToCollapse.getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol  varNodesToCollapse	22	None	replace
363	[BUG]  [BUGGY]  Node  assign  =  collapsesToCollapse.getAssignedValue();  [CE]  cannot  find  symbol  collapsesToCollapse  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsesToCollapse.getAssignedValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsesToCollapse.getAssignedValue();	  Node    assign    =    nodesToCollapse.getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol  collapsesToCollapse	22	None	replace
364	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Node  assign  =  n.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Node  assign  =  n.getNext();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	19	None	add
365	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getNext();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	19	None	add
366	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&!NodeUtil.isFunctionAnonymous(n));  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&!NodeUtil.isFunctionAnonymous(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.hasChildren()  &&!NodeUtil.isFunctionAnonymous(n));	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
367	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	19	None	add
368	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&!NodeUtil.isName(n.getFirstChild()));  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&!NodeUtil.isName(n.getFirstChild()));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.hasChildren()  &&!NodeUtil.isName(n.getFirstChild()));	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
369	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&!NodeUtil.isFunctionDeclaration(n));  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&!NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.hasChildren()  &&!NodeUtil.isFunctionDeclaration(n));	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	19	None	add
370	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  assign  =  n.getNext();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	19	None	add
371	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&!NodeUtil.isAssignmentOp(n));  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&!NodeUtil.isAssignmentOp(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.hasChildren()  &&!NodeUtil.isAssignmentOp(n));	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	19	None	add
372	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	84	None	replace
373	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(4);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(4);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getAncestor(4);	  Node    assign    =    n.getAncestor(4);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
374	[BUG]  [BUGGY]  Node  assign  =  collapse.get(n.getLastChild());  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.get(n.getLastChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.get(n.getLastChild());	  Node    assign    =    nodesToCollapse.get(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
375	[BUG]  [BUGGY]  Node  assign  =  n.get(n.getLastChild());  [CE]  cannot  find  symbol  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.get(n.getLastChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.get(n.getLastChild());	  Node    assign    =    nodesToCollapse.get(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
376	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getLastChild(),  n.getFirstChild());  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getLastChild(),  n.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.get(n.getLastChild(),  n.getFirstChild());	  Node    assign    =    nodesToCollapse.get(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
377	[BUG]  [BUGGY]  Node  assign  =  collapses.get(n.getLastChild());  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapses.get(n.getLastChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapses.get(n.getLastChild());	  Node    assign    =    nodesToCollapse.get(n.getLastChild());    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	98	None	replace
378	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getLastChild(),  varNode);  [CE]  cannot  find  symbol  varNode  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getLastChild(),  varNode);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.get(n.getLastChild(),  varNode);	  Node    assign    =    nodesToCollapse.get(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  varNode	98	None	replace
379	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getLastChild(),  b);  [CE]  cannot  find  symbol  b  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getLastChild(),  b);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.get(n.getLastChild(),  b);	  Node    assign    =    nodesToCollapse.get(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  b	98	None	replace
380	[BUG]  [BUGGY]  Node  parent  =  assign.getParent();  [CE]  cannot  find  symbol  assign  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  parent  =  assign.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  parent  =  assign.getParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  assign	109	None	replace
381	[BUG]  [BUGGY]  Node  parent  =  n.getNext();  [CE]  cannot  find  symbol  assign  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  parent  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  parent  =  n.getNext();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  assign	109	None	replace
382	[BUG]  [BUGGY]  Node  parent  =  nodesToCollapse.getParent();  [CE]  cannot  find  symbol  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  parent  =  nodesToCollapse.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  parent  =  nodesToCollapse.getParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
383	[BUG]  [BUGGY]  Node  parent  =  assignment.getParent();  [CE]  cannot  find  symbol  assignment  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  parent  =  assignment.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  parent  =  assignment.getParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  assignment	109	None	replace
384	[BUG]  [BUGGY]  Node  parent  =  n.getParentNode();  [CE]  cannot  find  symbol  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  parent  =  n.getParentNode();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  parent  =  n.getParentNode();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
385	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getAssignmentChild();  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getAssignmentChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getAssignmentChild();	  Node    assign    =    n.getAssignmentChild();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
386	[BUG]  [BUGGY]  Node  assign  =  parent.getAssignmentChild();  [CE]  cannot  find  symbol  parent  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.getAssignmentChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.getAssignmentChild();	  Node    assign    =    n.getAssignmentChild();    	non-compiled	[CE]  cannot  find  symbol  parent	13	None	replace
387	[BUG]  [BUGGY]  Node  assign  =  this.assignment.getAssignmentChild();  [CE]  cannot  find  symbol  assignment  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  this.assignment.getAssignmentChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  this.assignment.getAssignmentChild();	  Node    assign    =    n.getAssignmentChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	13	None	replace
388	[BUG]  [BUGGY]  Node  assign  =  getAssignmentChild(n.getAssignmentChild());  [CE]  cannot  find  symbol  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  getAssignmentChild(n.getAssignmentChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  getAssignmentChild(n.getAssignmentChild());	  Node    assign    =    n.getAssignmentChild();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
389	[BUG]  [BUGGY]  Node  assign  =  endNode.getAssignmentChild();  [CE]  cannot  find  symbol  endNode  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  endNode.getAssignmentChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  endNode.getAssignmentChild();	  Node    assign    =    n.getAssignmentChild();    	non-compiled	[CE]  cannot  find  symbol  endNode	13	None	replace
390	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  n.removeFirstChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	121	None	replace
391	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  n.removeFirstChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  ==  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	121	None	replace
392	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  ==  n.removeFirstChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  ==  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  ==  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	121	None	replace
393	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  n.removeFirstChild();  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  n.removeFirstChild();  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  n.removeFirstChild();  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	121	None	replace
394	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  n.removeLastChild();  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  n.removeLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  n.removeLastChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	121	None	replace
395	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	49	None	replace
396	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	36	2	replace
397	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getParent();  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	36	2	replace
398	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	36	2	replace
399	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getNext();  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getNext();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	36	2	replace
400	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren(),  n.hasChildren());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.hasChildren(),  n.hasChildren());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	36	2	replace
401	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren(),  n.hasChildren());  Node  assign  =  n.getParent();  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren(),  n.hasChildren());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren(),  n.hasChildren());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	36	2	replace
402	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren()  &&  n.hasChildren());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.hasChildren()  &&  n.hasChildren());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	36	2	replace
403	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren()  &&  n.hasChildren());  Node  assign  =  n.getParent();  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren()  &&  n.hasChildren());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren()  &&  n.hasChildren());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	36	2	replace
404	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getLastChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getLastChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getLastChild();  Result:  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	102	None	replace
405	[BUG]  [BUGGY]  AssertionFailedError:  function  f(a)  {  var  b=1;a=2;var  c=1  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError:  function  f(a)  {  var  b=1;a=2;var  c=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError:  function  f(a)  {  var  b=1;a=2;var  c=1	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	102	None	replace
406	[BUG]  [BUGGY]  AssertionFailedError:  function  f(a)  {  var  b=1;a=2;Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError:  function  f(a)  {  var  b=1;a=2;Result:  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError:  function  f(a)  {  var  b=1;a=2;Result:  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	102	None	replace
407	[BUG]  [BUGGY]  Node  assign  =  n.get(n.getFirstChild());  [CE]  cannot  find  symbol  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.get(n.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.get(n.getFirstChild());	  Node    assign    =    nodesToCollapse.get(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
408	[BUG]  [BUGGY]  Node  assign  =  collapse.get(n.getFirstChild());  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.get(n.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.get(n.getFirstChild());	  Node    assign    =    nodesToCollapse.get(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
409	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getFirstChild(),  n.getLastChild());  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getFirstChild(),  n.getLastChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.get(n.getFirstChild(),  n.getLastChild());	  Node    assign    =    nodesToCollapse.get(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
410	[BUG]  [BUGGY]  Node  assign  =  collapses.get(n.getFirstChild());  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapses.get(n.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapses.get(n.getFirstChild());	  Node    assign    =    nodesToCollapse.get(n.getFirstChild());    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	99	None	replace
411	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getFirstChild(),  varNode);  [CE]  cannot  find  symbol  varNode  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getFirstChild(),  varNode);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.get(n.getFirstChild(),  varNode);	  Node    assign    =    nodesToCollapse.get(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  varNode	99	None	replace
412	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	87	None	replace
413	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  function	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	87	None	replace
414	[BUG]  [BUGGY]  Preconditions.checkState(n.hasAncestor(2));  n.removeChild(a);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasAncestor(2));  n.removeChild(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasAncestor(2));  n.removeChild(a);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
415	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  var.removeChild(a);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  var.removeChild(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  var.removeChild(a);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
416	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  n.removeChild(a);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  n.removeChild(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  n.removeChild(a);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
417	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  var.removeChild(a);  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  var.removeChild(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  var.removeChild(a);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
418	[BUG]  [BUGGY]  Node  assign  =  c.getAssignedValue();  [CE]  cannot  find  symbol  c  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  c.getAssignedValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  c.getAssignedValue();	  Node    assign    =    a.getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol  c	25	None	replace
419	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	75	2	replace
420	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  Node  assign  =  n.getParent();  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	75	2	replace
421	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  assign  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    Node    assign    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  assign	75	None	replace
422	[BUG]  [BUGGY]  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(2);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
423	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(2);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
424	[BUG]  [BUGGY]  Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(2);  [CE]  cannot  find  symbol  parent  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.getAncestor(1);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  cannot  find  symbol  parent	91	None	replace
425	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(1);  Preconditions.checkState(assign.hasAncestor(2));  Node  assign  =  n.getAncestor(2);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(1);  Preconditions.checkState(assign.hasAncestor(2));  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(1);  Preconditions.checkState(assign.hasAncestor(2));  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
426	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	54	None	replace
427	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	54	None	replace
428	[BUG]  [BUGGY]  Node  assign  =  collapse.cloneTree();  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.cloneTree();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.cloneTree();	  Node    assign    =    nodesToCollapse.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
429	[BUG]  [BUGGY]  Node  assign  =  collapse.nodesToCollapse.cloneTree();  [CE]  cannot  find  symbol  nodesToCollapse  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.nodesToCollapse.cloneTree();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.nodesToCollapse.cloneTree();	  Node    assign    =    nodesToCollapse.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  nodesToCollapse	4	None	replace
430	[BUG]  [BUGGY]  Node  assign  =  collapsesToCollapse.cloneTree();  [CE]  cannot  find  symbol  collapsesToCollapse  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsesToCollapse.cloneTree();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsesToCollapse.cloneTree();	  Node    assign    =    nodesToCollapse.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  collapsesToCollapse	4	None	replace
431	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.cloneTree();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.cloneTree();	  Node    assign    =    nodesToCollapse.cloneTree();    	compilable	  [FE]  IllegalStateException  	4	2	replace
432	[BUG]  [BUGGY]  Node  assign  =  n.cloneTree();  [FE]  IllegalStateException  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.cloneTree();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.cloneTree();	  Node    assign    =    nodesToCollapse.cloneTree();    	compilable	  [FE]  IllegalStateException  	4	2	replace
433	[BUG]  [BUGGY]  Node  assign  =  collapsed.cloneTree();  [CE]  cannot  find  symbol  collapsed  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsed.cloneTree();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsed.cloneTree();	  Node    assign    =    nodesToCollapse.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  collapsed	4	None	replace
434	[BUG]  [BUGGY]  Node  assign  =  collapses.cloneTree();  [CE]  cannot  find  symbol  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapses.cloneTree();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapses.cloneTree();	  Node    assign    =    nodesToCollapse.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
435	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Node  assign  =  n.getAncestor(4);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Node  assign  =  n.getAncestor(4);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Node  assign  =  n.getAncestor(4);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	33	None	add
436	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasAncestor(4));  Node  assign  =  n.getAncestor(4);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasAncestor(4));  Node  assign  =  n.getAncestor(4);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(n.hasAncestor(4));  Node  assign  =  n.getAncestor(4);	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
437	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(4);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(4);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(4);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	33	None	add
438	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.getAncestor(4)!=  null);  Node  assign  =  n.getAncestor(4);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.getAncestor(4)!=  null);  Node  assign  =  n.getAncestor(4);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(n.getAncestor(4)!=  null);  Node  assign  =  n.getAncestor(4);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	33	None	add
439	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasAncestor(4));  var.addChildToBack(n.getAncestor(4));  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasAncestor(4));  var.addChildToBack(n.getAncestor(4));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(n.hasAncestor(4));  var.addChildToBack(n.getAncestor(4));	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
440	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.getAncestor(4));  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.getAncestor(4));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.getAncestor(4));	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	33	None	add
441	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.getAncestor(4)  ==  null);  Node  assign  =  n.getAncestor(4);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.getAncestor(4)  ==  null);  Node  assign  =  n.getAncestor(4);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(n.getAncestor(4)  ==  null);  Node  assign  =  n.getAncestor(4);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	33	None	add
442	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasAncestor(4));  var.addChildToBack(n.getFirstChild());  [CE]  cannot  find  symbol  [FE]                  NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasAncestor(4));  var.addChildToBack(n.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(n.hasAncestor(4));  var.addChildToBack(n.getFirstChild());	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
443	[BUG]  [BUGGY]  Node  assign  =  getAssignedValue().getNext();  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  getAssignedValue().getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  getAssignedValue().getNext();	  Node    assign    =    getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
444	[BUG]  [BUGGY]  Node  assign  =  getAssignedValue().cloneTree();  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  getAssignedValue().cloneTree();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  getAssignedValue().cloneTree();	  Node    assign    =    getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
445	[BUG]  [BUGGY]  Node  assign  =  getAssignedValue(),  c;  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  getAssignedValue(),  c;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  getAssignedValue(),  c;	  Node    assign    =    getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
446	[BUG]  [BUGGY]  Node  assign  =  getAssignedValue(),  c);  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  getAssignedValue(),  c);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  getAssignedValue(),  c);	  Node    assign    =    getAssignedValue();    	non-compiled	[CE]  ';'  expected	124	None	replace
447	[BUG]  [BUGGY]  Node  assign  =  getAssignedValue().getFirstChild();  [CE]  cannot  find  symbol  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  getAssignedValue().getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  getAssignedValue().getFirstChild();	  Node    assign    =    getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
448	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	68	None	replace
449	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	68	None	replace
450	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result  r  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result  r  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result  r  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    Result    r    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	105	None	replace
451	[BUG]  [BUGGY]  Result  r  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result  r  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result  r  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    Result    r    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	105	None	replace
452	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getLastChild();  Result  r  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getLastChild();  Result  r  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getLastChild();  Result  r  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    Result    r    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	105	None	replace
453	[BUG]  [BUGGY]  AssertionFailedError  c  =  function  f(a)  {  var  b=1;a=2;Result:  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError  c  =  function  f(a)  {  var  b=1;a=2;Result:  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError  c  =  function  f(a)  {  var  b=1;a=2;Result:  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    Result    r    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	105	None	replace
454	[BUG]  [BUGGY]  Node  assign  =  startNode.getAssignedChild();  [CE]  cannot  find  symbol  startNode  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  startNode.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  startNode.getAssignedChild();	  Node    assign    =    node.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol  startNode	74	None	replace
455	[BUG]  [BUGGY]  Node  assign  =  this.node.getAssignedChild();  [CE]  cannot  find  symbol  node  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  this.node.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  this.node.getAssignedChild();	  Node    assign    =    node.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol  node	74	None	replace
456	[BUG]  [BUGGY]  Node  assign  =  collapse.getAncestor(1);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.getAncestor(1);	  Node    assign    =    nodesToCollapse.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
457	[BUG]  [BUGGY]  Node  assign  =  collapsesToCollapse.getAncestor(1);  [CE]  cannot  find  symbol  collapsesToCollapse  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsesToCollapse.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsesToCollapse.getAncestor(1);	  Node    assign    =    nodesToCollapse.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol  collapsesToCollapse	32	None	replace
458	[BUG]  [BUGGY]  Node  assign  =  varNodesToCollapse.getAncestor(1);  [CE]  cannot  find  symbol  varNodesToCollapse  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  varNodesToCollapse.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  varNodesToCollapse.getAncestor(1);	  Node    assign    =    nodesToCollapse.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol  varNodesToCollapse	32	None	replace
459	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  var.removeChild(a);  [CE]  cannot  find  symbol  a  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  var.removeChild(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  var.removeChild(a);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  a	112	None	replace
460	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(var);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(var);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    n.removeChild(a);    	compilable	  [FE]  RuntimeException  	112	2	replace
461	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(var);  [FE]  RuntimeException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(var);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(var);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    n.removeChild(a);    	compilable	  [FE]  RuntimeException  	112	2	replace
462	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.removeChild(a);  [CE]  cannot  find  symbol  a  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.removeChild(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.removeChild(a);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  a	112	None	replace
463	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(varNode);  [CE]  cannot  find  symbol  varNode  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(varNode);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(varNode);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  varNode	112	None	replace
464	[BUG]  [BUGGY]  Preconditions.checkState(n.hasOneChild());  [CE]  cannot  find  symbol  assign  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasOneChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasOneChild());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasOneChild());    Node    assign    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  assign	111	None	replace
465	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(var.hasOneChild());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(var.hasOneChild());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasOneChild());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	111	2	replace
466	[BUG]  [BUGGY]  Preconditions.checkState(var.hasOneChild());  Node  assign  =  n.getParent();  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(var.hasOneChild());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(var.hasOneChild());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasOneChild());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	111	2	replace
467	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Preconditions.checkState(n.hasChildren());  Node  assign  =  next.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Preconditions.checkState(n.hasChildren());  Node  assign  =  next.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Preconditions.checkState(n.hasChildren());  Node  assign  =  next.getFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	6	None	add
468	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Node  next  =  next.getFirstChild();  [CE]  variable  next  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Node  next  =  next.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Node  next  =  next.getFirstChild();	  	non-compiled	[CE]  variable  next  is  already  defined  in  method  applyCollapses()	6	None	add
469	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  Preconditions.checkState(a.hasChildren());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  Preconditions.checkState(a.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Node  assign  =  next.getFirstChild();  Preconditions.checkState(a.hasChildren());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	6	None	add
470	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  var.addChildToBack(assign);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Node  assign  =  next.getFirstChild();  var.addChildToBack(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Node  assign  =  next.getFirstChild();  var.addChildToBack(assign);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	6	None	add
471	[BUG]  [BUGGY]  Node  assign  =  n.get(nodesToCollapse.getFirstChild());  [CE]  cannot  find  symbol  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.get(nodesToCollapse.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.get(nodesToCollapse.getFirstChild());	  Node    assign    =    nodesToCollapse.get(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
472	[BUG]  [BUGGY]  Node  assign  =  collapsed.get(n.getFirstChild());  [CE]  cannot  find  symbol  collapsed  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsed.get(n.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsed.get(n.getFirstChild());	  Node    assign    =    nodesToCollapse.get(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  collapsed	99	None	replace
473	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getFirstChild(),  collapse);  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getFirstChild(),  collapse);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.get(n.getFirstChild(),  collapse);	  Node    assign    =    nodesToCollapse.get(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
474	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  n.removeFirstChild();  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  [Delete]  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    [Delete]    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	120	None	replace
475	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(NodeUtil.isGetProp(n));  Node  assign  =  n.getAncestor(2);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(NodeUtil.isGetProp(n));  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(2);    Preconditions.checkState(NodeUtil.isGetProp(n));  Node  assign  =  n.getAncestor(2);	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
476	[BUG]  [BUGGY]  Node  assign  =  getAssignedValue().removeFirstChild();  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  getAssignedValue().removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  getAssignedValue().removeFirstChild();	  Node    assign    =    getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
477	[BUG]  [BUGGY]  Node  assign  =  getAssignedValue().getLastChild();  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  getAssignedValue().getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  getAssignedValue().getLastChild();	  Node    assign    =    getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
478	[BUG]  [BUGGY]  Node  assign  =  getAssignedValue().removeChild(a);  [CE]  cannot  find  symbol  a  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  getAssignedValue().removeChild(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  getAssignedValue().removeChild(a);	  Node    assign    =    getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol  a	124	None	replace
479	[BUG]  [BUGGY]  Node  assign  =  n.replaceFirst(n,  varNode);  [CE]  cannot  find  symbol  varNode  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.replaceFirst(n,  varNode);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.replaceFirst(n,  varNode);	  Node    assign    =    n.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol  varNode	51	None	replace
480	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
481	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
482	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
483	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	67	None	replace
484	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	67	None	replace
485	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	67	None	replace
486	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	67	None	replace
487	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  >=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  >=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  >=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	67	None	replace
488	[BUG]  [BUGGY]  Node  assign  =  collapsed.getAncestor(1);  [CE]  cannot  find  symbol  collapsed  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsed.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsed.getAncestor(1);	  Node    assign    =    nodesToCollapse.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol  collapsed	32	None	replace
489	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  n.getLastChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1!=  n.getLastChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    n.getLastChild();    	non-compiled	[CE]  not  a  statement	123	None	replace
490	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  n.getLastChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  [Delete]  n.getLastChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    n.getLastChild();    	non-compiled	[CE]  not  a  statement	123	None	replace
491	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  >=  n.getLastChild();  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  >=  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  >=  n.getLastChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    n.getLastChild();    	non-compiled	[CE]  not  a  statement	123	None	replace
492	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  n.getLastChild();  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  ==  n.getLastChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    n.getLastChild();    	non-compiled	[CE]  not  a  statement	123	None	replace
493	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  not  a  statement	50	None	replace
494	[BUG]  [BUGGY]  Node  assign  =  node.getAssignmentChild();  [CE]  cannot  find  symbol  node  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  node.getAssignmentChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  node.getAssignmentChild();	  Node    assign    =    n.getAssignmentChild();    	non-compiled	[CE]  cannot  find  symbol  node	13	None	replace
495	[BUG]  [BUGGY]  Node  assign  =  n.assignmentChild();  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.assignmentChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.assignmentChild();	  Node    assign    =    n.getAssignmentChild();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
496	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  n.removeLastChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  n.removeLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  ==  n.removeLastChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	121	None	replace
497	[BUG]  [BUGGY]  Node  assign  =  collapse.getAssignmentValue();  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.getAssignmentValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.getAssignmentValue();	  Node    assign    =    collapse.getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
498	[BUG]  [BUGGY]  Node  assign  =  collapse.getAssignmentOp();  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.getAssignmentOp();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.getAssignmentOp();	  Node    assign    =    collapse.getAssignedValue();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
499	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  a  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);	  Node    assign    =    n.removeFirstChild();    Node    assign    =    n.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  a	43	None	replace
500	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  AssertionFailedError:  Expected:  function  f(a)  ==  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  AssertionFailedError:  Expected:  function  f(a)  ==  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  AssertionFailedError:  Expected:  function  f(a)  ==  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	57	None	replace
501	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(NodeUtil.isGetProp(n));  Node  assign  =  n.getAncestor(4);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(NodeUtil.isGetProp(n));  Node  assign  =  n.getAncestor(4);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(NodeUtil.isGetProp(n));  Node  assign  =  n.getAncestor(4);	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
502	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasAncestor(4));  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasAncestor(4));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(n.hasAncestor(4));	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
503	[BUG]  [BUGGY]  if(n.hasChildren())  {  Node  assign  =  n.removeFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  if(n.hasChildren())  {  Node  assign  =  n.removeFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	if(n.hasChildren())  {  Node  assign  =  n.removeFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	47	None	replace
504	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	68	None	replace
505	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	68	None	replace
506	[BUG]  [BUGGY]  Result:  function  f(a)  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	68	None	replace
507	[BUG]  [BUGGY]  Node  assign  =  collapse.getPreviousChild();  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.getPreviousChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.getPreviousChild();	  Node    assign    =    n.getPreviousChild();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
508	[BUG]  [BUGGY]  Node  assign  =  var.getPreviousChild();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  var.getPreviousChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  var.getPreviousChild();	  Node    assign    =    n.getPreviousChild();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
509	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  var  b=1  >>  not  a  statement  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  {  var  b=1  >>  not  a  statement  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  {  var  b=1  >>  not  a  statement	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  ';'  expected	45	None	replace
510	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  var  b=1  [Delete]  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  {  var  b=1  [Delete]  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  {  var  b=1  [Delete]	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  ';'  expected	45	None	replace
511	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  var  b=1!=  not  a  statement  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  {  var  b=1!=  not  a  statement  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  {  var  b=1!=  not  a  statement	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  ';'  expected	45	None	replace
512	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  var  b=1  >>  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  {  var  b=1  >>  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  {  var  b=1  >>	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  ';'  expected	45	None	replace
513	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  var  b=1  >=  not  a  statement  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  {  var  b=1  >=  not  a  statement  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  {  var  b=1  >=  not  a  statement	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  ';'  expected	45	None	replace
514	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  >=  n.removeFirstChild();  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  >=  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  >=  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	119	None	replace
515	[BUG]  [BUGGY]  AssertionFailedError  t  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError  t  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError  t  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    Result    r    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	105	None	replace
516	[BUG]  [BUGGY]  Node  assign  =  collapse.globalNodesToCollapse.cloneTree();  [CE]  cannot  find  symbol  globalNodesToCollapse  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.globalNodesToCollapse.cloneTree();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.globalNodesToCollapse.cloneTree();	  Node    assign    =    nodesToCollapse.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  globalNodesToCollapse	4	None	replace
517	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  not  a  statement  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  not  a  statement  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1!=  not  a  statement	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	44	None	replace
518	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  >>  not  a  statement  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  >>  not  a  statement  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  >>  not  a  statement	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	44	None	replace
519	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  not  a  statement  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  not  a  statement  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  ==  not  a  statement	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	44	None	replace
520	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  >=  not  a  statement  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  >=  not  a  statement  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  >=  not  a  statement	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	44	None	replace
521	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  [Delete]	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	44	None	replace
522	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1!=	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	44	None	replace
523	[BUG]  [BUGGY]  Node  assign  =  node.getLastChild();  [CE]  cannot  find  symbol  node  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  node.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  node.getLastChild();	  Node    assign    =    parent.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  node	21	None	replace
524	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(a.isEmpty());  [CE]  cannot  find  symbol  a  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(a.isEmpty());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(a.isEmpty());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	40	None	replace
525	[BUG]  [BUGGY]  n.removeChild(assignment);  [CE]  cannot  find  symbol  assignment  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  n.removeChild(assignment);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	n.removeChild(assignment);	  n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  assignment	108	None	replace
526	[BUG]  [BUGGY]  n.removeChild(alloc);  [CE]  cannot  find  symbol  alloc  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  n.removeChild(alloc);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	n.removeChild(alloc);	  n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  alloc	108	None	replace
527	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getNext();  [CE]  cannot  find  symbol  a  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getNext();	  	non-compiled	[CE]  cannot  find  symbol  a	19	None	add
528	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getNext();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	19	None	add
529	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isVar(n));  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isVar(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isVar(n));	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
530	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isGetProp(n));  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isGetProp(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isGetProp(n));	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
531	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(1)  ==  var);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(1)  ==  var);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  IllegalStateException  	61	2	replace
532	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(1)  ==  var);  Node  assign  =  n.getAncestor(2);  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(1)  ==  var);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(1)  ==  var);  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(2);    	compilable	  [FE]  IllegalStateException  	61	2	replace
533	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  result:  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  result:  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	102	None	replace
534	[BUG]  [BUGGY]  AssertionFailedError:  function  f(a)  {  var  b=1;a=2;var  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError:  function  f(a)  {  var  b=1;a=2;var  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError:  function  f(a)  {  var  b=1;a=2;var  Result:  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	102	None	replace
535	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  var  b=1  ==  not  a  statement  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  {  var  b=1  ==  not  a  statement  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  {  var  b=1  ==  not  a  statement	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  ';'  expected	56	None	replace
536	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  >>  n.getFirstChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  >>  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  >>  n.getFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	122	None	replace
537	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  n.getFirstChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  [Delete]  n.getFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	122	None	replace
538	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  }  n.removeFirstChild();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  }  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  }  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	118	None	replace
539	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2)  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2)  +  1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(2)  +  1;	  Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	29	None	replace
540	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
541	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
542	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
543	[BUG]  [BUGGY]  Node  assign  =  node.getAssignmentOp();  [CE]  cannot  find  symbol  node  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  node.getAssignmentOp();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  node.getAssignmentOp();	  Node    assign    =    n.getAssignmentOp();    	non-compiled	[CE]  cannot  find  symbol  node	15	None	replace
544	[BUG]  [BUGGY]  Node  assign  =  n.removeAssignmentOp();  [CE]  cannot  find  symbol  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeAssignmentOp();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeAssignmentOp();	  Node    assign    =    n.getAssignmentOp();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
545	[BUG]  [BUGGY]  Node  assign  =  n.get(nodesToCollapse.getLastChild());  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.get(nodesToCollapse.getLastChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.get(nodesToCollapse.getLastChild());	  Node    assign    =    nodesToCollapse.get(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
546	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getLastChild(),  collapse);  [CE]  cannot  find  symbol  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.get(n.getLastChild(),  collapse);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.get(n.getLastChild(),  collapse);	  Node    assign    =    nodesToCollapse.get(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
547	[BUG]  [BUGGY]  Node  assign  =  collapses.removeFirstChild();  [CE]  cannot  find  symbol  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapses.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapses.removeFirstChild();	  Node    assign    =    nodesToCollapse.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
548	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  assign  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.GETPROP);    Node    assign    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  assign	80	None	replace
549	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(2)!=  null);  [CE]  cannot  find  symbol  assign  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(2)!=  null);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(2)!=  null);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)!=    null);    Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  cannot  find  symbol  assign	90	None	replace
550	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(1));  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(1));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(1));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(1));    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
551	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	87	None	replace
552	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	87	None	replace
553	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	87	None	replace
554	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	87	None	replace
555	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  n.removeChild(a);  [CE]  cannot  find  symbol  a  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  n.removeChild(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  n.removeChild(a);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  a	112	None	replace
556	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  n.removeChild(a);  [CE]  cannot  find  symbol  a  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  n.removeChild(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren());  n.removeChild(a);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  a	112	None	replace
557	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  b.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  a  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  b.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  b.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	17	None	replace
558	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  b.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  a  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  b.getType()  ==  Token.NAME);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  b.getType()  ==  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	17	None	replace
559	[BUG]  [BUGGY]  Node  assign  =  collapsed.nodesToCollapse.getFirstChild();  [CE]  package  collapsed  does  not  exist  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsed.nodesToCollapse.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsed.nodesToCollapse.getFirstChild();	  Node    assign    =    collapse.nodesToCollapse.getFirstChild();    	non-compiled	[CE]  package  collapsed  does  not  exist	107	None	replace
560	[BUG]  [BUGGY]  Node  assign  =  n.removeAssignedChild(assign);  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeAssignedChild(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeAssignedChild(assign);	  Node    assign    =    n.removeAssignedChild();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
561	[BUG]  [BUGGY]  Node  assign  =  n.replaceChild(n,  assign);  [CE]  incompatible  types  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.replaceChild(n,  assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.replaceChild(n,  assign);	  Node    assign    =    n.removeAssignedChild();    	non-compiled	[CE]  incompatible  types	14	None	replace
562	[BUG]  [BUGGY]  Node  assign  =  node.getAssignedValue()  +  1;  [CE]  cannot  find  symbol  node  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  node.getAssignedValue()  +  1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  node.getAssignedValue()  +  1;	  Node    assign    =    n.getAssignedValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol  node	27	None	replace
563	[BUG]  [BUGGY]  Node  assign  =  n,  var.getAssignedValue()  +  1;  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n,  var.getAssignedValue()  +  1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n,  var.getAssignedValue()  +  1;	  Node    assign    =    n.getAssignedValue()    +    1;    	non-compiled	[CE]  ';'  expected	27	None	replace
564	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  >=  n.getFirstChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  >=  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  >=  n.getFirstChild();	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	106	None	replace
565	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  NullPointerException  	41	2	replace
566	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  NullPointerException  	41	2	replace
567	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
568	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
569	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
570	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
571	[BUG]  [BUGGY]  var  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	46	None	replace
572	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  var  b=0  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  {  var  b=0  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  {  var  b=0  }	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	46	None	replace
573	[BUG]  [BUGGY]  Node  assign  =  collapse.nextChild();  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.nextChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.nextChild();	  Node    assign    =    collapse.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
574	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(1);    	compilable	  [FE]  NullPointerException  	60	2	replace
575	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(1);  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren());  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(1);    	compilable	  [FE]  NullPointerException  	60	2	replace
576	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren();)  {  Node  assign  =  n.getAncestor(1);  [CE]  ')'  expected  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren();)  {  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren();)  {  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(1);    	non-compiled	[CE]  ')'  expected	60	None	replace
577	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.removeFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.removeFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.removeFirstChild();  Result:  function  f(a)  {  var  b=1  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	49	None	replace
578	[BUG]  [BUGGY]  ASSIGNED:  function  f(a)  {  var  b=1;A=2;var  c  =  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  ASSIGNED:  function  f(a)  {  var  b=1;A=2;var  c  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	ASSIGNED:  function  f(a)  {  var  b=1;A=2;var  c  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	59	None	replace
579	[BUG]  [BUGGY]  Node  assign  =  collapsed.getAssignedChild();  [CE]  cannot  find  symbol  collapsed  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsed.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsed.getAssignedChild();	  Node    assign    =    nodesToCollapse.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol  collapsed	11	None	replace
580	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren()  ||  NodeUtil.isFunctionDeclaration(n));  [CE]  cannot  find  symbol  assign  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren()  ||  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren()  ||  NodeUtil.isFunctionDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	non-compiled	[CE]  cannot  find  symbol  assign	78	None	replace
581	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isVar(n));  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isVar(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isVar(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
582	[BUG]  [BUGGY]  Node  assign  =  getLastChild();  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  getLastChild();	  Node    assign    =    lastNode.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
583	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(3);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(3);	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
584	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(3);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(3);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	30	None	add
585	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(3));  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(3));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Preconditions.checkState(n.hasAncestor(3));	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
586	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  varNode,  collapses);  [CE]  cannot  find  symbol  varNode  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  varNode,  collapses);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  varNode,  collapses);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  cannot  find  symbol  varNode	96	None	replace
587	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  delegate,  collapses);  [CE]  cannot  find  symbol  delegate  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  delegate,  collapses);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  delegate,  collapses);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  cannot  find  symbol  delegate	96	None	replace
588	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  a,  collapses);  [CE]  cannot  find  symbol  a  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  a,  collapses);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  a,  collapses);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  cannot  find  symbol  a	96	None	replace
589	[BUG]  [BUGGY]  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(1);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    Node    assign    =    n.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
590	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(1);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(1);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    Node    assign    =    n.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
591	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(var.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getNext();  Preconditions.checkState(var.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    var.addChildToBack(a);    	compilable	  [FE]  NullPointerException  	113	2	replace
592	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(var.hasChildren());  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(var.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getNext();  Preconditions.checkState(var.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    var.addChildToBack(a);    	compilable	  [FE]  NullPointerException  	113	2	replace
593	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(parent.hasChildren());  var.addChildToBack(assign);  [CE]  cannot  find  symbol  parent  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(parent.hasChildren());  var.addChildToBack(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(parent.hasChildren());  var.addChildToBack(assign);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    var.addChildToBack(a);    	non-compiled	[CE]  cannot  find  symbol  parent	113	None	replace
594	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(var.hasChildren());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(var.hasChildren());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	36	2	replace
595	[BUG]  [BUGGY]  Preconditions.checkState(var.hasChildren());  Node  assign  =  n.getParent();  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(var.hasChildren());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(var.hasChildren());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    Node    assign    =    n.getParent();    	compilable	  [FE]  NullPointerException  	36	2	replace
596	[BUG]  [BUGGY]  Preconditions.checkState(parent.hasChildren());  Node  assign  =  n.getParent();  [CE]  cannot  find  symbol  parent  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(parent.hasChildren());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(parent.hasChildren());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    Node    assign    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  parent	36	None	replace
597	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  n.getFirstChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  n.getFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  ==  n.getFirstChild();	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	103	None	replace
598	[BUG]  [BUGGY]  Node  assign  =  collapse(n,  var.getFirstChild());  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse(n,  var.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse(n,  var.getFirstChild());	  Node    assign    =    collapse(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
599	[BUG]  [BUGGY]  Node  assign  =  collapse(n,  varNode.getFirstChild());  [CE]  cannot  find  symbol  varNode  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse(n,  varNode.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse(n,  varNode.getFirstChild());	  Node    assign    =    collapse(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  varNode	16	None	replace
600	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(2)  ==  null);  [CE]  cannot  find  symbol  assign  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(2)  ==  null);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(2)  ==  null);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.getAncestor(2)    ==    null);    Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  cannot  find  symbol  assign	92	None	replace
601	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(2));  n.removeChild(a);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(2));  n.removeChild(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasAncestor(2));  n.removeChild(a);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
602	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	85	None	replace
603	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	85	None	replace
604	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	85	None	replace
605	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME  ||  b.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME  ||  b.getType()  ==  Token.FUNCTION);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME  ||  b.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  a	18	None	replace
606	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME  ||  b.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  a  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME  ||  b.getType()  ==  Token.VAR);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME  ||  b.getType()  ==  Token.VAR);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  a	18	None	replace
607	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  not  a  statement	58	None	replace
608	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  not  a  statement  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  not  a  statement  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  [Delete]  not  a  statement	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	54	None	replace
609	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(1);  Preconditions.checkState(assign.hasAncestor(1));  Node  assign  =  n.getAncestor(2);  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(1);  Preconditions.checkState(assign.hasAncestor(1));  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAncestor(1);  Preconditions.checkState(assign.hasAncestor(1));  Node  assign  =  n.getAncestor(2);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(1));    Node    assign    =    n.getAncestor(2);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
610	[BUG]  [BUGGY]  Node  parent  =  node.getParent();  [CE]  cannot  find  symbol  node  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  parent  =  node.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  parent  =  node.getParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  node	109	None	replace
611	[BUG]  [BUGGY]  Node  parent  =  next.getParent();  [CE]  cannot  find  symbol  assign  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  parent  =  next.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  parent  =  next.getParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  assign	109	None	replace
612	[BUG]  [BUGGY]  Node  assignNode  =  n.getAssignedChild();  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assignNode  =  n.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assignNode  =  n.getAssignedChild();	  Node    assignNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
613	[BUG]  [BUGGY]  Node  assignNode  =  n.getAssignedValue();  [CE]  cannot  find  symbol  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assignNode  =  n.getAssignedValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assignNode  =  n.getAssignedValue();	  Node    assignNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
614	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  assign  =  n.getLastChild();  [CE]  cannot  find  symbol  a  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  assign  =  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  assign  =  n.getLastChild();	  Node    assign    =    n.getLastChild();    Node    assign    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  a	53	None	replace
615	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getLastChild();  [CE]  cannot  find  symbol  a  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getLastChild();	  Node    assign    =    n.getLastChild();    Node    assign    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  a	53	None	replace
616	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR);  Node  assign  =  n.getLastChild();  [CE]  cannot  find  symbol  a  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR);  Node  assign  =  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.VAR);  Node  assign  =  n.getLastChild();	  Node    assign    =    n.getLastChild();    Node    assign    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  a	53	None	replace
617	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  a  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.EXPR_RESULT);	  Node    assign    =    n.getLastChild();    Node    assign    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  a	53	None	replace
618	[BUG]  [BUGGY]  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(3);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(3);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(3);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
619	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(3);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(3);    	compilable	  [FE]  IllegalStateException  	62	2	replace
620	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(3);  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(1)!=  null);  Node  assign  =  n.getAncestor(3);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(3);    	compilable	  [FE]  IllegalStateException  	62	2	replace
621	[BUG]  [BUGGY]  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(3);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasAncestor(1));  Node  assign  =  n.getAncestor(3);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(3);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
622	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(3);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(3);    	compilable	  [FE]  IllegalStateException  	62	2	replace
623	[BUG]  [BUGGY]  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(3);  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.getAncestor(2)!=  null);  Node  assign  =  n.getAncestor(3);	  Node    assign    =    n.getAncestor(1);    Node    assign    =    n.getAncestor(3);    	compilable	  [FE]  IllegalStateException  	62	2	replace
624	[BUG]  [BUGGY]  Node  assign  =  collapse.getNext();  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.getNext();	  Node    assign    =    nodesToCollapse.getParent();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
625	[BUG]  [BUGGY]  c  }  Node  assign  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  c  }  Node  assign  =  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	c  }  Node  assign  =  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Node    assign    =    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	48	None	replace
626	[BUG]  [BUGGY]  var  c  }  Node  assign  =  n.removeFirstChild();  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  }  Node  assign  =  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  }  Node  assign  =  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Node    assign    =    n.removeFirstChild();    	non-compiled	[CE]  ';'  expected	48	None	replace
627	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  ==  var  b=1;a=2;var  c  }  Node  assign  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  ==  var  b=1;a=2;var  c  }  Node  assign  =  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError:  Expected:  function  f(a)  ==  var  b=1;a=2;var  c  }  Node  assign  =  n.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Node    assign    =    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	48	None	replace
628	[BUG]  [BUGGY]  Node  assign  =  collapsed.getParent();  [CE]  cannot  find  symbol  collapsed  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsed.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsed.getParent();	  Node    assign    =    nodesToCollapse.getParent();    	non-compiled	[CE]  cannot  find  symbol  collapsed	66	None	replace
629	[BUG]  [BUGGY]  Node  assign  =  collapsesToCollapse.getParent();  [CE]  cannot  find  symbol  collapsesToCollapse  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsesToCollapse.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsesToCollapse.getParent();	  Node    assign    =    nodesToCollapse.getParent();    	non-compiled	[CE]  cannot  find  symbol  collapsesToCollapse	66	None	replace
630	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  ==  var  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  ==  var  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  ==  var  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	68	None	replace
631	[BUG]  [BUGGY]  Node  assign  =  collapse.elementsToCollapse.get(n.getFirstChild());  [CE]  cannot  find  symbol  elementsToCollapse  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.elementsToCollapse.get(n.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.elementsToCollapse.get(n.getFirstChild());	  Node    assign    =    nodesToCollapse.get(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  elementsToCollapse	99	None	replace
632	[BUG]  [BUGGY]  c  =  function  f(a)  {  var  b=1  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  c  =  function  f(a)  {  var  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	c  =  function  f(a)  {  var  b=1	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  ';'  expected	56	None	replace
633	[BUG]  [BUGGY]  var  c  =  function  f(a)  ==  var  b=1  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  ==  var  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  ==  var  b=1	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  ';'  expected	56	None	replace
634	[BUG]  [BUGGY]  Var  c  =  function  f(a)  {  var  b=1  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Var  c  =  function  f(a)  {  var  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Var  c  =  function  f(a)  {  var  b=1	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  ';'  expected	56	None	replace
635	[BUG]  [BUGGY]  var  c  =  function  f(a)  ==  b=1  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  ==  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  ==  b=1	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  ';'  expected	56	None	replace
636	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	54	None	replace
637	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  }  not  a  statement  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1  }  not  a  statement  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1  }  not  a  statement	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	54	None	replace
638	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  b=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  b=1	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	54	None	replace
639	[BUG]  [BUGGY]  Node  assign  =  collapses.iterator().next();  [CE]  incompatible  types  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapses.iterator().next();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapses.iterator().next();	  Node    assign    =    collapses.getFirstChild();    	non-compiled	[CE]  incompatible  types	5	None	replace
640	[BUG]  [BUGGY]  Node  assign  =  collapses.nextChild();  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapses.nextChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapses.nextChild();	  Node    assign    =    collapses.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
641	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(assign.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    	compilable	  [FE]  NullPointerException  	79	2	replace
642	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.hasChildren());  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(assign.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    	compilable	  [FE]  NullPointerException  	79	2	replace
643	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.BLOCK);  Node  assign  =  n.getLastChild();  [CE]  cannot  find  symbol  a  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.BLOCK);  Node  assign  =  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.BLOCK);  Node  assign  =  n.getLastChild();	  Node    assign    =    n.getLastChild();    Node    assign    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  a	53	None	replace
644	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	67	None	replace
645	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasAncestor(1));  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasAncestor(1));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasAncestor(1));	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(1));    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
646	[BUG]  [BUGGY]  Node  assign  =  n,  collapses.removeLastChild();  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n,  collapses.removeLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n,  collapses.removeLastChild();	  Node    assign    =    n.removeLastChild();    	non-compiled	[CE]  ';'  expected	51	None	replace
647	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Node  assign  =  n.getAncestor(2);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Node  assign  =  n.getAncestor(2);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	30	None	add
648	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getAncestor(3);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(3);  Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getAncestor(3);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(3);    Preconditions.checkState(n.hasOneChild());  Node  assign  =  n.getAncestor(3);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	30	None	add
649	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  Preconditions.checkState(n.hasChildren());  [CE]  cannot  find  symbol  assign  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasChildren());  Preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasChildren());  Preconditions.checkState(n.hasChildren());	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    Node    assign    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  assign	36	None	replace
650	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  b,  collapses);  [CE]  cannot  find  symbol  b  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  b,  collapses);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  b,  collapses);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  cannot  find  symbol  b	96	None	replace
651	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  c,  collapses);  [CE]  cannot  find  symbol  c  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  c,  collapses);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  c,  collapses);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  cannot  find  symbol  c	96	None	replace
652	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  collapses);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,CollapseVariableDeclarations,List<Collapse>)  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  collapses);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  this,  collapses);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,CollapseVariableDeclarations,List<Collapse>)	96	None	replace
653	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  vs,  collapses);  [CE]  cannot  find  symbol  vs  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  vs,  collapses);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	NodeTraversal.traverse(compiler,  n,  vs,  collapses);	  NodeTraversal.traverse(compiler,    n,    collapses);    	non-compiled	[CE]  cannot  find  symbol  vs	96	None	replace
654	[BUG]  [BUGGY]  Node  assign  =  n.getAssignedValue()  /  2  +  1;  [CE]  cannot  find  symbol  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAssignedValue()  /  2  +  1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAssignedValue()  /  2  +  1;	  Node    assign    =    n.getAssignedValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
655	[BUG]  [BUGGY]  Node  assign  =  n.getAssignedValue()  -  1;  [CE]  cannot  find  symbol  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAssignedValue()  -  1;  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAssignedValue()  -  1;	  Node    assign    =    n.getAssignedValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
656	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  var  b=2  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  {  var  b=2  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  {  var  b=2	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    	non-compiled	[CE]  ';'  expected	45	None	replace
657	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  not  a  statement	50	None	replace
658	[BUG]  [BUGGY]  Node  c  =  n.getFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  c  =  n.getFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  c  =  n.getFirstChild();  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  not  a  statement	50	None	replace
659	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  AssertionFailedError:  Expected:  function  f(a)  ==  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  AssertionFailedError:  Expected:  function  f(a)  ==  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  AssertionFailedError:  Expected:  function  f(a)  ==  b=1;a=2;var  c  }  Result:  function  f(a)  {  var  b=	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  not  a  statement	50	None	replace
660	[BUG]  [BUGGY]  n.removeChild(assigned);  [CE]  cannot  find  symbol  assigned  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  n.removeChild(assigned);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	n.removeChild(assigned);	  n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  assigned	108	None	replace
661	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  ==  var  b=1  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  ==  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  ==  var  b=1  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	49	None	replace
662	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getLastChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getLastChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1!=  n.getLastChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    n.getLastChild();    	non-compiled	[CE]  not  a  statement	123	None	replace
663	[BUG]  [BUGGY]  Node  assign  =  n.getAssignmentChild(assign);  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAssignmentChild(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getAssignmentChild(assign);	  Node    assign    =    n.getAssignmentChild();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
664	[BUG]  [BUGGY]  Node  assign  =  collapsed.removeFirstChild();  [CE]  cannot  find  symbol  collapsed  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsed.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsed.removeFirstChild();	  Node    assign    =    nodesToCollapse.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  collapsed	52	None	replace
665	[BUG]  [BUGGY]  Node  assign  =  collapsedNodesToCollapse.getAncestor(1);  [CE]  cannot  find  symbol  collapsedNodesToCollapse  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsedNodesToCollapse.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsedNodesToCollapse.getAncestor(1);	  Node    assign    =    nodesToCollapse.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol  collapsedNodesToCollapse	32	None	replace
666	[BUG]  [BUGGY]  Node  assign  =  collapsedVars.getAncestor(1);  [CE]  cannot  find  symbol  collapsedVars  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsedVars.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsedVars.getAncestor(1);	  Node    assign    =    nodesToCollapse.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol  collapsedVars	32	None	replace
667	[BUG]  [BUGGY]  Node  assign  =  collapses.getAncestor(1);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapses.getAncestor(1);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapses.getAncestor(1);	  Node    assign    =    nodesToCollapse.getAncestor(1);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
668	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=2!=  not  a  statement  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=2!=  not  a  statement  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=2!=  not  a  statement	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	44	None	replace
669	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  var.removeFirstChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  var.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  var.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	121	None	replace
670	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  var.removeFirstChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  var.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  ==  var.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	121	None	replace
671	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  var.removeFirstChild();  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  var.removeFirstChild();  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  var.removeFirstChild();  }	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    ==    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	121	None	replace
672	[BUG]  [BUGGY]  c  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	c  }	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	57	None	replace
673	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c=1  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c=1  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  var  b=1;a=2;var  c=1	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    n.getLastChild();    	non-compiled	[CE]  not  a  statement	100	None	replace
674	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c!=  Node.removeFirstChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c!=  Node.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c!=  Node.removeFirstChild();	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Node    assign    =    n.removeFirstChild();    	non-compiled	[CE]  not  a  statement	48	None	replace
675	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR  ||  b.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR  ||  b.getType()  ==  Token.FUNCTION);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.VAR  ||  b.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  a	110	None	replace
676	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR  ||  b.getType()  ==  Token.BLOCK);  [CE]  cannot  find  symbol  a  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR  ||  b.getType()  ==  Token.BLOCK);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.VAR  ||  b.getType()  ==  Token.BLOCK);	  Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  a	110	None	replace
677	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR  ||  b.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  a  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR  ||  b.getType()  ==  Token.CATCH);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.VAR  ||  b.getType()  ==  Token.CATCH);	  Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  a	110	None	replace
678	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR,  b);  [CE]  cannot  find  symbol  a  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR,  b);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.VAR,  b);	  Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  a	110	None	replace
679	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
680	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getParent();  [CE]  cannot  find  symbol  parent  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(parent.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    Node    assign    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  parent	75	None	replace
681	[BUG]  [BUGGY]  Node  assign  =  collapse,  nodesToCollapse.getAssignedValue();  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse,  nodesToCollapse.getAssignedValue();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse,  nodesToCollapse.getAssignedValue();	  Node    assign    =    nodesToCollapse.getAssignedValue();    	non-compiled	[CE]  ';'  expected	22	None	replace
682	[BUG]  [BUGGY]  var  c  =  function  f(a)  ==  var  b=1  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  ==  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  ==  var  b=1  }	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	46	None	replace
683	[BUG]  [BUGGY]  ARRAY  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  ARRAY  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	ARRAY  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	46	None	replace
684	[BUG]  [BUGGY]  Var  c  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Var  c  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Var  c  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	46	None	replace
685	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	87	None	replace
686	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	87	None	replace
687	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(n.removeFirstChild());  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(n.removeFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(2);    Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(n.removeFirstChild());	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
688	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getAncestor(2);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getAncestor(2);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(2);    Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getAncestor(2);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	28	None	add
689	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(2);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(2);    Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	28	None	add
690	[BUG]  [BUGGY]  Node  assign  =  next.getFirstChild();  Preconditions.checkState(n.hasChildren());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getFirstChild();  Preconditions.checkState(n.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    next.getFirstChild();    Preconditions.checkState(n.hasChildren());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	6	None	add
691	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(assign);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    n.removeChild(a);    	compilable	  [FE]  NullPointerException  	112	2	replace
692	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(assign);  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(assign);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    n.removeChild(a);    	compilable	  [FE]  NullPointerException  	112	2	replace
693	[BUG]  [BUGGY]  Node  assign  =  parent.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(assign);  [CE]  cannot  find  symbol  parent  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  parent.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(assign);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  parent.getParent();  Preconditions.checkState(n.hasChildren());  n.removeChild(assign);	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren());    n.removeChild(a);    	non-compiled	[CE]  cannot  find  symbol  parent	112	None	replace
694	[BUG]  [BUGGY]  ARRAY:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  ARRAY:  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	ARRAY:  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	59	None	replace
695	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.removeFirstChild());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.removeFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.removeFirstChild());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	19	None	add
696	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasNext());  Node  assign  =  n.getNext();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasNext());  Node  assign  =  n.getNext();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.hasNext());  Node  assign  =  n.getNext();	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
697	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.getNext());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.getNext());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.hasChildren());  var.addChildToBack(n.getNext());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	19	None	add
698	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Node  assign  =  n.getNext();  Preconditions.checkState(a.hasChildren());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Node  assign  =  n.getNext();  Preconditions.checkState(a.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Node  assign  =  n.getNext();  Preconditions.checkState(a.hasChildren());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	19	None	add
699	[BUG]  [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.removeChild(n.getFirstChild());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getNext();  Preconditions.checkState(n.hasChildren());  var.removeChild(n.getFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getNext();    Preconditions.checkState(n.hasChildren());  var.removeChild(n.getFirstChild());	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	19	None	add
700	[BUG]  [BUGGY]  Preconditions.checkState(n.hasOneChild()  ||  n.hasNext());  Node  assign  =  n.getParent();  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(n.hasOneChild()  ||  n.hasNext());  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(n.hasOneChild()  ||  n.hasNext());  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasOneChild());    Node    assign    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
701	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasAncestor(4));  var.addChildToBack(n.removeFirstChild());  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasAncestor(4));  var.addChildToBack(n.removeFirstChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(n.hasAncestor(4));  var.addChildToBack(n.removeFirstChild());	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
702	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getAncestor(4);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getAncestor(4);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  assign  =  n.getAncestor(4);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	33	None	add
703	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(4);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(4);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(n.hasAncestor(2));  Node  assign  =  n.getAncestor(4);	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
704	[BUG]  [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getAncestor(4);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node    assign    =    n.getAncestor(4);    Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	33	None	add
705	[BUG]  [BUGGY]  Node  assign  =  collapse,  nodesToCollapse.getAssignedChild();  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse,  nodesToCollapse.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse,  nodesToCollapse.getAssignedChild();	  Node    assign    =    nodesToCollapse.getAssignedChild();    	non-compiled	[CE]  ';'  expected	11	None	replace
706	[BUG]  [BUGGY]  Node  assign  =  collapseAssignment.getAssignedChild();  [CE]  cannot  find  symbol  collapseAssignment  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapseAssignment.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapseAssignment.getAssignedChild();	  Node    assign    =    nodesToCollapse.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol  collapseAssignment	11	None	replace
707	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  {  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  {  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  b=1;a=2;var  c  }	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	55	None	replace
708	[BUG]  [BUGGY]  Node  assign  =  collapse.assignment.cloneTree();  [CE]  cannot  find  symbol  assignment  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.assignment.cloneTree();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.assignment.cloneTree();	  Node    assign    =    nodesToCollapse.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  assignment	4	None	replace
709	[BUG]  [BUGGY]  Node  assign  =  collapse.nextTree();  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.nextTree();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.nextTree();	  Node    assign    =    nodesToCollapse.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
710	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  b.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  a  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  b.getType()  ==  Token.VAR);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.FUNCTION  ||  b.getType()  ==  Token.VAR);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	17	None	replace
711	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(a);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Preconditions.checkState(n.hasAncestor(2));  var.addChildToBack(a);	  Node    assign    =    n.getAncestor(1);    Preconditions.checkState(n.hasAncestor(2));    var.addChildToBack(a);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
712	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME  ||  b.getType()  ==  Token.BLOCK);  [CE]  cannot  find  symbol  a  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME  ||  b.getType()  ==  Token.BLOCK);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME  ||  b.getType()  ==  Token.BLOCK);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  a	18	None	replace
713	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  NullPointerException  	41	2	replace
714	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  NullPointerException  	41	2	replace
715	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  NullPointerException  	41	2	replace
716	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  NullPointerException  	41	2	replace
717	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  NullPointerException  	41	2	replace
718	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  NullPointerException  	41	2	replace
719	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkArgument(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkArgument(assign.getType()  ==  Token.ASSIGN);	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  NullPointerException  	41	2	replace
720	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkArgument(assign.getType()  ==  Token.ASSIGN);  [FE]  NullPointerException  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkArgument(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkArgument(assign.getType()  ==  Token.ASSIGN);	  Node    assign    =    n.getParent();    Node    assign    =    n.getNext();    	compilable	  [FE]  NullPointerException  	41	2	replace
721	[BUG]  [BUGGY]  Node  assign  =  collapsed.get(n.getLastChild());  [CE]  cannot  find  symbol  collapsed  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapsed.get(n.getLastChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapsed.get(n.getLastChild());	  Node    assign    =    nodesToCollapse.get(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  collapsed	98	None	replace
722	[BUG]  [BUGGY]  Node  assign  =  collapse.elementsToCollapse.get(n.getLastChild());  [CE]  cannot  find  symbol  elementsToCollapse  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.elementsToCollapse.get(n.getLastChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.elementsToCollapse.get(n.getLastChild());	  Node    assign    =    nodesToCollapse.get(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  elementsToCollapse	98	None	replace
723	[BUG]  [BUGGY]  Node  assign  =  collapse.remove(n.getLastChild());  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  collapse.remove(n.getLastChild());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  collapse.remove(n.getLastChild());	  Node    assign    =    nodesToCollapse.get(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
724	[BUG]  [BUGGY]  Node  assignNode  =  n.cloneTree();  [CE]  cannot  find  symbol  assign  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assignNode  =  n.cloneTree();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assignNode  =  n.cloneTree();	  Node    assignNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assign	97	None	replace
725	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  next.getParent();	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	35	2	replace
726	[BUG]  [BUGGY]  Node  assign  =  next.getParent();  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  next.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  next.getParent();	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    	compilable	  [FE]  IllegalStateException  	35	2	replace
727	[BUG]  [BUGGY]  Node  assign  =  n.getPrevious();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getPrevious();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getPrevious();	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
728	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getFirstChild();  Result  r  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  nodesToCollapse.getFirstChild();  Result  r  =  function  f(a)  {  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  nodesToCollapse.getFirstChild();  Result  r  =  function  f(a)  {  var  b=1  }	  Node    assign    =    n.getLastChild();    Result    r    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	105	None	replace
729	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  Result  r  =  function  f(a)  ==  var  b=1  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();  Result  r  =  function  f(a)  ==  var  b=1  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();  Result  r  =  function  f(a)  ==  var  b=1  }	  Node    assign    =    n.getLastChild();    Result    r    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	105	None	replace
730	[BUG]  [BUGGY]  Node  assign  =  first.getAssignedChild();  [CE]  cannot  find  symbol  first  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  first.getAssignedChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  first.getAssignedChild();	  Node    assign    =    parent.getAssignedChild();    	non-compiled	[CE]  cannot  find  symbol  first	12	None	replace
731	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isVarDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isVarDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  IllegalStateException  	78	2	replace
732	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isVarDeclaration(n));  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isVarDeclaration(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.isVarDeclaration(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  IllegalStateException  	78	2	replace
733	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.mayHaveSideEffects(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	add	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.mayHaveSideEffects(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  NullPointerException  	78	2	replace
734	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.mayHaveSideEffects(n));  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.mayHaveSideEffects(n));  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  Preconditions.checkState(n.hasChildren()  &&  NodeUtil.mayHaveSideEffects(n));	  Node    assign    =    n.getParent();    Preconditions.checkState(n.hasChildren()    &&    NodeUtil.isFunctionDeclaration(n));    	compilable	  [FE]  NullPointerException  	78	2	replace
735	[BUG]  [BUGGY]  Node  parent  =  n.removeFirstChild();  [CE]  cannot  find  symbol  assign  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  parent  =  n.removeFirstChild();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  parent  =  n.removeFirstChild();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  assign	109	None	replace
736	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();  Result:  function  f(a)  {  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.removeFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
737	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();a=2;var  c  =  function  f(a)  {  var  b=  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();a=2;var  c  =  function  f(a)  {  var  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();a=2;var  c  =  function  f(a)  {  var  b=	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  ';'  expected	58	None	replace
738	[BUG]  [BUGGY]  Result:  function  f(a)  ==  var  b=  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Result:  function  f(a)  ==  var  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Result:  function  f(a)  ==  var  b=	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  not  a  statement	58	None	replace
739	[BUG]  [BUGGY]  c  =  function  f(a)  {  var  b=  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  c  =  function  f(a)  {  var  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	c  =  function  f(a)  {  var  b=	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  ';'  expected	58	None	replace
740	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();a=2;var  c  =  function  f(a)  {  b=  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();a=2;var  c  =  function  f(a)  {  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();a=2;var  c  =  function  f(a)  {  b=	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  ';'  expected	58	None	replace
741	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();a=2;var  c  =  function  f(a);  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getFirstChild();a=2;var  c  =  function  f(a);  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getFirstChild();a=2;var  c  =  function  f(a);	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  ';'  expected	58	None	replace
742	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  var  b=  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  var  c  =  function  f(a)  {  var  b=  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	var  c  =  function  f(a)  {  var  b=	  Node    assign    =    n.getLastChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    var    b=    	non-compiled	[CE]  ';'  expected	58	None	replace
743	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
744	[BUG]  [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getLastChild();  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  =	  Node    assign    =    n.getLastChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
745	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getParent();  [CE]  cannot  find  symbol  parent  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getParent();  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(parent.getType()  ==  Token.FUNCTION);  Node  assign  =  n.getParent();	  Node    assign    =    n.getParent();    Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    Node    assign    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  parent	77	None	replace
746	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();AssertionFailedError:  Expected:  function  f(a)  ==  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.removeFirstChild();AssertionFailedError:  Expected:  function  f(a)  ==  var  b=1;a=2;var  c  }  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.removeFirstChild();AssertionFailedError:  Expected:  function  f(a)  ==  var  b=1;a=2;var  c  }	  Node    assign    =    n.removeFirstChild();    AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	47	None	replace
747	[BUG]  [BUGGY]  Node  assign  =  n.getParent();  preconditions.checkState(assign.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Node  assign  =  n.getParent();  preconditions.checkState(assign.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Node  assign  =  n.getParent();  preconditions.checkState(assign.hasChildren());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    preconditions.checkState(n.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	38	None	replace
748	[BUG]  [BUGGY]  Preconditions.checkState(parent.hasChildren());  [CE]  cannot  find  symbol  parent  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {      [BUGGY]  Preconditions.checkState(parent.hasChildren());  [BUGGY]      Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	228	228	1	replace	Preconditions.checkState(parent.hasChildren());	  Node    assign    =    n.getParent();    Node    assign    =    n.getParent();    preconditions.checkState(n.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  parent	38	None	replace
