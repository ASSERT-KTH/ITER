bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  lhs  =  lhs.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  lhs.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  lhs.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	6	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  rhs  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  rhs	6	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  rhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  rhs	6	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  rhs  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  rhs	6	None	replace
5	[BUG]  [BUGGY]  Result:  function  f(a)  {  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    	non-compiled	[CE]  not  a  statement	118	None	replace
6	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getLastChild();	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	118	None	replace
7	[BUG]  [BUGGY]  Node  c  =  assign.getFirstChild();  [CE]  cannot  find  symbol  rhs  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  c  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  c  =  assign.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    	non-compiled	[CE]  cannot  find  symbol  rhs	118	None	replace
8	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    	non-compiled	[CE]  not  a  statement	118	None	replace
9	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	24	None	add
10	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  ';'  expected	24	None	add
11	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	24	None	add
12	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	24	None	add
13	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  c  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  c  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  c  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	24	None	add
14	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  ';'  expected	24	None	add
15	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  a  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  a  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  a  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	24	None	add
16	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild());  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild());	  	non-compiled	[CE]  ';'  expected	24	None	add
17	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	43	2	replace
18	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	43	2	replace
19	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	43	2	replace
20	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	43	2	replace
21	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	43	2	replace
22	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	43	2	replace
23	[BUG]  [BUGGY]  Node  assign  =  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  assign  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  assign  =  assign.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    assign    =    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	44	None	replace
24	[BUG]  [BUGGY]  Node  assign  =  n.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  assign  =  n.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  assign  =  n.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    assign    =    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	44	None	replace
25	[BUG]  [BUGGY]  Node  assign  =  lhs.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  assign  =  lhs.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  assign  =  lhs.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    assign    =    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	44	None	replace
26	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getNext()!=  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	124	2	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getNext()!=  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	124	2	replace
28	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getNext()!=  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getNext()!=  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	124	2	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getNext()!=  null);  Node  rhs  =  assign.getNext();  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getNext()!=  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getNext()!=  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	124	2	replace
30	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getParent()!=  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getParent()!=  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	124	2	replace
31	[BUG]  [BUGGY]  Preconditions.checkState(assign.getParent()!=  null);  Node  rhs  =  assign.getNext();  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getParent()!=  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getParent()!=  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	124	2	replace
32	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getNext()  ==  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	124	2	replace
33	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Node  rhs  =  assign.getNext();  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getNext()  ==  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	124	2	replace
34	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getParent()!=  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getParent()!=  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	124	2	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getParent()!=  null);  Node  rhs  =  assign.getNext();  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getParent()!=  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getParent()!=  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	124	2	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Node  lhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getNext()!=  null);  Node  lhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	124	None	replace
37	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  lhs!=  null?  assign.getNext()  :  lhs;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  lhs!=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  lhs  =  lhs!=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	109	None	add
38	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	109	None	add
39	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  lhs  ==  null?  assign.getNext()  :  lhs;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  lhs  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  lhs  =  lhs  ==  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	109	None	add
40	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  lhs  ==  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  lhs  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  rhs  =  lhs  ==  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	109	None	add
41	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  lhs!=  null?  assign.getNext()  :  lhs);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  lhs!=  null?  assign.getNext()  :  lhs);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  lhs  =  lhs!=  null?  assign.getNext()  :  lhs);	  	non-compiled	[CE]  ';'  expected	109	None	add
42	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs);	  	non-compiled	[CE]  ';'  expected	109	None	add
43	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  assign!=  null?  assign.getNext()  :  lhs;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  assign!=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  lhs  =  assign!=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	109	None	add
44	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  lhs  >>  null?  assign.getNext()  :  lhs;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  lhs  >>  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  lhs  =  lhs  >>  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	109	None	add
45	[BUG]  [BUGGY]  Node  rhs  =  assign.next();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.next();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.next();	  Node    rhs    =    lhs.next();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
46	[BUG]  [BUGGY]  Node  rhs  =  nodesToCollapse.next();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  nodesToCollapse.next();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  nodesToCollapse.next();	  Node    rhs    =    lhs.next();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
47	[BUG]  [BUGGY]  Node  lhs  =  assign.next();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.next();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.next();	  Node    rhs    =    lhs.next();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	replace
48	[BUG]  [BUGGY]  Node  rhs  =  assignment.next();  [CE]  cannot  find  symbol  assignment  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assignment.next();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assignment.next();	  Node    rhs    =    lhs.next();    	non-compiled	[CE]  cannot  find  symbol  assignment	3	None	replace
49	[BUG]  [BUGGY]  Node  rhs  =  n.next();  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.next();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.next();	  Node    rhs    =    lhs.next();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
50	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  lhs,  collapses);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,List<Collapse>)  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  n,  lhs,  collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  n,  lhs,  collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,List<Collapse>)	50	None	replace
51	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  lhs,  root,  collapses);  [CE]  cannot  find  symbol  root  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  lhs,  root,  collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  lhs,  root,  collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  cannot  find  symbol  root	50	None	replace
52	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  lhs,  startNode,  collapses);  [CE]  cannot  find  symbol  startNode  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  lhs,  startNode,  collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  lhs,  startNode,  collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  cannot  find  symbol  startNode	50	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  rhs,  collapses);  [CE]  cannot  find  symbol  rhs  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  rhs,  collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  rhs,  collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  cannot  find  symbol  rhs	50	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  lhs,  nodesToCollapse,  collapses);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Set<Node>,List<Collapse>)  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  lhs,  nodesToCollapse,  collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  lhs,  nodesToCollapse,  collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Set<Node>,List<Collapse>)	50	None	replace
55	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  lhs,  parent,  collapses);  [CE]  cannot  find  symbol  parent  [FE]                                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  lhs,  parent,  collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  lhs,  parent,  collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  cannot  find  symbol  parent	50	None	replace
56	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  lhs,  this.collapses);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,List<Collapse>)  [FE]                                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  lhs,  this.collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  lhs,  this.collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,List<Collapse>)	50	None	replace
57	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  rhs  =  n.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  rhs  =  n.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Node  rhs  =  n.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	72	None	add
58	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  lhs  =  n.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  lhs  =  n.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Node  lhs  =  n.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	72	None	add
59	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  n  =  n.removeFirstChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  n  =  n.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Node  n  =  n.removeFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	72	None	add
60	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  rhs  =  lhs.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  rhs  =  lhs.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Node  rhs  =  lhs.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	72	None	add
61	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  rhs  =  n.removeLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  rhs  =  n.removeLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Node  rhs  =  n.removeLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	72	None	add
62	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  hs  =  n.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  hs  =  n.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Node  hs  =  n.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	72	None	add
63	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  ns  =  n.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  ns  =  n.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Node  ns  =  n.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	72	None	add
64	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  rhs  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  rhs	75	None	replace
65	[BUG]  [BUGGY]  Node  rhs  =  assign.nextChild();  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.nextChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.nextChild();	  Node    rhs    =    lhs.nextChild();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
66	[BUG]  [BUGGY]  Node  rhs  =  n.nextChild();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.nextChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.nextChild();	  Node    rhs    =    lhs.nextChild();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
67	[BUG]  [BUGGY]  Node  rhs  =  nodesToCollapse.nextChild();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  nodesToCollapse.nextChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  nodesToCollapse.nextChild();	  Node    rhs    =    lhs.nextChild();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
68	[BUG]  [BUGGY]  Node  rhs  =  assignment.nextChild();  [CE]  cannot  find  symbol  assignment  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assignment.nextChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assignment.nextChild();	  Node    rhs    =    lhs.nextChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	88	None	replace
69	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	106	2	replace
70	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.hasChildren());  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	106	2	replace
71	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	106	2	replace
72	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	106	2	replace
73	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	106	None	replace
74	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	106	2	replace
75	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.hasChildren());  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	106	2	replace
76	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	106	1	replace
77	[BUG]  [BUGGY]  Node  rhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	106	1	replace
78	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	106	None	replace
79	[BUG]  [BUGGY]  Node  rhs  =  null.getFirstChild();  [CE]  <null>  cannot  be  dereferenced  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  null.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  null.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    null.getFirstChild();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	120	None	replace
80	[BUG]  [BUGGY]  Node  lhs  =  n.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  n.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  n.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    null.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	120	None	replace
81	[BUG]  [BUGGY]  Node  lhs  =  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    lhs    =    lhs.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	31	None	replace
82	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  lhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getFirstChild();  lhs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    lhs    =    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	31	2	replace
83	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  lhs  =  lhs.getLastChild();  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  lhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  lhs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    lhs    =    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	31	2	replace
84	[BUG]  [BUGGY]  lhs  =  lhs.getLastChild();  [CE]  cannot  find  symbol  rhs  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  lhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	lhs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    lhs    =    lhs.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  rhs	31	None	replace
85	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	67	2	replace
86	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	67	2	replace
87	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	67	2	replace
88	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	67	2	replace
89	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	67	None	replace
90	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  rhs  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	67	None	replace
91	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  rhs  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	67	None	replace
92	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP  ||  lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP  ||  lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	67	2	replace
93	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP  ||  lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP  ||  lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP  ||  lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	67	2	replace
94	[BUG]  [BUGGY]  Node  assign  =  lhs.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  assign  =  lhs.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  assign  =  lhs.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    assign    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	40	None	replace
95	[BUG]  [BUGGY]  Node  assign  =  assign.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  assign  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  assign  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    assign    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	40	None	replace
96	[BUG]  [BUGGY]  Node  assign  =  n.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  assign  =  n.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  assign  =  n.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    assign    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	40	None	replace
97	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  assign  =  nodesToCollapse.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  assign  =  nodesToCollapse.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    assign    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	40	None	replace
98	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeLastChild();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.removeLastChild();	  Node    rhs    =    lhs.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
99	[BUG]  [BUGGY]  Node  rhs  =  assign.removeLastChild();  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeLastChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
100	[BUG]  [BUGGY]  Node  lhs  =  assign.removeLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.removeLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.removeLastChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assign.removeLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	37	None	replace
101	[BUG]  [BUGGY]  Node  rhs  =  assignment.removeLastChild();  [CE]  cannot  find  symbol  assignment  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assignment.removeLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assignment.removeLastChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	37	None	replace
102	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	64	2	replace
103	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	64	2	replace
104	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
105	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
106	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
107	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
108	[BUG]  [BUGGY]  Node  rhs  =  assign.getLastChild();  var  c  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getLastChild();  var  c  =  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getLastChild();  var  c  =  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	46	None	replace
109	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	46	None	replace
110	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c=1  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c=1  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1;a=2;var  c=1	  Node    rhs    =    assign.getFirstChild();    var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	46	None	replace
111	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	11	2	replace
112	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	11	2	replace
113	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	11	2	replace
114	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getFirstChild();  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	11	2	replace
115	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	11	2	replace
116	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getFirstChild();  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	11	2	replace
117	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	11	2	replace
118	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getFirstChild();  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	11	2	replace
119	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.CALL);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	11	2	replace
120	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  Node  rhs  =  assign.getFirstChild();  [FE]  IllegalStateException  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.CALL);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	11	2	replace
121	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Node  rhs  =  n.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Node  rhs  =  n.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Node  rhs  =  n.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	107	None	add
122	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Node  n  =  n.getNext();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Node  n  =  n.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Node  n  =  n.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	107	None	add
123	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Node  lhs  =  n.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Node  lhs  =  n.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Node  lhs  =  n.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	107	None	add
124	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Node  rhs  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Node  rhs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Node  rhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	107	None	add
125	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Node  n  =  lhs.getNext();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Node  n  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Node  n  =  lhs.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	107	None	add
126	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Node  rhs  =  assign.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Node  rhs  =  assign.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	107	None	add
127	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  lhs  =  n.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  lhs  =  n.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    lhs  =  n.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	107	None	add
128	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	90	None	replace
129	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	90	None	replace
130	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	90	None	replace
131	[BUG]  [BUGGY]  if(a.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	90	None	replace
132	[BUG]  [BUGGY]  if(a.getType()  ==  Token.NAME)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.NAME)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.NAME)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	90	None	replace
133	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	90	None	replace
134	[BUG]  [BUGGY]  Result:  function  f(  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(    	non-compiled	[CE]  not  a  statement	119	None	replace
135	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getNext()  ==  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getNext()  ==  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	123	2	replace
136	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getNext()  ==  null);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getNext()  ==  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getNext()  ==  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	123	2	replace
137	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getParent()  ==  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getParent()  ==  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	123	2	replace
138	[BUG]  [BUGGY]  Preconditions.checkState(assign.getParent()  ==  null);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getParent()  ==  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getParent()  ==  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	123	2	replace
139	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getParent()  ==  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getParent()  ==  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	123	2	replace
140	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getParent()  ==  null);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getParent()  ==  null);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getParent()  ==  null);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	123	2	replace
141	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Node  lhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getNext()  ==  null);  Node  lhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	123	None	replace
142	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.VAR);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	101	2	replace
143	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.VAR);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	101	2	replace
144	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.VAR);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	101	None	replace
145	[BUG]  [BUGGY]  Node  n  =  assign.getNext();  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  assign.getNext();  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  assign.getNext();  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.VAR);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	101	None	replace
146	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  lhs.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.VAR);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	101	None	replace
147	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.VAR);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	101	None	replace
148	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	47	None	replace
149	[BUG]  [BUGGY]  Node  rhs  =  assign.getLastChild();  result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getLastChild();  result:  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getLastChild();  result:  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	47	None	replace
150	[BUG]  [BUGGY]  Node  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	114	None	replace
151	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  NullPointerException  	114	2	replace
152	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.hasChildren());  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  NullPointerException  	114	2	replace
153	[BUG]  [BUGGY]  Preconditions.checkState(lhs.hasChildren());  [CE]  cannot  find  symbol  rhs  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  rhs	114	None	replace
154	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	114	2	replace
155	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	114	2	replace
156	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	114	2	replace
157	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	114	2	replace
158	[BUG]  [BUGGY]  Node  rhs  =  assignment.removeFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assignment.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assignment.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assignment.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	36	None	replace
159	[BUG]  [BUGGY]  Node  lhs  =  assignment.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assignment.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assignment.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assignment.removeFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	36	None	replace
160	[BUG]  [BUGGY]  Node  rhs  =  assigned.removeFirstChild();  [CE]  cannot  find  symbol  assigned  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assigned.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assigned.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assignment.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assigned	36	None	replace
161	[BUG]  [BUGGY]  Node  rhs  =  no.getLastChild();  [CE]  cannot  find  symbol  no  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  no.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  no.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    rhs    =    no.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  no	115	None	replace
162	[BUG]  [BUGGY]  Node  rhs  =  no.getFirstChild();  [CE]  cannot  find  symbol  no  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  no.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  no.getFirstChild();	  Node    rhs    =    n.getLastChild();    Node    rhs    =    no.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  no	115	None	replace
163	[BUG]  [BUGGY]  Node  lhs  =  no.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  no.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  no.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    rhs    =    no.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	115	None	replace
164	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	52	None	add
165	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	52	None	add
166	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  assign!=  null?  assign.getNext()  :  lhs;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  assign!=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    Node  lhs  =  assign!=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	52	None	add
167	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  assign  =  assign!=  null?  assign.getNext()  :  lhs;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  assign  =  assign!=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    Node  assign  =  assign!=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	52	None	add
168	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs);	  	non-compiled	[CE]  ';'  expected	52	None	add
169	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  >>  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  >>  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    Node  rhs  =  assign  >>  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	52	None	add
170	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  >=  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  >=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    Node  rhs  =  assign  >=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	52	None	add
171	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  assign  ==  null?  assign.getNext()  :  lhs;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  assign  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    Node  lhs  =  assign  ==  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	52	None	add
172	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  lhs.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  lhs.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  lhs  =  assign!=  null?  lhs.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	77	None	add
173	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	77	None	add
174	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  lhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	77	None	add
175	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign  ==  null?  lhs.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign  ==  null?  lhs.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  lhs  =  assign  ==  null?  lhs.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	77	None	add
176	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	77	None	add
177	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assignment!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assignment!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  lhs  =  assignment!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	77	None	add
178	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  c  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  c  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  c  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	77	None	add
179	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assignment.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assignment.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  lhs  =  assign!=  null?  assignment.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	77	None	add
180	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	25	2	replace
181	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	25	2	replace
182	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	25	1	replace
183	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	25	1	replace
184	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  lhs.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	25	2	replace
185	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  lhs.getLastChild();  [FE]  NullPointerException  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  lhs.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	25	2	replace
186	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	79	None	add
187	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  lhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	79	None	add
188	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  lhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	79	None	add
189	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	79	None	add
190	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  lhs  ==  null?  assign.getLastChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  lhs  ==  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  lhs  =  lhs  ==  null?  assign.getLastChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	79	None	add
191	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	79	None	add
192	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	79	None	add
193	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	79	None	add
194	[BUG]  [BUGGY]  Node  rhs  =  nodes.getLastChild();  [CE]  cannot  find  symbol  nodes  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  nodes.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  nodes.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    rhs    =    nodes.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  nodes	82	None	replace
195	[BUG]  [BUGGY]  Node  rhs  =  nodes.getFirstChild();  [CE]  cannot  find  symbol  nodes  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  nodes.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  nodes.getFirstChild();	  Node    rhs    =    n.getLastChild();    Node    rhs    =    nodes.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  nodes	82	None	replace
196	[BUG]  [BUGGY]  Node  lhs  =  nodes.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  nodes.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  nodes.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    rhs    =    nodes.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	82	None	replace
197	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  rhs  =  lhs.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  rhs  =  lhs.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.removeFirstChild();    Node  rhs  =  lhs.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	4	None	add
198	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  lhs  =  lhs.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  lhs  =  lhs.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.removeFirstChild();    Node  lhs  =  lhs.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	4	None	add
199	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	4	None	add
200	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  rhs  =  lhs.removeLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  rhs  =  lhs.removeLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.removeFirstChild();    Node  rhs  =  lhs.removeLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	4	None	add
201	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  rhs  =  assign.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  rhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.removeFirstChild();    Node  rhs  =  assign.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	4	None	add
202	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  lhs  =  lhs.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  lhs  =  lhs.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.removeFirstChild();    lhs  =  lhs.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	4	None	add
203	[BUG]  [BUGGY]  if(a.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	92	None	replace
204	[BUG]  [BUGGY]  if(a.getType()  ==  Token.NAME)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.NAME)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.NAME)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	92	None	replace
205	[BUG]  [BUGGY]  if(a.getType()  ==  Token.NAME)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.NAME)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.NAME)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	92	None	replace
206	[BUG]  [BUGGY]  Node  lhs  =  n.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  n.getLastChild();	  Node    rhs    =    lhs.getLastChild();    Node    lhs    =    lhs.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	29	None	replace
207	[BUG]  [BUGGY]  if(a.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    >=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	93	None	replace
208	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs;	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	27	2	replace
209	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs;	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	27	2	replace
210	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs;	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	27	1	replace
211	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs;	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	27	1	replace
212	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  lhs;	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	27	2	replace
213	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  lhs;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  lhs;	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	27	2	replace
214	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	100	None	replace
215	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	100	None	replace
216	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  rhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  rhs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  rhs  =  lhs.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	100	None	replace
217	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  lhs.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	100	None	replace
218	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  lhs  =  n.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  lhs  =  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Node  lhs  =  n.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    lhs    =    n.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	replace
219	[BUG]  [BUGGY]  Node  rhs  =  assign.getLastChild();  Node  lhs  =  n.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getLastChild();  Node  lhs  =  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getLastChild();  Node  lhs  =  n.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    lhs    =    n.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	replace
220	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	54	None	add
221	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  lhs  =  assign  ==  null?  assign.getNext()  :  lhs;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  lhs  =  assign  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    Node  lhs  =  assign  ==  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	54	None	add
222	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  assign  =  assign  ==  null?  assign.getNext()  :  lhs;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  assign  =  assign  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    Node  assign  =  assign  ==  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	54	None	add
223	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	54	None	add
224	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  c  =  assign  ==  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  c  =  assign  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    Node  c  =  assign  ==  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	54	None	add
225	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  a  =  assign  ==  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  a  =  assign  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    Node  a  =  assign  ==  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	54	None	add
226	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs);  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs);	  	non-compiled	[CE]  ';'  expected	54	None	add
227	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  lhs  =  assign!=  null?  assign.getNext()  :  lhs;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  lhs  =  assign!=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    Node  lhs  =  assign!=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	54	None	add
228	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	102	None	add
229	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  n.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	102	None	add
230	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    Node  assign!=  null?  assign.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  ';'  expected	102	None	add
231	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	102	None	add
232	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  c  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  c  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    Node  c  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	102	None	add
233	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild());  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild());	  	non-compiled	[CE]  ';'  expected	102	None	add
234	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  a  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  a  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    Node  a  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	102	None	add
235	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  assign  ==  null?  assign.getLastChild()  :  n.getLastChild();  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  assign  ==  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    Node  assign  ==  null?  assign.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  ';'  expected	102	None	add
236	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  lhs.getNext()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	110	1	replace
237	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getNext()  :  lhs;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  lhs.getNext()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	110	1	replace
238	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  lhs.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign  ==  null?  lhs.getNext()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	110	2	replace
239	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  lhs.getNext()  :  lhs;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  lhs.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign  ==  null?  lhs.getNext()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	110	2	replace
240	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getNext()  :  null;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  lhs.getNext()  :  null;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	110	1	replace
241	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getNext()  :  null;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getNext()  :  null;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  lhs.getNext()  :  null;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	110	1	replace
242	[BUG]  [BUGGY]  Node  rhs  =  assignment!=  null?  lhs.getNext()  :  lhs;  [CE]  cannot  find  symbol  assignment  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assignment!=  null?  lhs.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assignment!=  null?  lhs.getNext()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	non-compiled	[CE]  cannot  find  symbol  assignment	110	None	replace
243	[BUG]  [BUGGY]  Node  rhs  =  lhs.getLastChild();  addChildToBack(rhs.detachFromParent());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  addChildToBack(rhs.detachFromParent());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getLastChild();  addChildToBack(rhs.detachFromParent());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    addChildToBack(lhs.detachFromParent());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
244	[BUG]  [BUGGY]  Node  lhs  =  n.getLastChild();  addChildToBack(lhs.detachFromParent());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  n.getLastChild();  addChildToBack(lhs.detachFromParent());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  n.getLastChild();  addChildToBack(lhs.detachFromParent());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    addChildToBack(lhs.detachFromParent());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	17	None	replace
245	[BUG]  [BUGGY]  Node  n  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  n.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  n.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    n    =    n.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	59	None	replace
246	[BUG]  [BUGGY]  Node  n  =  lhs.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  lhs.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  lhs.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    n    =    n.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	59	None	replace
247	[BUG]  [BUGGY]  Node  n  =  assign.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  assign.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    n    =    n.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	59	None	replace
248	[BUG]  [BUGGY]  Node  n  =  nodesToCollapse.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  nodesToCollapse.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  nodesToCollapse.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    n    =    n.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	59	None	replace
249	[BUG]  [BUGGY]  Preconditions.checkState(lhs.isName());  [CE]  cannot  find  symbol  rhs  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.isName());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.isName());    	non-compiled	[CE]  cannot  find  symbol  rhs	19	None	replace
250	[BUG]  [BUGGY]  Node  lhs  =  n.getLastChild();  Preconditions.checkState(lhs.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  n.getLastChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  n.getLastChild();  Preconditions.checkState(lhs.isName());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.isName());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	19	None	replace
251	[BUG]  [BUGGY]  Node  lhs  =  n.getLastChild();  preconditions.checkState(lhs.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  n.getLastChild();  preconditions.checkState(lhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  n.getLastChild();  preconditions.checkState(lhs.isName());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.isName());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	19	None	replace
252	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getLastChild();  Preconditions.checkState(lhs.isName());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	19	2	replace
253	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(lhs.isName());  [FE]  IllegalStateException  [FE]                            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  Preconditions.checkState(lhs.isName());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	19	2	replace
254	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  preconditions.checkState(lhs.isName());  [CE]  cannot  find  symbol  preconditions  [FE]                              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  preconditions.checkState(lhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  preconditions.checkState(lhs.isName());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.isName());    	non-compiled	[CE]  cannot  find  symbol  preconditions	19	None	replace
255	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isName());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	19	2	replace
256	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isName());  [FE]  IllegalStateException  [FE]                                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isName());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	19	2	replace
257	[BUG]  [BUGGY]  c  =  function  f(a)  {  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  c  =  function  f(a)  {  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	c  =  function  f(a)  {	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    ;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
258	[BUG]  [BUGGY]  if(a.getType()  ==  Token.EXPR_RESULT)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.EXPR_RESULT)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.EXPR_RESULT)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    ;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
259	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  var  c  =  function  f(a)  {  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	var  c  =  function  f(a)  {	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    ;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
260	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    ;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
261	[BUG]  [BUGGY]  if(a.getType()  ==  Token.VAR)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.VAR)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.VAR)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    ;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
262	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
263	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
264	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  rhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	65	None	replace
265	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT  ||  lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT  ||  lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
266	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT  ||  lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT  ||  lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT  ||  lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
267	[BUG]  [BUGGY]  rhs  =  lhs.getLastChild();  [CE]  cannot  find  symbol  rhs  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  rhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	rhs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    rhs    =    lhs.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  rhs	33	None	replace
268	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	103	2	replace
269	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	103	2	replace
270	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  n.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  IllegalStateException  	103	2	replace
271	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  n.getLastChild();  [FE]  IllegalStateException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  n.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  IllegalStateException  	103	2	replace
272	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.isName());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  NullPointerException  	18	2	replace
273	[BUG]  [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.isName());  [FE]  NullPointerException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.isName());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  NullPointerException  	18	2	replace
274	[BUG]  [BUGGY]  Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.isName());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    Preconditions.checkState(lhs.isName());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	18	None	replace
275	[BUG]  [BUGGY]  Node  rhs  =  nodesToCollapse.getLastChild();  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  nodesToCollapse.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  nodesToCollapse.getLastChild();	  Node    rhs    =    nodesToCollapse.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
276	[BUG]  [BUGGY]  Node  rhs  =  nodesToCollapse.cloneTree();  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  nodesToCollapse.cloneTree();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  nodesToCollapse.cloneTree();	  Node    rhs    =    nodesToCollapse.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
277	[BUG]  [BUGGY]  Node  n  =  n.getLastChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  n.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    n    =    n.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	14	None	replace
278	[BUG]  [BUGGY]  Node  n  =  lhs.getLastChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  lhs.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    n    =    n.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	14	None	replace
279	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  n  =  n.getLastChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  n  =  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Node  n  =  n.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    n    =    n.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	14	None	replace
280	[BUG]  [BUGGY]  Node  rhs  =  lhs.getLastChild();  Node  n  =  n.getLastChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  Node  n  =  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getLastChild();  Node  n  =  n.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    n    =    n.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	14	None	replace
281	[BUG]  [BUGGY]  Node  n  =  assign.getLastChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  assign.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  assign.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    n    =    n.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	14	None	replace
282	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	125	None	replace
283	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	125	2	replace
284	[BUG]  [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	125	2	replace
285	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getNext();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  NullPointerException  	125	2	replace
286	[BUG]  [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(rhs.hasChildren());  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getNext();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  NullPointerException  	125	2	replace
287	[BUG]  [BUGGY]  Node  lhs  =  n.getLastChild();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  n.getLastChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  n.getLastChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	16	None	replace
288	[BUG]  [BUGGY]  Node  lhs  =  n.getLastChild();  preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  n.getLastChild();  preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  n.getLastChild();  preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	16	None	replace
289	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getLastChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	16	2	replace
290	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(lhs.hasChildren());  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	16	2	replace
291	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  preconditions.checkState(lhs.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	16	None	replace
292	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  NullPointerException  	16	2	replace
293	[BUG]  [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.hasChildren());  [FE]  NullPointerException  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  NullPointerException  	16	2	replace
294	[BUG]  [BUGGY]  Node  rhs  =  lhs.getLastChild();  preconditions.checkState(rhs.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]                          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getLastChild();  preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	16	None	replace
295	[BUG]  [BUGGY]  Preconditions.checkState(assign.hasChildren());  [CE]  cannot  find  symbol  rhs  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.hasChildren());	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    preconditions.checkState(rhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  rhs	128	None	replace
296	[BUG]  [BUGGY]  Node  rhs  =  assign.getNext();  preconditions.checkState(rhs.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getNext();  preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    preconditions.checkState(rhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	128	None	replace
297	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  rhs  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    preconditions.checkState(rhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  rhs	128	None	replace
298	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  [CE]  cannot  find  symbol  rhs  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(n.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(n.hasChildren());	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    preconditions.checkState(rhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  rhs	128	None	replace
299	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  rhs  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    preconditions.checkState(rhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  rhs	128	None	replace
300	[BUG]  [BUGGY]  Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	61	None	replace
301	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	61	2	replace
302	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	61	2	replace
303	[BUG]  [BUGGY]  Node  rhs  =  parent.getFirstChild();  [CE]  cannot  find  symbol  parent  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  parent.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  parent.getFirstChild();	  Node    rhs    =    node.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  parent	89	None	replace
304	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  preconditions.checkState(rhs.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    preconditions.checkState(rhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	113	None	replace
305	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
306	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
307	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
308	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
309	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
310	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
311	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [CE]  cannot  find  symbol  rhs  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	69	None	replace
312	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.BLOCK);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()!=  Token.BLOCK);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	69	2	replace
313	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.BLOCK);  Node  rhs  =  assign.getNext();  [FE]  NullPointerException  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.BLOCK);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()!=  Token.BLOCK);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	69	2	replace
314	[BUG]  [BUGGY]  Node  rhs  =  assign.getNextSibling();  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNextSibling();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getNextSibling();	  Node    rhs    =    lhs.getNextSibling();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
315	[BUG]  [BUGGY]  Node  rhs  =  parent.getNextSibling();  [CE]  cannot  find  symbol  parent  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  parent.getNextSibling();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  parent.getNextSibling();	  Node    rhs    =    lhs.getNextSibling();    	non-compiled	[CE]  cannot  find  symbol  parent	111	None	replace
316	[BUG]  [BUGGY]  Node  rhs  =  nodesToCollapse.getNextSibling();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  nodesToCollapse.getNextSibling();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  nodesToCollapse.getNextSibling();	  Node    rhs    =    lhs.getNextSibling();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
317	[BUG]  [BUGGY]  Node  rhs  =  n.getNextSibling();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNextSibling();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getNextSibling();	  Node    rhs    =    lhs.getNextSibling();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
318	[BUG]  [BUGGY]  Node  rhs  =  assignment.getNextSibling();  [CE]  cannot  find  symbol  assignment  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assignment.getNextSibling();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assignment.getNextSibling();	  Node    rhs    =    lhs.getNextSibling();    	non-compiled	[CE]  cannot  find  symbol  assignment	111	None	replace
319	[BUG]  [BUGGY]  Node  lhs  =  assign.getNextSibling();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNextSibling();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNextSibling();	  Node    rhs    =    lhs.getNextSibling();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	111	None	replace
320	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	71	None	replace
321	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	71	2	replace
322	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	71	2	replace
323	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	71	2	replace
324	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	71	2	replace
325	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	71	None	replace
326	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()!=  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()!=  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  NullPointerException  	71	2	replace
327	[BUG]  [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()!=  Token.EXPR_RESULT);  [FE]  NullPointerException  [FE]                              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()!=  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()!=  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  NullPointerException  	71	2	replace
328	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	66	2	replace
329	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	66	2	replace
330	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()!=  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	66	2	replace
331	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()!=  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	66	2	replace
332	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  var.addChildToBack(assign.getNext());  [CE]  cannot  find  symbol  rhs  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  var.addChildToBack(assign.getNext());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  var.addChildToBack(assign.getNext());	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	66	None	replace
333	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	99	None	replace
334	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  lhs.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	99	None	replace
335	[BUG]  [BUGGY]  Node  n  =  assign.getNext();  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  assign.getNext();  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  assign.getNext();  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	99	None	replace
336	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  lhs.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	99	None	replace
337	[BUG]  [BUGGY]  Node  lhs  =  n.getLastChild();  Node  rhs  =  n.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  n.getLastChild();  Node  rhs  =  n.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  n.getLastChild();  Node  rhs  =  n.getFirstChild();	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	84	None	replace
338	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getParent();	  Node    rhs    =    lhs.getNext();    	compilable	  [FE]  IllegalStateException  	2	2	replace
339	[BUG]  [BUGGY]  Node  rhs  =  lhs.getParent();  [FE]  IllegalStateException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getParent();	  Node    rhs    =    lhs.getNext();    	compilable	  [FE]  IllegalStateException  	2	2	replace
340	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  result:  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  result:  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	94	None	replace
341	[BUG]  [BUGGY]  Node  rhs  =  node.getLastChild();  [CE]  cannot  find  symbol  node  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  node.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  node.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    rhs    =    node.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  node	81	None	replace
342	[BUG]  [BUGGY]  Node  lhs  =  node.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  node.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  node.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    rhs    =    node.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	81	None	replace
343	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	35	None	replace
344	[BUG]  [BUGGY]  Node  rhs  =  parent.getLastChild();  [CE]  cannot  find  symbol  parent  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  parent.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  parent.getLastChild();	  Node    rhs    =    assignment.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  parent	21	None	replace
345	[BUG]  [BUGGY]  Node  rhs  =  assigned.getLastChild();  [CE]  cannot  find  symbol  assigned  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assigned.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assigned.getLastChild();	  Node    rhs    =    assignment.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  assigned	21	None	replace
346	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.removeFirstChild()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.removeFirstChild()!=  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()!=    null);    	compilable	  [FE]  IllegalStateException  	104	2	replace
347	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.removeFirstChild()!=  null);  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.removeFirstChild()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.removeFirstChild()!=  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()!=    null);    	compilable	  [FE]  IllegalStateException  	104	2	replace
348	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.removeFirstChild()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.removeFirstChild()!=  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()!=    null);    	compilable	  [FE]  IllegalStateException  	104	2	replace
349	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.removeFirstChild()!=  null);  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.removeFirstChild()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.removeFirstChild()!=  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()!=    null);    	compilable	  [FE]  IllegalStateException  	104	2	replace
350	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.removeFirstChild()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.removeFirstChild()!=  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()!=    null);    	compilable	  [FE]  IllegalStateException  	104	2	replace
351	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.removeFirstChild()!=  null);  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.removeFirstChild()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.removeFirstChild()!=  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()!=    null);    	compilable	  [FE]  IllegalStateException  	104	2	replace
352	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()!=  null);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()!=  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()!=    null);    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	104	None	replace
353	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()!=  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()!=    null);    	compilable	  [FE]  IllegalStateException  	104	2	replace
354	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()!=  null);  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()!=  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()!=    null);    	compilable	  [FE]  IllegalStateException  	104	2	replace
355	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	105	2	replace
356	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.removeFirstChild()  ==  null);  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	105	2	replace
357	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	105	2	replace
358	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.removeFirstChild()  ==  null);  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	105	2	replace
359	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	105	2	replace
360	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.removeFirstChild()  ==  null);  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	105	2	replace
361	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()  ==  null);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	105	None	replace
362	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	105	2	replace
363	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()  ==  null);  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	105	2	replace
364	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Node  rhs  =  assign.getParent();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Node  rhs  =  assign.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Node  rhs  =  assign.getParent();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	22	None	add
365	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Node  rhs  =  assignment.getParent();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Node  rhs  =  assignment.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Node  rhs  =  assignment.getParent();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	22	None	add
366	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Node  rhs  =  assigned.getParent();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Node  rhs  =  assigned.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Node  rhs  =  assigned.getParent();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	22	None	add
367	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Node  lhs  =  assign.getParent();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	22	None	add
368	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Node  assign  =  assign.getParent();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Node  assign  =  assign.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Node  assign  =  assign.getParent();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	22	None	add
369	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Node  rhs  =  assign.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Node  rhs  =  assign.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	22	None	add
370	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  rhs  =  assign.getParent();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  rhs  =  assign.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    rhs  =  assign.getParent();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	22	None	add
371	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Node  rhs  =  lhs.getLastChild());  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Node  rhs  =  lhs.getLastChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Node  rhs  =  lhs.getLastChild());	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    lhs.getLastChild());    	non-compiled	[CE]  ';'  expected	121	None	replace
372	[BUG]  [BUGGY]  Node  lhs  =  lhs.getFirstChild();  Node  rhs  =  lhs.getLastChild());  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  lhs.getFirstChild();  Node  rhs  =  lhs.getLastChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  lhs.getFirstChild();  Node  rhs  =  lhs.getLastChild());	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    lhs.getLastChild());    	non-compiled	[CE]  ';'  expected	121	None	replace
373	[BUG]  [BUGGY]  Node  rhs  =  nodesToCollapse.getNext();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  nodesToCollapse.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  nodesToCollapse.getNext();	  Node    rhs    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
374	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION    ||    lhs.getType()    ==    Token.NAME);    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	70	None	replace
375	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION    ||    lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  	70	2	replace
376	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION    ||    lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  	70	2	replace
377	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  rhs  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION    ||    lhs.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  rhs	70	None	replace
378	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION    ||    lhs.getType()    ==    Token.NAME);    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	70	None	replace
379	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION    ||    lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	70	2	replace
380	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION    ||    lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	70	2	replace
381	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION    ||    lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  NullPointerException  	70	2	replace
382	[BUG]  [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);  [FE]  NullPointerException  [FE]                              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION    ||    lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  NullPointerException  	70	2	replace
383	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	68	2	replace
384	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	68	2	replace
385	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	68	2	replace
386	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	68	2	replace
387	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  lhs.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	68	None	replace
388	[BUG]  [BUGGY]  Node  lhs  =  node.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  node.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  node.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    node.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	86	None	replace
389	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Node  n  =  lhs.getLastChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Node  n  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Node  n  =  lhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    Node    n    =    lhs.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	122	None	replace
390	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);	  Node    rhs    =    lhs.getLastChild();    Node    n    =    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	122	2	replace
391	[BUG]  [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);	  Node    rhs    =    lhs.getLastChild();    Node    n    =    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	122	2	replace
392	[BUG]  [BUGGY]  Node  lhs  =  assignment.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assignment.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assignment.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assignment.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	48	None	replace
393	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  lhs  =  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  lhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Node  lhs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getFirstChild();    Node    lhs    =    lhs.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	replace
394	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Node  lhs  =  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Node  lhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Node  lhs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getFirstChild();    Node    lhs    =    lhs.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	replace
395	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  lhs  =  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  lhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  lhs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getFirstChild();    Node    lhs    =    lhs.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	replace
396	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getParent()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign  ==  null?  assign.getParent()  :  lhs;	  Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  	55	2	replace
397	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getParent()  :  lhs;  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getParent()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign  ==  null?  assign.getParent()  :  lhs;	  Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  	55	2	replace
398	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Node  lhs  =  n.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Node  lhs  =  n.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Node  lhs  =  n.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    lhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	60	None	replace
399	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	129	None	replace
400	[BUG]  [BUGGY]  Node  rhs  =  assign.getNext();  preconditions.checkState(lhs.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getNext();  preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	129	None	replace
401	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	97	None	replace
402	[BUG]  [BUGGY]  Node  n  =  assign.getNext();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  assign.getNext();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  assign.getNext();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	97	None	replace
403	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  lhs.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	97	None	replace
404	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	97	None	replace
405	[BUG]  [BUGGY]  Node  parent  =  assign.getParent();  [CE]  cannot  find  symbol  rhs  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  parent  =  assign.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  parent  =  assign.getParent();	  Node    parent    =    lhs.getParent();    	non-compiled	[CE]  cannot  find  symbol  rhs	51	None	replace
406	[BUG]  [BUGGY]  Node  parent  =  lhs.getNext();  [CE]  cannot  find  symbol  rhs  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  parent  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  parent  =  lhs.getNext();	  Node    parent    =    lhs.getParent();    	non-compiled	[CE]  cannot  find  symbol  rhs	51	None	replace
407	[BUG]  [BUGGY]  Node  parent  =  lhs.next();  [CE]  cannot  find  symbol  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  parent  =  lhs.next();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  parent  =  lhs.next();	  Node    parent    =    lhs.getParent();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
408	[BUG]  [BUGGY]  Node  parent  =  n.getParent();  [CE]  cannot  find  symbol  rhs  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  parent  =  n.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  parent  =  n.getParent();	  Node    parent    =    lhs.getParent();    	non-compiled	[CE]  cannot  find  symbol  rhs	51	None	replace
409	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getParent()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  assign.getParent()  :  lhs;	  Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  IllegalStateException  	53	2	replace
410	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getParent()  :  lhs;  [FE]  IllegalStateException  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getParent()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getParent()  :  lhs;	  Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  IllegalStateException  	53	2	replace
411	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  rhs  =  n.getLastChild());  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  rhs  =  n.getLastChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Node  rhs  =  n.getLastChild());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild());    	non-compiled	[CE]  ';'  expected	116	None	replace
412	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  nodesToCollapse  =  n.getLastChild();  [CE]  cannot  assign  a  value  to  final  variable  nodesToCollapse  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  nodesToCollapse  =  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  nodesToCollapse  =  n.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  nodesToCollapse	116	None	replace
413	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  lhs.getFirstChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	78	2	replace
414	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getFirstChild()  :  lhs.getLastChild();  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  lhs.getFirstChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	78	2	replace
415	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  lhs.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign  ==  null?  lhs.getFirstChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	78	2	replace
416	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  lhs.getFirstChild()  :  lhs.getLastChild();  [FE]  NullPointerException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  lhs.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign  ==  null?  lhs.getFirstChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	78	2	replace
417	[BUG]  [BUGGY]  Node  rhs  =  assignment!=  null?  lhs.getFirstChild()  :  lhs.getLastChild();  [CE]  cannot  find  symbol  assignment  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assignment!=  null?  lhs.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assignment!=  null?  lhs.getFirstChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	78	None	replace
418	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(rhs.hasOneChild());    	compilable	  [FE]  NullPointerException  	112	2	replace
419	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(rhs.hasOneChild());    	compilable	  [FE]  NullPointerException  	112	2	replace
420	[BUG]  [BUGGY]  Node  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.hasOneChild());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.hasOneChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.hasOneChild());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(rhs.hasOneChild());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	112	None	replace
421	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasOneChild());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasOneChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasOneChild());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(rhs.hasOneChild());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	112	None	replace
422	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(rhs.hasOneChild());    	compilable	  [FE]  IllegalStateException  	112	2	replace
423	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(rhs.hasOneChild());    	compilable	  [FE]  IllegalStateException  	112	2	replace
424	[BUG]  [BUGGY]  Preconditions.checkState(lhs.hasOneChild());  [CE]  cannot  find  symbol  rhs  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.hasOneChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.hasOneChild());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(rhs.hasOneChild());    	non-compiled	[CE]  cannot  find  symbol  rhs	112	None	replace
425	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.hasOneChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.hasOneChild());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(rhs.hasOneChild());    	compilable	  [FE]  NullPointerException  	112	2	replace
426	[BUG]  [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.hasOneChild());  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.hasOneChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.hasOneChild());	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    lhs.getFirstChild();    Preconditions.checkState(rhs.hasOneChild());    	compilable	  [FE]  NullPointerException  	112	2	replace
427	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	98	None	replace
428	[BUG]  [BUGGY]  Node  n  =  assign.getNext();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  assign.getNext();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  assign.getNext();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	98	None	replace
429	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  lhs.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	98	None	replace
430	[BUG]  [BUGGY]  Node  lhs  =  n.getFirstChild();  preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  n.getFirstChild();  preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  n.getFirstChild();  preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	62	None	replace
431	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  preconditions.checkState(lhs.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	62	None	replace
432	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	replace
433	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	replace
434	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	80	2	replace
435	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getLastChild();  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	80	2	replace
436	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  lhs.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign  ==  null?  lhs.getLastChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	80	2	replace
437	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  lhs.getLastChild()  :  lhs.getLastChild();  [FE]  NullPointerException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  lhs.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign  ==  null?  lhs.getLastChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	80	2	replace
438	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Node  lhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Node  lhs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.getNext();    Node  lhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
439	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Node  rhs  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Node  rhs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.getNext();    Node  rhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	1	None	add
440	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Node  lhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.getNext();    Node  lhs  =  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
441	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  lhs  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  lhs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.getNext();    lhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	1	None	add
442	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Node  c  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Node  c  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.getNext();    Node  c  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	1	None	add
443	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Node  lhs  =  parent.getParent();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Node  lhs  =  parent.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.getNext();    Node  lhs  =  parent.getParent();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
444	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Node  lhs  =  lhs.getPrevious();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Node  lhs  =  lhs.getPrevious();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.getNext();    Node  lhs  =  lhs.getPrevious();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
445	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.isName());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	63	2	replace
446	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.isName());  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.isName());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	63	2	replace
447	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.isName());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  	63	2	replace
448	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.isName());  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.isName());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  	63	2	replace
449	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.isName());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	63	None	replace
450	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.isName());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  NullPointerException  	63	2	replace
451	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.isName());  [FE]  NullPointerException  [FE]                            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.isName());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  NullPointerException  	63	2	replace
452	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.isName());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	63	2	replace
453	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.isName());  [FE]  IllegalStateException  [FE]                              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.isName());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	63	2	replace
454	[BUG]  [BUGGY]  Node  lhs  =  nodesToCollapse.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  nodesToCollapse.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  nodesToCollapse.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    nodesToCollapse.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	85	None	replace
455	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs.getNext();	  Node    rhs    =    assign.getParent();    	compilable	  [FE]  NullPointerException  	23	2	replace
456	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs.getNext();  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs.getNext();	  Node    rhs    =    assign.getParent();    	compilable	  [FE]  NullPointerException  	23	2	replace
457	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	26	None	add
458	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	26	None	add
459	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	26	None	add
460	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs);  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs);	  	non-compiled	[CE]  ';'  expected	26	None	add
461	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  assign!=  null?  assign.getFirstChild()  :  lhs;  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  assign!=  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    Node  assign!=  null?  assign.getFirstChild()  :  lhs;	  	non-compiled	[CE]  ';'  expected	26	None	add
462	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	26	None	add
463	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs);  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  lhs);	  	non-compiled	[CE]  ';'  expected	26	None	add
464	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  lhs;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    Node  assign  =  assign!=  null?  assign.getFirstChild()  :  lhs;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	26	None	add
465	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getParent();	  Node    rhs    =    n.getNext();    	compilable	  [FE]  NullPointerException  	108	2	replace
466	[BUG]  [BUGGY]  Node  rhs  =  n.getParent();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getParent();	  Node    rhs    =    n.getNext();    	compilable	  [FE]  NullPointerException  	108	2	replace
467	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  n;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs!=  null?  assign.getNext()  :  n;	  Node    rhs    =    n.getNext();    	compilable	  [FE]  NullPointerException  	108	2	replace
468	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  n;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  n;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs!=  null?  assign.getNext()  :  n;	  Node    rhs    =    n.getNext();    	compilable	  [FE]  NullPointerException  	108	2	replace
469	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	61	2	replace
470	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.hasChildren());  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	61	2	replace
471	[BUG]  [BUGGY]  Node  rhs  =  successor.getNextSibling();  [CE]  cannot  find  symbol  successor  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  successor.getNextSibling();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  successor.getNextSibling();	  Node    rhs    =    lhs.getNextSibling();    	non-compiled	[CE]  cannot  find  symbol  successor	111	None	replace
472	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1!=	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	47	None	replace
473	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Node  rhs  =  assign.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Node  rhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Node  rhs  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assign.removeFirstChild());    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	130	None	replace
474	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  rhs  =  assign.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  rhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.removeFirstChild();  Node  rhs  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assign.removeFirstChild());    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	130	None	replace
475	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  lhs  =  rhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getFirstChild();  lhs  =  rhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    lhs    =    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	31	2	replace
476	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  lhs  =  rhs.getLastChild();  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  lhs  =  rhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  lhs  =  rhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    lhs    =    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	31	2	replace
477	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Node  lhs  =  lhs.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Node  lhs  =  lhs.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Node  lhs  =  lhs.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	35	None	replace
478	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Node  lhs  =  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Node  lhs  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	35	None	replace
479	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	35	None	replace
480	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Node  lhs  =  n.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Node  lhs  =  n.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Node  lhs  =  n.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	35	None	replace
481	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Node  lhs  =  n.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Node  lhs  =  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Node  lhs  =  n.getLastChild();	  Node    rhs    =    lhs.getFirstChild();    Node    lhs    =    lhs.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	replace
482	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  rhs  =  assignment.removeFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  rhs  =  assignment.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  rhs  =  assignment.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assignment.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	36	None	replace
483	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  rhs  =  assignment.removeFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  rhs  =  assignment.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  rhs  =  assignment.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assignment.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	36	None	replace
484	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  lhs);  Node  rhs  =  assignment.removeFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  lhs);  Node  rhs  =  assignment.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.removeFirstChild()  ==  lhs);  Node  rhs  =  assignment.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assignment.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	36	None	replace
485	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  rhs  =  assignment.removeFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  rhs  =  assignment.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  rhs  =  assignment.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assignment.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	36	None	replace
486	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	100	2	replace
487	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	100	2	replace
488	[BUG]  [BUGGY]  Node  a  =  assign.getNext();  [CE]  cannot  find  symbol  rhs  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  a  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  a  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	100	None	replace
489	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  rhs  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.GETPROP);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	100	None	replace
490	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()!=  null);  Node  rhs  =  assign.getParent();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()!=  null);  Node  rhs  =  assign.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Preconditions.checkState(assign.getParent()!=  null);  Node  rhs  =  assign.getParent();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	22	None	add
491	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()  ==  null);  Node  rhs  =  assign.getParent();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()  ==  null);  Node  rhs  =  assign.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Preconditions.checkState(assign.getParent()  ==  null);  Node  rhs  =  assign.getParent();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	22	None	add
492	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()  >=  null);  Node  rhs  =  assign.getParent();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()  >=  null);  Node  rhs  =  assign.getParent();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Preconditions.checkState(assign.getParent()  >=  null);  Node  rhs  =  assign.getParent();	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	22	None	add
493	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Node  rhs  =  assign.getParent();  Preconditions.checkState(rhs.hasChildren());  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Node  rhs  =  assign.getParent();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Node  rhs  =  assign.getParent();  Preconditions.checkState(rhs.hasChildren());	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	22	None	add
494	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()!=  null);  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Preconditions.checkState(assign.getParent()!=  null);	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	22	None	add
495	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()  ==  null);  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Preconditions.checkState(assign.getParent()  ==  null);	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	22	None	add
496	[BUG]  [BUGGY]  Node  rhs  =  assign.getParent();  Node  rhs  =  assign.getParent();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getParent();  Node  rhs  =  assign.getParent();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign.getParent();    Node  rhs  =  assign.getParent();  Preconditions.checkState(lhs.hasChildren());	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	22	None	add
497	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
498	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
499	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
500	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
501	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
502	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
503	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
504	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
505	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.CALL);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.CALL);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
506	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.CALL);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.CALL);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.CALL);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
507	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	109	None	add
508	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  assign  ==  null?  assign.getNext()  :  lhs;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  assign  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  lhs  =  assign  ==  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	109	None	add
509	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  assignment!=  null?  assign.getNext()  :  lhs;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  lhs  =  assignment!=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  lhs  =  assignment!=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	109	None	add
510	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  t  =  n.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  t  =  n.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Node  t  =  n.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	72	None	add
511	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  m  =  n.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  m  =  n.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Node  m  =  n.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	72	None	add
512	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Preconditions.checkState(lhs.isName());  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Preconditions.checkState(lhs.isName());	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	72	None	add
513	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  n.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  n.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  n.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	107	None	add
514	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  n.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  n.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  n.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	107	None	add
515	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  n.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  n.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  n.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	107	None	add
516	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  n.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  n.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  n.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	107	None	add
517	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  n.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  n.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  rhs  =  n.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	107	None	add
518	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  assign  >>  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  assign  >>  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  rhs  =  assign  >>  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	24	None	add
519	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  assign  >=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  assign  >=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  rhs  =  assign  >=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	24	None	add
520	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  n.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	103	1	replace
521	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  n.getLastChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  n.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	103	1	replace
522	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getFirstChild();	  Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	103	1	replace
523	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getFirstChild();	  Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	103	1	replace
524	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getFirstChild();	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	25	1	replace
525	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getFirstChild();	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	25	1	replace
526	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  assign  =  assign.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  assign  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.removeFirstChild();  Node  assign  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    assign    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	40	None	replace
527	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  assign  =  assign.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  assign  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.removeFirstChild();  Node  assign  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    assign    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	40	None	replace
528	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  assign  =  rhs.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  assign  =  rhs.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.removeFirstChild();  Node  assign  =  rhs.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    assign    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	40	None	replace
529	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  assign  =  lhs.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  assign  =  lhs.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.removeFirstChild();  Node  assign  =  lhs.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    assign    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	40	None	replace
530	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  assign.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  rhs  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  assign.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  assign.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION    ||    lhs.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  rhs	70	None	replace
531	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  var.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  var.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION    ||    lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	70	2	replace
532	[BUG]  [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  var.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  var.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  var.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION    ||    lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	70	2	replace
533	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	16	2	replace
534	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.hasChildren());  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	16	2	replace
535	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Object  c  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Object  c  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.getNext();    Object  c  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	1	None	add
536	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Node  b  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Node  b  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.getNext();    Node  b  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	1	None	add
537	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	90	None	replace
538	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	90	None	replace
539	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1  [Delete]  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	90	None	replace
540	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	90	None	replace
541	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  >=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1  >=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1  >=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	90	None	replace
542	[BUG]  [BUGGY]  Node  rhs  =  lhs.replaceChild(n,  assign);  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.replaceChild(n,  assign);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.replaceChild(n,  assign);	  Node    rhs    =    lhs.next();    	non-compiled	[CE]  incompatible  types	3	None	replace
543	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  ==  null?  assignment.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  ==  null?  assignment.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    Node  rhs  =  assign  ==  null?  assignment.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	54	None	add
544	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Preconditions.checkState(assign.getNext()!=  null);  [CE]  cannot  find  symbol  rhs  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Preconditions.checkState(assign.getNext()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getNext()  ==  null);  Preconditions.checkState(assign.getNext()!=  null);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	123	None	replace
545	[BUG]  [BUGGY]  Preconditions.checkState(assign.getParent()  ==  null);  Preconditions.checkState(assign.getNext()  ==  null);  [CE]  cannot  find  symbol  rhs  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getParent()  ==  null);  Preconditions.checkState(assign.getNext()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getParent()  ==  null);  Preconditions.checkState(assign.getNext()  ==  null);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	123	None	replace
546	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Preconditions.checkState(assign.getNext()  ==  null);  [CE]  cannot  find  symbol  rhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Preconditions.checkState(assign.getNext()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getNext()  ==  null);  Preconditions.checkState(assign.getNext()  ==  null);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	123	None	replace
547	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Preconditions.checkState(assign.getNext()  ==  null);  [CE]  cannot  find  symbol  rhs  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Preconditions.checkState(assign.getNext()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getNext()!=  null);  Preconditions.checkState(assign.getNext()  ==  null);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	123	None	replace
548	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  rhs  =  lhs.removeLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  rhs  =  lhs.removeLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.removeFirstChild();  Node  rhs  =  lhs.removeLastChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assign.removeLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	37	None	replace
549	[BUG]  [BUGGY]  Node  rhs  =  n.removeLastChild();  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.removeLastChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
550	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  rhs  =  n.removeLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  rhs  =  n.removeLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.removeFirstChild();  Node  rhs  =  n.removeLastChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assign.removeLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	37	None	replace
551	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(var.removeFirstChild()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(var.removeFirstChild()!=  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()!=    null);    	compilable	  [FE]  IllegalStateException  	104	2	replace
552	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(var.removeFirstChild()!=  null);  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(var.removeFirstChild()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(var.removeFirstChild()!=  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()!=    null);    	compilable	  [FE]  IllegalStateException  	104	2	replace
553	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Node  rhs  =  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Node  rhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getFirstChild();  Node  rhs  =  lhs.getLastChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	45	None	replace
554	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getFirstChild();  [CE]  cannot  find  symbol  a  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  a	45	None	replace
555	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  rhs  =  assign.getFirstChild();  [CE]  cannot  find  symbol  a  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  a	45	None	replace
556	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	80	2	replace
557	[BUG]  [BUGGY]  Node  rhs  =  lhs  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs  ==  null?  assign.getFirstChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	80	2	replace
558	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getFirstChild();	  Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	80	2	replace
559	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getFirstChild();  [FE]  NullPointerException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  lhs.getFirstChild();	  Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	80	2	replace
560	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  rhs  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    preconditions.checkState(rhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  rhs	128	None	replace
561	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  rhs  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    preconditions.checkState(rhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  rhs	128	None	replace
562	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  cannot  find  symbol  rhs  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    preconditions.checkState(rhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  rhs	128	None	replace
563	[BUG]  [BUGGY]  Object  c  =  function  f(a)  {  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Object  c  =  function  f(a)  {  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Object  c  =  function  f(a)  {	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  ';'  expected	95	None	replace
564	[BUG]  [BUGGY]  var  =  function  f(a)  {  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  var  =  function  f(a)  {  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	var  =  function  f(a)  {	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  ';'  expected	95	None	replace
565	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();a  =  2;var  c  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();a  =  2;var  c  =  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();a  =  2;var  c  =  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	46	None	replace
566	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  rhs  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	68	None	replace
567	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	68	2	replace
568	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	68	2	replace
569	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	68	2	replace
570	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	68	2	replace
571	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(var.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(var.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	105	2	replace
572	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(var.removeFirstChild()  ==  null);  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(var.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(var.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	105	2	replace
573	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Node  n  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Node  n  =  n.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Node  n  =  n.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    n    =    n.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	59	None	replace
574	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  n  =  lhs.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  n  =  lhs.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Node  n  =  lhs.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    n    =    n.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	59	None	replace
575	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Node  n  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Node  n  =  n.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Node  n  =  n.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    n    =    n.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	59	None	replace
576	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  Node  n  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Node  n  =  n.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  Node  n  =  n.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    n    =    n.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	59	None	replace
577	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assignment!=  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assignment!=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    Node  rhs  =  assignment!=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	52	None	add
578	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs!=  null);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	43	2	replace
579	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs!=  null);  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs!=  null);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	43	2	replace
580	[BUG]  [BUGGY]  Preconditions.checkState(nodes.getLastChild()  ==  null);  [CE]  cannot  find  symbol  nodes  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(nodes.getLastChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(nodes.getLastChild()  ==  null);	  Node    rhs    =    n.getLastChild();    Node    rhs    =    nodes.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  nodes	82	None	replace
581	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	99	2	replace
582	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	99	2	replace
583	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  rhs  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	99	None	replace
584	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  rhs  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.VAR);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	101	None	replace
585	[BUG]  [BUGGY]  Node  rhs  =  lhs.getLastChild();  Node  n  =  lhs.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  Node  n  =  lhs.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getLastChild();  Node  n  =  lhs.getFirstChild();	  Node    rhs    =    lhs.getLastChild();    Node    n    =    lhs.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	122	None	replace
586	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(assign.getType()  ==  Token.BLOCK);  [CE]  cannot  find  symbol  rhs  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(assign.getType()  ==  Token.BLOCK);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(assign.getType()  ==  Token.BLOCK);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	69	None	replace
587	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(assign.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(assign.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
588	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(assign.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(assign.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Preconditions.checkState(assign.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
589	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
590	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.BLOCK);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
591	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [CE]  cannot  find  symbol  rhs  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.BLOCK);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	69	None	replace
592	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	77	None	add
593	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	77	None	add
594	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	77	None	add
595	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild());  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild());	  	non-compiled	[CE]  ';'  expected	77	None	add
596	[BUG]  [BUGGY]  Node  rhs  =  a.getFirstChild();  [CE]  cannot  find  symbol  a  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  a.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  a.getFirstChild();	  Node    rhs    =    node.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  a	89	None	replace
597	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isDefined());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isDefined());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isDefined());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.isName());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
598	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Preconditions.checkState(assign.getNext()!=  null);  [CE]  cannot  find  symbol  rhs  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Preconditions.checkState(assign.getNext()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getNext()!=  null);  Preconditions.checkState(assign.getNext()!=  null);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	124	None	replace
599	[BUG]  [BUGGY]  Preconditions.checkState(assign.getParent()!=  null);  Preconditions.checkState(assign.getNext()!=  null);  [CE]  cannot  find  symbol  rhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getParent()!=  null);  Preconditions.checkState(assign.getNext()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getParent()!=  null);  Preconditions.checkState(assign.getNext()!=  null);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	124	None	replace
600	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  [CE]  cannot  find  symbol  rhs  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getNext()!=  null);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	124	None	replace
601	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  a  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(a.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  a	41	None	replace
602	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  a	41	None	replace
603	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	97	2	replace
604	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	97	2	replace
605	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  rhs  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	97	None	replace
606	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  assign  =  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  assign  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Node  assign  =  assign.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    assign    =    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	44	None	replace
607	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  assign  =  rhs.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Node  assign  =  rhs.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Node  assign  =  rhs.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    assign    =    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	44	None	replace
608	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  rhs  =  assign  >>  null?  assign.getLastChild()  :  n.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  rhs  =  assign  >>  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    Node  rhs  =  assign  >>  null?  assign.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	102	None	add
609	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  rhs  =  assign  >=  null?  assign.getLastChild()  :  n.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  rhs  =  assign  >=  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    Node  rhs  =  assign  >=  null?  assign.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	102	None	add
610	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  rhs  =  assign  [Delete]  null?  assign.getLastChild()  :  n.getLastChild();  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  n.getLastChild();  Node  rhs  =  assign  [Delete]  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    Node  rhs  =  assign  [Delete]  null?  assign.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  ';'  expected	102	None	add
611	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  rhs  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	98	None	replace
612	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	98	2	replace
613	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	98	2	replace
614	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  rhs  =  assign.getNext();  [CE]  cannot  find  symbol  rhs  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	98	None	replace
615	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs  ==  null?  assign.getNext()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  	110	2	replace
616	[BUG]  [BUGGY]  Node  rhs  =  lhs  ==  null?  assign.getNext()  :  lhs;  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs  ==  null?  assign.getNext()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  var  x=2;foo(x);var  x=3  	110	2	replace
617	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	110	2	replace
618	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs!=  null?  assign.getFirstChild()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	110	2	replace
619	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	110	1	replace
620	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	110	1	replace
621	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getParent()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs!=  null?  assign.getParent()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  IllegalStateException  	110	2	replace
622	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getParent()  :  lhs;  [FE]  IllegalStateException  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getParent()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs!=  null?  assign.getParent()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  IllegalStateException  	110	2	replace
623	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  rhs  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	65	None	replace
624	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
625	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
626	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
627	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
628	[BUG]  [BUGGY]  Node  rhs  =  collapse.getFirstChild();  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  collapse.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  collapse.getFirstChild();	  Node    rhs    =    nodesToCollapse.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
629	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	92	None	replace
630	[BUG]  [BUGGY]  FunctionNode  rhs  =  assign.getFirstChild();  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  FunctionNode  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	FunctionNode  rhs  =  assign.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
631	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  rhs  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	67	None	replace
632	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  rhs  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	67	None	replace
633	[BUG]  [BUGGY]  Node  lhs  =  n.getFirstChild();  Node  rhs  =  n.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  n.getFirstChild();  Node  rhs  =  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  n.getFirstChild();  Node  rhs  =  n.getLastChild();	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	57	None	replace
634	[BUG]  [BUGGY]  Node  rhs  =  assign.getLastChild();  Node  n  =  n.getLastChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getLastChild();  Node  n  =  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getLastChild();  Node  n  =  n.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    n    =    n.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	14	None	replace
635	[BUG]  [BUGGY]  Node  rhs  =  nodesToCollapse.removeFirstChild();  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  nodesToCollapse.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  nodesToCollapse.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assign.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
636	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  n;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  n;	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	27	2	replace
637	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  n;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  n;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  n;	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	27	2	replace
638	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	84	2	replace
639	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	84	2	replace
640	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  rhs  =  lhs.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  rhs  =  lhs.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.removeFirstChild();  Node  rhs  =  lhs.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assigned.removeFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	38	None	replace
641	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  rhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  rhs  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assigned.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	38	2	replace
642	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  rhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  rhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  rhs  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assigned.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	38	2	replace
643	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  rhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  rhs  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assigned.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	38	2	replace
644	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  rhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  rhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  rhs  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assigned.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	38	2	replace
645	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	79	None	add
646	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	79	None	add
647	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	79	None	add
648	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  rhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	66	None	replace
649	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  rhs  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	66	None	replace
650	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  rhs  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	66	None	replace
651	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign  >>  null?  assign.getFirstChild()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign  >>  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    Node  rhs  =  assign  >>  null?  assign.getFirstChild()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	26	None	add
652	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    Node  rhs  =  assign!=  null?  assign.getLastChild()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	26	None	add
653	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign  >=  null?  assign.getFirstChild()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assign  >=  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    Node  rhs  =  assign  >=  null?  assign.getFirstChild()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	26	None	add
654	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	106	None	replace
655	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getNext();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  NullPointerException  	71	2	replace
656	[BUG]  [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getNext();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getNext();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  NullPointerException  	71	2	replace
657	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  assign,  collapses);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,List<Collapse>)  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  n,  assign,  collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  n,  assign,  collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,List<Collapse>)	50	None	replace
658	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  lhs,  collapses);  [CE]  cannot  find  symbol  root  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  root,  lhs,  collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  root,  lhs,  collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  cannot  find  symbol  root	50	None	replace
659	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  collapses);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,List<Collapse>)  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  n,  collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  n,  collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,List<Collapse>)	50	None	replace
660	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  assignment,  collapses);  [CE]  cannot  find  symbol  assignment  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  n,  assignment,  collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  n,  assignment,  collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  cannot  find  symbol  assignment	50	None	replace
661	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  hs  =  lhs.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  hs  =  lhs.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.removeFirstChild();    Node  hs  =  lhs.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	4	None	add
662	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  t  =  lhs.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  t  =  lhs.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.removeFirstChild();    Node  t  =  lhs.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	4	None	add
663	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.removeFirstChild();    Preconditions.checkState(lhs.hasChildren());	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	4	None	add
664	[BUG]  [BUGGY]  if(a.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.FUNCTION)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    ;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
665	[BUG]  [BUGGY]  if(a.getType()  ==  Token.NAME)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.NAME)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.NAME)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    ;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
666	[BUG]  [BUGGY]  if(a.getType()  ==  Token.VAR)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.VAR)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.VAR)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    ;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
667	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  }  ;  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  }  ;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  }  ;	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    ;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
668	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	106	2	replace
669	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.hasChildren());  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	106	2	replace
670	[BUG]  [BUGGY]  Node  hs  =  lhs.getLastChild();  [CE]  cannot  find  symbol  rhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  hs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  hs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    Node    hs    =    lhs.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  rhs	30	None	replace
671	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  n.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  IllegalStateException  	103	2	replace
672	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  n.getLastChild();  [FE]  IllegalStateException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  n.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  IllegalStateException  	103	2	replace
673	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  n.getFirstChild()  :  n.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  IllegalStateException  	103	2	replace
674	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  n.getFirstChild()  :  n.getLastChild();  [FE]  IllegalStateException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  n.getFirstChild()  :  n.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  IllegalStateException  	103	2	replace
675	[BUG]  [BUGGY]  if(a.getType()  ==  Token.ASSIGN)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.ASSIGN)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.ASSIGN)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	95	None	replace
676	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  preconditions.checkState(rhs.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  preconditions.checkState(rhs.hasChildren());	  Node    rhs    =    n.getFirstChild();    Node    rhs    =    n.getFirstChild();    preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	62	None	replace
677	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	43	2	replace
678	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	43	2	replace
679	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	43	2	replace
680	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	43	2	replace
681	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	43	2	replace
682	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	43	2	replace
683	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	43	2	replace
684	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    rhs    =    assign.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	43	2	replace
685	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  assign  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	24	None	add
686	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  assigned  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  Node  assigned  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    Node  assigned  =  assign!=  null?  assign.getFirstChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	24	None	add
687	[BUG]  [BUGGY]  Node  hs  =  n.getLastChild();  [CE]  cannot  find  symbol  rhs  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  hs  =  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  hs  =  n.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    hs    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  rhs	83	None	replace
688	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  rhs  =  node.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  rhs  =  node.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Node  rhs  =  node.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	72	None	add
689	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	72	None	add
690	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  rhs  =  null.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.removeFirstChild();  Node  rhs  =  null.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.removeFirstChild();    Node  rhs  =  null.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	72	None	add
691	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isVar());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isVar());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	18	2	replace
692	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isVar());  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isVar());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  Preconditions.checkState(rhs.isVar());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	18	2	replace
693	[BUG]  [BUGGY]  Node  rhs  =  assigned.getNextSibling();  [CE]  cannot  find  symbol  assigned  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assigned.getNextSibling();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assigned.getNextSibling();	  Node    rhs    =    lhs.getNextSibling();    	non-compiled	[CE]  cannot  find  symbol  assigned	111	None	replace
694	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Node  rhs  =  assign.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.getNext();    Node  rhs  =  assign.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	1	None	add
695	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Node  hs  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Node  hs  =  lhs.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.getNext();    Node  hs  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	1	None	add
696	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  lhs  =  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  lhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  lhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	10	None	replace
697	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  lhs  =  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  lhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  lhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	10	None	replace
698	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	10	None	replace
699	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  lhs  =  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  lhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  lhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	10	None	replace
700	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    lhs    =    assign.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	10	None	replace
701	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild());  Node  rhs  =  assign.removeFirstChild();  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.removeFirstChild());  Node  rhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.removeFirstChild());  Node  rhs  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assigned.removeFirstChild();    	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	38	None	replace
702	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  rhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  rhs  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assigned.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	38	2	replace
703	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  rhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  rhs  =  assign.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  rhs  =  assign.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assigned.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	38	2	replace
704	[BUG]  [BUGGY]  Node  parent  =  lhs.getParentNode();  [CE]  cannot  find  symbol  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  parent  =  lhs.getParentNode();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  parent  =  lhs.getParentNode();	  Node    parent    =    lhs.getParent();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
705	[BUG]  [BUGGY]  Node  parent  =  lhs.removeFirstChild();  [CE]  cannot  find  symbol  rhs  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  parent  =  lhs.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  parent  =  lhs.removeFirstChild();	  Node    parent    =    lhs.getParent();    	non-compiled	[CE]  cannot  find  symbol  rhs	51	None	replace
706	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getFirstChild()  ==  null);  Node  rhs  =  assign.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getFirstChild()  ==  null);  Node  rhs  =  assign.getLastChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	45	2	replace
707	[BUG]  [BUGGY]  Preconditions.checkState(assign.getFirstChild()  ==  null);  Node  rhs  =  assign.getLastChild();  [FE]  IllegalStateException  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getFirstChild()  ==  null);  Node  rhs  =  assign.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getFirstChild()  ==  null);  Node  rhs  =  assign.getLastChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	45	2	replace
708	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assign.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assign.getLastChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	45	1	replace
709	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assign.getLastChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assign.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assign.getLastChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	45	1	replace
710	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getFirstChild()  ==  n);  Node  rhs  =  assign.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getFirstChild()  ==  n);  Node  rhs  =  assign.getLastChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	45	2	replace
711	[BUG]  [BUGGY]  Preconditions.checkState(assign.getFirstChild()  ==  n);  Node  rhs  =  assign.getLastChild();  [FE]  IllegalStateException  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getFirstChild()  ==  n);  Node  rhs  =  assign.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getFirstChild()  ==  n);  Node  rhs  =  assign.getLastChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	45	2	replace
712	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getLastChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	45	2	replace
713	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getLastChild();  [FE]  IllegalStateException  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getLastChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	45	2	replace
714	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getLastChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	45	2	replace
715	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getLastChild();  [FE]  IllegalStateException  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assign.getLastChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	45	2	replace
716	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assignment!=  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assignment!=  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  rhs  =  assignment!=  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	109	None	add
717	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getNext()  :  lhs;  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	109	None	add
718	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  [CE]  cannot  find  symbol  rhs  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getNext()  ==  null);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	123	None	replace
719	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild());  Node  rhs  =  assignment.removeFirstChild();  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.removeFirstChild());  Node  rhs  =  assignment.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.removeFirstChild());  Node  rhs  =  assignment.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assignment.removeFirstChild();    	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	36	None	replace
720	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	11	2	replace
721	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getFirstChild();  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  assign.getFirstChild();	  Node    rhs    =    lhs.getFirstChild();    Node    rhs    =    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	11	2	replace
722	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getParent()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  lhs.getParent()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  IllegalStateException  	110	2	replace
723	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getParent()  :  lhs;  [FE]  IllegalStateException  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getParent()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  lhs.getParent()  :  lhs;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  IllegalStateException  	110	2	replace
724	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getNext()  :  n;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  lhs.getNext()  :  n;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	110	1	replace
725	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getNext()  :  n;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getNext()  :  n;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  lhs.getNext()  :  n;	  Node    rhs    =    lhs!=    null?    assign.getNext()    :    lhs;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	110	1	replace
726	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  b=1  >>  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	91	None	replace
727	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    >>    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	91	None	replace
728	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	35	2	replace
729	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	35	2	replace
730	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	35	2	replace
731	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	35	2	replace
732	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	35	2	replace
733	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	35	2	replace
734	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	35	2	replace
735	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);	  Node    rhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	35	2	replace
736	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  Node    rhs    =    n.getFirstChild();    Node    lhs    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	60	2	replace
737	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  Node    rhs    =    n.getFirstChild();    Node    lhs    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	60	2	replace
738	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);	  Node    rhs    =    n.getFirstChild();    Node    lhs    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	60	2	replace
739	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);	  Node    rhs    =    n.getFirstChild();    Node    lhs    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	60	2	replace
740	[BUG]  [BUGGY]  Node  n  =  assignment.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  assignment.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  assignment.getFirstChild();	  Node    rhs    =    n.getFirstChild();    Node    n    =    n.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	59	None	replace
741	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	99	None	replace
742	[BUG]  [BUGGY]  Node  lhs  =  assignment.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assignment.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assignment.getLastChild();	  Node    rhs    =    lhs.getLastChild();    Node    lhs    =    assign.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	76	None	replace
743	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  c  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  c  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  c  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	79	None	add
744	[BUG]  [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild());  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs!=  null?  assign.getLastChild()  :  lhs.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  lhs.getLastChild());	  	non-compiled	[CE]  ';'  expected	79	None	add
745	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  addChildToBack(rhs,  lhs.detachFromParent());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  addChildToBack(rhs,  lhs.detachFromParent());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  addChildToBack(rhs,  lhs.detachFromParent());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    addChildToBack(lhs.detachFromParent());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
746	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  addChildToBack(rhs.detachFromParent());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  addChildToBack(rhs.detachFromParent());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  addChildToBack(rhs.detachFromParent());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    addChildToBack(lhs.detachFromParent());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
747	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assigned!=  null?  assign.getFirstChild()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs;  Node  rhs  =  assigned!=  null?  assign.getFirstChild()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    Node  rhs  =  assigned!=  null?  assign.getFirstChild()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	26	None	add
748	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  rhs  =  lhs.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  rhs  =  lhs.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.removeFirstChild();    Node  rhs  =  lhs.getFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	4	None	add
749	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  rhs  =  assignment.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  Node  rhs  =  assignment.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    lhs.removeFirstChild();    Node  rhs  =  assignment.removeFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	4	None	add
750	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getFirstChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  lhs.getFirstChild()  :  n.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	78	2	replace
751	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getFirstChild()  :  n.getLastChild();  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getFirstChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  lhs.getFirstChild()  :  n.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	78	2	replace
752	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  var.addChildToBack(assign.getNext());  [CE]  cannot  find  symbol  rhs  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  var.addChildToBack(assign.getNext());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  var.addChildToBack(assign.getNext());	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	67	None	replace
753	[BUG]  [BUGGY]  Node  n  =  nodesToCollapse.getLastChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  nodesToCollapse.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  nodesToCollapse.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    n    =    n.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	14	None	replace
754	[BUG]  [BUGGY]  Node  n  =  assignment.getLastChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  n  =  assignment.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  n  =  assignment.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    n    =    n.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	14	None	replace
755	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assignment.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assignment.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assignment.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assignment.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	48	None	replace
756	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assignment.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assignment.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  rhs  =  assignment.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assignment.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	48	None	replace
757	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assignment.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assignment.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assignment.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assignment.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	48	None	replace
758	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assignment.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assignment.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  rhs  =  assignment.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    rhs    =    assignment.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	48	None	replace
759	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    lhs.getLastChild();    Node    n    =    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	122	2	replace
760	[BUG]  [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    lhs.getLastChild();    Node    n    =    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	122	2	replace
761	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(    	non-compiled	[CE]  not  a  statement	119	None	replace
762	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(    	non-compiled	[CE]  not  a  statement	119	None	replace
763	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(    	non-compiled	[CE]  not  a  statement	119	None	replace
764	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(    	non-compiled	[CE]  not  a  statement	119	None	replace
765	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    lhs.getLastChild());    	compilable	  [FE]  NullPointerException  	121	2	replace
766	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    lhs.getLastChild());    	compilable	  [FE]  NullPointerException  	121	2	replace
767	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    lhs.getLastChild());    	compilable	  [FE]  NullPointerException  	121	2	replace
768	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.VAR);	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    lhs.getLastChild());    	compilable	  [FE]  NullPointerException  	121	2	replace
769	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    lhs.getLastChild());    	compilable	  [FE]  NullPointerException  	121	2	replace
770	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    lhs.getLastChild());    	compilable	  [FE]  NullPointerException  	121	2	replace
771	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.BLOCK);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.BLOCK);	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    lhs.getLastChild());    	compilable	  [FE]  NullPointerException  	121	2	replace
772	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.BLOCK);  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.BLOCK);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.BLOCK);	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    lhs.getLastChild());    	compilable	  [FE]  NullPointerException  	121	2	replace
773	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.CATCH);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.CATCH);	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    lhs.getLastChild());    	compilable	  [FE]  NullPointerException  	121	2	replace
774	[BUG]  [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.CATCH);  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.CATCH);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.CATCH);	  Node    rhs    =    lhs.getLastChild();    Node    rhs    =    lhs.getLastChild());    	compilable	  [FE]  NullPointerException  	121	2	replace
775	[BUG]  [BUGGY]  Node  assign  =  new  Node(assign.removeFirstChild());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  assign  =  new  Node(assign.removeFirstChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  assign  =  new  Node(assign.removeFirstChild());	  Node    rhs    =    assign.removeFirstChild();    Node    assign    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	40	None	replace
776	[BUG]  [BUGGY]  Node  assign  =  assignment.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  assign  =  assignment.removeFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  assign  =  assignment.removeFirstChild();	  Node    rhs    =    assign.removeFirstChild();    Node    assign    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	40	None	replace
777	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs.getNext();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	71	2	replace
778	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getNext();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	71	2	replace
779	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	97	None	replace
780	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assignment.getNext();  [CE]  cannot  find  symbol  assignment  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assignment.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  rhs  =  assignment.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  assignment	97	None	replace
781	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  lhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  lhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	127	None	replace
782	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	127	None	replace
783	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	127	None	replace
784	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild());    	compilable	  [FE]  IllegalStateException  	116	2	replace
785	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild());    	compilable	  [FE]  IllegalStateException  	116	2	replace
786	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild());    	compilable	  [FE]  IllegalStateException  	116	2	replace
787	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getFirstChild();  Preconditions.checkState(rhs.hasOneChild());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild());    	compilable	  [FE]  IllegalStateException  	116	2	replace
788	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  hs  =  assign  ==  null?  assign.getNext()  :  lhs;  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getNext()  :  lhs;  Node  hs  =  assign  ==  null?  assign.getNext()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    Node  hs  =  assign  ==  null?  assign.getNext()  :  lhs;	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	54	None	add
789	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs,  c);  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs,  c);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs,  c);	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    	non-compiled	[CE]  ';'  expected	27	None	replace
790	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs,  n.getLastChild();  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs,  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs,  n.getLastChild();	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs;    	non-compiled	[CE]  ';'  expected	27	None	replace
791	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(n.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(n.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	105	2	replace
792	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(n.removeFirstChild()  ==  null);  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(n.removeFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(n.removeFirstChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	105	2	replace
793	[BUG]  [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.removeLastChild()  ==  null);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.removeLastChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.removeLastChild()  ==  null);	  Node    rhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.removeFirstChild()    ==    null);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
794	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  assign,  lhs,  collapses);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,List<Collapse>)  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  assign,  lhs,  collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  assign,  lhs,  collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,List<Collapse>)	50	None	replace
795	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  assign,  collapses);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,List<Collapse>)  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  NodeTraversal.traverse(compiler,  assign,  collapses);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	NodeTraversal.traverse(compiler,  assign,  collapses);	  NodeTraversal.traverse(compiler,    lhs,    collapses);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,List<Collapse>)	50	None	replace
796	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.VAR);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	101	None	replace
797	[BUG]  [BUGGY]  Node  rhs  =  lhs.getNext();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs.getNext();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs.getNext();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	100	None	replace
798	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	94	None	replace
799	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	94	None	replace
800	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	94	None	replace
801	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=2  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=2  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1!=  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=2  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	94	None	replace
802	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getType()  :  lhs;  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getType()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getType()  :  lhs;	  Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    	non-compiled	[CE]  incompatible  types	53	None	replace
803	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getString()  :  lhs;  [CE]  incompatible  types  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getString()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getString()  :  lhs;	  Node    rhs    =    assign!=    null?    assign.getNext()    :    lhs;    	non-compiled	[CE]  incompatible  types	53	None	replace
804	[BUG]  [BUGGY]  Node  rhs  =  assignment.getNext();  [CE]  cannot  find  symbol  assignment  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assignment.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assignment.getNext();	  Node    rhs    =    lhs.getNext();    	non-compiled	[CE]  cannot  find  symbol  assignment	2	None	replace
805	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  b=1  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	92	None	replace
806	[BUG]  [BUGGY]  Result:  function  f(a)  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  ==  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	92	None	replace
807	[BUG]  [BUGGY]  Result:  function  f(a)  {  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  b=1  {  junit.framework.AssertionFailedError:  Expected:  function  f(a)  {  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	92	None	replace
808	[BUG]  [BUGGY]  Result:  function  f(a)  ==  var  b=1;a=2;var  c  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  ==  var  b=1;a=2;var  c  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  ==  var  b=1;a=2;var  c  }	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    	non-compiled	[CE]  not  a  statement	92	None	replace
809	[BUG]  [BUGGY]  Node  assign  =  nodesToCollapse.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  assign  =  nodesToCollapse.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  assign  =  nodesToCollapse.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    assign    =    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	44	None	replace
810	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR);  Node  assign  =  assign.getFirstChild();  [CE]  cannot  find  symbol  a  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR);  Node  assign  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(a.getType()  ==  Token.VAR);  Node  assign  =  assign.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    assign    =    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  a	44	None	replace
811	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  assign  =  assign.getFirstChild();  [CE]  cannot  find  symbol  a  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  assign  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  assign  =  assign.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    assign    =    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  a	44	None	replace
812	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  assign  =  assign.getFirstChild();  [CE]  cannot  find  symbol  a  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  assign  =  assign.getFirstChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  assign  =  assign.getFirstChild();	  Node    rhs    =    assign.getFirstChild();    Node    assign    =    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  a	44	None	replace
813	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	47	None	replace
814	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  not  a  statement  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  not  a  statement  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Result:  function  f(a)  {  var  b=1!=  not  a  statement	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    	non-compiled	[CE]  not  a  statement	47	None	replace
815	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getType()  :  lhs;  [CE]  incompatible  types  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getType()  :  lhs;  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign  ==  null?  assign.getType()  :  lhs;	  Node    rhs    =    assign    ==    null?    assign.getNext()    :    lhs;    	non-compiled	[CE]  incompatible  types	55	None	replace
816	[BUG]  [BUGGY]  if(a.getType()  ==  Token.ASSIGN)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.ASSIGN)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.ASSIGN)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    ;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
817	[BUG]  [BUGGY]  if(a.getType()  ==  Token.EXPR_RESULT)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(a.getType()  ==  Token.EXPR_RESULT)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(a.getType()  ==  Token.EXPR_RESULT)  {  Node  rhs  =  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  junit.framework.AssertionFailedError:  Expected	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1    }    ;a=2;var    c    =    function    f(a)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
818	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	64	2	replace
819	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assign.getNext();  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	64	2	replace
820	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.CATCH);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Preconditions.checkState(assign.getType()  ==  Token.CATCH);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
821	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.CATCH);  Node  rhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.CATCH);  Node  rhs  =  assign.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(assign.getType()  ==  Token.CATCH);  Node  rhs  =  assign.getNext();	  Node    rhs    =    assign.getNext();    Node    rhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	64	2	replace
822	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  rhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	66	None	replace
823	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  cannot  find  symbol  rhs  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	66	None	replace
824	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  Node  lhs  =  n.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  Node  lhs  =  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  Node  lhs  =  n.getLastChild();	  Node    rhs    =    n.getLastChild();    Node    lhs    =    n.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	replace
825	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Result:  function  f(a)  {  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Result:  function  f(a)  {  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  lhs  =  assign.getFirstChild();  Result:  function  f(a)  {	  Node    rhs    =    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    junit.framework.AssertionFailedError:    Expected:    function    f(a)    {    var    b=1;a=2;var    c    }    Result:    function    f(a)    {    	non-compiled	[CE]  not  a  statement	117	None	replace
826	[BUG]  [BUGGY]  if(assign.getType()  ==  Token.ASSIGN)  {  Node  rhs  =  assign.getFirstChild();  var  c  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  if(assign.getType()  ==  Token.ASSIGN)  {  Node  rhs  =  assign.getFirstChild();  var  c  =  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	if(assign.getType()  ==  Token.ASSIGN)  {  Node  rhs  =  assign.getFirstChild();  var  c  =  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	46	None	replace
827	[BUG]  [BUGGY]  var  c  =  function  f(a)  {  var  b=1  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  var  c  =  function  f(a)  {  var  b=1  }  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	var  c  =  function  f(a)  {  var  b=1  }	  Node    rhs    =    assign.getFirstChild();    var    c    =    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  ';'  expected	46	None	replace
828	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  lhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getFirstChild();  lhs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    lhs    =    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	31	2	replace
829	[BUG]  [BUGGY]  Node  rhs  =  assign.getFirstChild();  lhs  =  lhs.getLastChild();  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getFirstChild();  lhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getFirstChild();  lhs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    lhs    =    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	31	2	replace
830	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getLastChild();  lhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign.getLastChild();  lhs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    lhs    =    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	31	2	replace
831	[BUG]  [BUGGY]  Node  rhs  =  assign.getLastChild();  lhs  =  lhs.getLastChild();  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign.getLastChild();  lhs  =  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign.getLastChild();  lhs  =  lhs.getLastChild();	  Node    rhs    =    lhs.getLastChild();    lhs    =    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	31	2	replace
832	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getFirstChild()  ==  null);  [CE]  cannot  find  symbol  rhs  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getFirstChild()  ==  null);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getFirstChild()  ==  null);	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  rhs	16	None	replace
833	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  preconditions.checkState(rhs.isName());  [CE]  cannot  find  symbol  preconditions  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getLastChild();  preconditions.checkState(rhs.isName());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  n.getLastChild();  preconditions.checkState(rhs.isName());	  Node    rhs    =    n.getLastChild();    Node    rhs    =    n.getLastChild();    preconditions.checkState(lhs.isName());    	non-compiled	[CE]  cannot  find  symbol  preconditions	19	None	replace
834	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  n.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	80	2	replace
835	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  n.getLastChild();  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  n.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  lhs.getLastChild()  :  n.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	80	2	replace
836	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs  ==  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	add	Node  rhs  =  lhs  ==  null?  assign.getLastChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	80	2	replace
837	[BUG]  [BUGGY]  Node  rhs  =  lhs  ==  null?  assign.getLastChild()  :  lhs.getLastChild();  [FE]  NullPointerException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  lhs  ==  null?  assign.getLastChild()  :  lhs.getLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  lhs  ==  null?  assign.getLastChild()  :  lhs.getLastChild();	  Node    rhs    =    lhs!=    null?    assign.getLastChild()    :    lhs.getLastChild();    	compilable	  [FE]  NullPointerException  	80	2	replace
838	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  n.getNext();  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  n.getNext();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  rhs  =  n.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	107	None	add
839	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Node  rhs  =  n.getNext();  Preconditions.checkState(rhs.hasChildren());  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Node  rhs  =  n.getNext();  Preconditions.checkState(rhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Node  rhs  =  n.getNext();  Preconditions.checkState(rhs.hasChildren());	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	107	None	add
840	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  rhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  n.getNext();  Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node    rhs    =    n.getNext();    Node  rhs  =  n.getNext();  Preconditions.checkState(lhs.hasChildren());	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  applyCollapses()	107	None	add
841	[BUG]  [BUGGY]  Node  rhs  =  assigned.removeLastChild();  [CE]  cannot  find  symbol  assigned  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assigned.removeLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assigned.removeLastChild();	  Node    rhs    =    assign.removeFirstChild();    Node    rhs    =    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol  assigned	37	None	replace
842	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  rhs  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	68	None	replace
843	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  rhs  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    rhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node    rhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  rhs	68	None	replace
844	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.removeLastChild();  [CE]  cannot  find  symbol  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.removeLastChild();  [BUGGY]      lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	231	231	1	replace	Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  lhs.removeLastChild();	  Node    rhs    =    assign!=    null?    assign.getFirstChild()    :    lhs.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
