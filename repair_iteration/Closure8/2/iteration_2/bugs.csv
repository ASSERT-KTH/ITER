bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	15	2	replace
2	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [FE]  IllegalStateException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	15	2	replace
3	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	15	2	replace
4	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [FE]  IllegalStateException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	15	2	replace
5	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	15	2	replace
6	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [FE]  IllegalStateException  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	compilable	  [FE]  IllegalStateException  	15	2	replace
7	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	15	1	replace
8	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	15	1	replace
9	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	15	1	replace
10	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	15	1	replace
11	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	2	2	replace
12	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	2	2	replace
13	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  NullPointerException  	2	2	replace
14	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  NullPointerException  	2	2	replace
15	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
16	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	9	None	add
17	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
18	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
19	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
20	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  ';'  expected	9	None	add
21	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
22	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign);	  	non-compiled	[CE]  ';'  expected	9	None	add
23	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
24	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isName());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isName());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
25	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isVar());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
26	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
27	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.isVar());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
28	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  preconditions.checkState(a.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  preconditions.checkState(a.isVar());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  preconditions.checkState(a.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
29	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.isName());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.isName());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
30	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	10	2	replace
31	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	10	2	replace
32	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	10	1	replace
33	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	10	1	replace
34	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	10	2	replace
35	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	10	2	replace
36	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  NullPointerException  	10	2	replace
37	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [FE]  NullPointerException  [FE]          IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  NullPointerException  	10	2	replace
38	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assignment;  [CE]  cannot  find  symbol  assignment  [FE]            IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assignment;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assignment;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  assignment	10	None	replace
39	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  c  =  assign  ==  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
40	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
41	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	5	None	add
42	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Result:  function  f(a)  {  var  b=1  }	  	non-compiled	[CE]  not  a  statement	5	None	add
43	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  c  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  c  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  c  =  assign!=  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
44	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	5	None	add
45	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
46	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  c  =  assign  ==  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
47	[BUG]  [BUGGY]  Node  parent  =  assign.getParent();  [CE]  cannot  find  symbol  lhs  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  parent  =  assign.getParent();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  assign.getParent();	      	non-compiled	[CE]  cannot  find  symbol  lhs	13	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  a  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME);	      	non-compiled	[CE]  cannot  find  symbol  a	13	None	replace
49	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getParent();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getParent();	      	compilable	  [FE]  IllegalStateException  	13	2	replace
50	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  [FE]  IllegalStateException  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getParent();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getParent();	      	compilable	  [FE]  IllegalStateException  	13	2	replace
51	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	12	2	replace
52	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	12	2	replace
53	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  NullPointerException  	12	2	replace
54	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  NullPointerException  	12	2	replace
55	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	12	2	replace
56	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	12	2	replace
57	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
58	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
59	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  ';'  expected	7	None	add
60	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild());	  	non-compiled	[CE]  ';'  expected	7	None	add
61	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
62	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
63	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
64	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  [Delete]  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  [Delete]  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign  [Delete]  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  ';'  expected	7	None	add
65	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Node  lhs  =  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
66	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
67	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [CE]  cannot  find  symbol  a  [FE]        NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();	  	non-compiled	[CE]  cannot  find  symbol  a	3	None	add
68	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [CE]  cannot  find  symbol  a  [FE]          NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();	  	non-compiled	[CE]  cannot  find  symbol  a	3	None	add
69	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [CE]  cannot  find  symbol  a  [FE]            NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();	  	non-compiled	[CE]  cannot  find  symbol  a	3	None	add
70	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isName());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isName());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
71	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isVar());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
72	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
73	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	14	None	add
74	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  c  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	14	None	add
75	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	14	None	add
76	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  c  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  c  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  c  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	14	None	add
77	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  assign  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  assign  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  assign  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	14	None	add
78	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:  function  f(a)  {  var  b=1  }	  	non-compiled	[CE]  not  a  statement	14	None	add
79	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  assign.getLastChild()  :  assign.getFirstChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:  function  f(a)  {  var  b=1!=  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  not  a  statement	14	None	add
80	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	14	None	add
81	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getNext()  :  null;	  Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	4	2	replace
82	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getNext()  :  null;	  Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	4	2	replace
83	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;	  Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	4	2	replace
84	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;	  Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	4	2	replace
85	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  Node    lhs    =    assign.getNext();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	4	1	replace
86	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  Node    lhs    =    assign.getNext();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	4	1	replace
87	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	16	None	add
88	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	16	None	add
89	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	16	None	add
90	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	16	None	add
91	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	16	None	add
92	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  >>  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  >>  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node  lhs  =  assign  >>  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	16	None	add
93	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  assignment  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  assignment  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node  assignment  =  assign!=  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	16	None	add
94	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
95	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.isName());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.isName());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
96	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
97	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
98	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
99	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
100	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
101	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
102	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	18	None	add
103	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	18	None	add
104	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	18	None	add
105	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	18	None	add
106	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	18	None	add
107	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Result:  function  f(a)  {  var  b=1  }	  	non-compiled	[CE]  not  a  statement	18	None	add
108	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	18	None	add
109	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	18	None	add
110	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  null  :  assign.getNext();	  Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	4	2	replace
111	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.getNext();	  Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	4	2	replace
112	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();	  Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	4	2	replace
113	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  [FE]  IllegalStateException  [FE]      NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();	  Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	4	2	replace
114	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
115	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
116	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.removeFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
117	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.isName());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.isName());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
118	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
119	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
120	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
121	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
122	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
123	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	      	non-compiled	[CE]  cannot  find  symbol  a	13	None	replace
124	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	10	2	replace
125	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	10	2	replace
126	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
127	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
128	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
129	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
130	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
131	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild());  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild());	  	non-compiled	[CE]  ';'  expected	18	None	add
132	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	18	None	add
133	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  >=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  >=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign  >=  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	18	None	add
134	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	7	None	add
135	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
136	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
137	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
138	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
139	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
140	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()!=  null);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()!=  null);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()!=  null);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
141	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
142	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
143	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
144	[BUG]  [BUGGY]  Node  lhs  =  assign.nextChild();  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.nextChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.nextChild();	  Node    lhs    =    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
145	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getNext()!=  null);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getNext()!=  null);  Node  lhs  =  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=  null);  Node  lhs  =  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
146	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
147	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getNext()  ==  null);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getNext()  ==  null);  Node  lhs  =  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()  ==  null);  Node  lhs  =  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
148	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
149	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
150	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
151	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
152	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild());  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild());	  	non-compiled	[CE]  ';'  expected	14	None	add
153	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	14	None	add
154	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  b  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  b  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  b  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	14	None	add
155	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assignment.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assignment.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assignment.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	14	None	add
156	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  lhs  =  assignment!=  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  lhs  =  assignment!=  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node  lhs  =  assignment!=  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	16	None	add
157	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  rhs  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  rhs  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node  rhs  =  assign!=  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	16	None	add
158	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;	  Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	12	2	replace
159	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;	  Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	12	2	replace
160	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.cloneTree();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.cloneTree();	  Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	12	2	replace
161	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.cloneTree();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.cloneTree();	  Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	12	2	replace
162	[BUG]  [BUGGY]  Node  lhs  =  assign  >=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  >=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  >=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	19	None	replace
163	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  preconditions.checkState(assign.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Node  lhs  =  assign.getNext();  preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
164	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasOneChild());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getNext();  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasOneChild());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getNext();    Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasOneChild());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
165	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:  function  f(a)  {  var  b=1!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  not  a  statement	14	None	add
166	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  not  a  statement  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:  function  f(a)  {  var  b=1  >>  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  not  a  statement	14	None	add
167	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	14	None	add
168	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	14	None	add
169	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	10	2	replace
170	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	10	2	replace
171	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  NullPointerException  	10	2	replace
172	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  NullPointerException  	10	2	replace
173	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	2	1	replace
174	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	2	1	replace
175	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	2	2	replace
176	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	2	2	replace
177	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	2	2	replace
178	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	2	2	replace
179	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  lhs  =  assigned!=  null?  null  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  lhs  =  assigned!=  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node  lhs  =  assigned!=  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	16	None	add
180	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.removeLastChild();  [CE]  cannot  find  symbol  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.removeLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.removeLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
181	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Result:  function  f(a)  {  var  b=1!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Result:  function  f(a)  {  var  b=1!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Result:  function  f(a)  {  var  b=1!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  not  a  statement	18	None	add
182	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  ';'  expected	18	None	add
183	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	18	None	add
184	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.isVar());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	18	None	add
185	[BUG]  [BUGGY]  Node  lhs  =  assign  >=  null?  null  :  assign.getFirstChild();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  >=  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  >=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	17	None	replace
186	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
187	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
188	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(assign.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.removeFirstChild();    Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
189	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
190	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();	  Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	4	2	replace
191	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();	  Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	4	2	replace
192	[BUG]  [BUGGY]  Node  parent  =  n.getParent();  [CE]  cannot  find  symbol  lhs  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  parent  =  n.getParent();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  n.getParent();	      	non-compiled	[CE]  cannot  find  symbol  lhs	13	None	replace
193	[BUG]  [BUGGY]  Node  lhs  =  assign.removeLastChild();  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.removeLastChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeLastChild();	  Node    lhs    =    assign.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
194	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;	  Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	12	2	replace
195	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;	  Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	12	2	replace
196	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  null?  null  :  assign.getFirstChild();  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Result:  function  f(a)  {  var  b=1  >>  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  not  a  statement	5	None	add
197	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  null?  null  :  assign.getFirstChild();  [CE]  not  a  statement  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  ==  null?  null  :  assign.getFirstChild();  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Result:  function  f(a)  {  var  b=1  ==  null?  null  :  assign.getFirstChild();	  	non-compiled	[CE]  not  a  statement	5	None	add
198	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
199	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isVar());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
200	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]    if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();    [BUGGY]  Node  lhs  =  assign.getLastChild();  Node  lhs  =  assign.getLastChild();  preconditions.checkState(assign.hasChildren());  [BUGGY]    Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getLastChild();    Node  lhs  =  assign.getLastChild();  preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
