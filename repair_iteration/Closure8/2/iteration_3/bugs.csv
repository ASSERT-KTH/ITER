bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	89	None	replace
2	[BUG]  [BUGGY]  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	89	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	89	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assign  =  assign!=  null? "null "  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assign  =  assign!=  null? "null "  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  assign  =  assign!=  null? "null "  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	89	None	replace
5	[BUG]  [BUGGY]  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	104	None	replace
6	[BUG]  [BUGGY]  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	104	None	replace
7	[BUG]  [BUGGY]  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	104	None	replace
8	[BUG]  [BUGGY]  Node  assign  =  assign  >=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign  >=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign  >=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	104	None	replace
9	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.isName());    	compilable	  [FE]  IllegalStateException  	117	2	replace
10	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.isName());  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.isName());    	compilable	  [FE]  IllegalStateException  	117	2	replace
11	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.isName());    	compilable	  [FE]  IllegalStateException  	117	2	replace
12	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.isName());  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.isName());    	compilable	  [FE]  IllegalStateException  	117	2	replace
13	[BUG]  [BUGGY]  Preconditions.checkState(assign.isName());  [CE]  cannot  find  symbol  lhs  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.isName());    	non-compiled	[CE]  cannot  find  symbol  lhs	117	None	replace
14	[BUG]  [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.isName());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.isName());    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	117	None	replace
15	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.isName());    	compilable	  [FE]  IllegalStateException  	117	2	replace
16	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isName());  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.isName());    	compilable	  [FE]  IllegalStateException  	117	2	replace
17	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c=1;  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c=1;  }  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1;a=2;var  c=1;  }	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	197	None	replace
18	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  null?  null  :  assign.getFirstChild();  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  null?  null  :  assign.getFirstChild();  }  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1  ==  null?  null  :  assign.getFirstChild();  }	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	197	None	replace
19	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  null?  null  :  assign.getFirstChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	197	None	replace
20	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  null;	  Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    	compilable	  [FE]  NullPointerException  	84	2	replace
21	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  null;	  Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    	compilable	  [FE]  NullPointerException  	84	2	replace
22	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  null;	  Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    	compilable	  [FE]  NullPointerException  	84	2	replace
23	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  null;	  Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    	compilable	  [FE]  NullPointerException  	84	2	replace
24	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  null;	  Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    	compilable	  [FE]  IllegalStateException  	84	2	replace
25	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  null;  [FE]  IllegalStateException  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  null;	  Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    	compilable	  [FE]  IllegalStateException  	84	2	replace
26	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  null;	  Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	84	1	replace
27	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  null;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  null;	  Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	84	1	replace
28	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getParent()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getParent()  :  null;	  Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    	compilable	  [FE]  NullPointerException  	84	2	replace
29	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getParent()  :  null;  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getParent()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getParent()  :  null;	  Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    	compilable	  [FE]  NullPointerException  	84	2	replace
30	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
31	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
32	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
33	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  lhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
34	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
36	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getNext()!=  null);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Node  lhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getNext()!=  null);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
38	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getNext()  ==  null);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	65	2	replace
39	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Node  lhs  =  assign.getNext();  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getNext()  ==  null);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	65	2	replace
40	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  rhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    rhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	153	None	replace
41	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  rhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    rhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	153	None	replace
42	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    rhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	153	None	replace
43	[BUG]  [BUGGY]  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  cannot  find  symbol  lhs  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    rhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  lhs	122	None	replace
44	[BUG]  [BUGGY]  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [CE]  cannot  find  symbol  lhs  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    rhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  lhs	122	None	replace
45	[BUG]  [BUGGY]  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  cannot  find  symbol  lhs  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    rhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  lhs	122	None	replace
46	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	174	2	replace
47	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign;  [FE]  IllegalStateException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	174	2	replace
48	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	129	None	replace
49	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	129	None	replace
50	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	97	2	replace
51	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	97	2	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  lhs  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  lhs	97	None	replace
53	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	97	2	replace
54	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	97	2	replace
55	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	97	2	replace
56	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	97	2	replace
57	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	97	2	replace
58	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	97	2	replace
59	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	97	2	replace
60	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	97	2	replace
61	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	124	None	add
62	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Node  assign  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	124	None	add
63	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign.getType()!=  Token.VAR?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	124	None	add
64	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assignment;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assignment;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	124	None	add
65	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Node  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  ';'  expected	124	None	add
66	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign);  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign);	  	non-compiled	[CE]  ';'  expected	124	None	add
67	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	124	None	add
68	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	171	None	add
69	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	171	None	add
70	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    Node  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;	  	non-compiled	[CE]  ';'  expected	171	None	add
71	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	171	None	add
72	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  assignment  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  assignment  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    Node  assignment  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	171	None	add
73	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  assigned  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  assigned  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    Node  assigned  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	171	None	add
74	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [CE]  cannot  find  symbol  a  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  a	126	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  a  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  a	126	None	replace
76	[BUG]  [BUGGY]  Node  b  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  b  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  b  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    b    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	154	None	replace
77	[BUG]  [BUGGY]  Node  b  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  b  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  b  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    b    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	154	None	replace
78	[BUG]  [BUGGY]  Node  b  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  b  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  b  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    b    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	154	None	replace
79	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild());  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild());	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild());    	non-compiled	[CE]  ';'  expected	60	None	replace
80	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild());  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild());	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild());    	non-compiled	[CE]  ';'  expected	60	None	replace
81	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild());  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild());	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild());    	non-compiled	[CE]  ';'  expected	60	None	replace
82	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild());  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild());	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild());    	non-compiled	[CE]  ';'  expected	60	None	replace
83	[BUG]  [BUGGY]  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  cannot  find  symbol  assignment  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assignment.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  assignment	21	None	replace
84	[BUG]  [BUGGY]  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  cannot  find  symbol  assignment  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assignment.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  assignment	21	None	replace
85	[BUG]  [BUGGY]  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [CE]  cannot  find  symbol  assignment  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assignment.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  assignment	21	None	replace
86	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	30	None	add
87	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	30	None	add
88	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    Node  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  ';'  expected	30	None	add
89	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	30	None	add
90	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assignment;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assignment;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	30	None	add
91	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assignment  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assignment  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    Node  assignment  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	30	None	add
92	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assigned  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assigned  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    Node  assigned  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	30	None	add
93	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getParent()!=  null);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getParent()!=  null);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	145	2	replace
94	[BUG]  [BUGGY]  Preconditions.checkState(assign.getParent()!=  null);  Node  lhs  =  assign.getNext();  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getParent()!=  null);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getParent()!=  null);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	145	2	replace
95	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Node  assign  =  assign.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Node  assign  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getNext()!=  null);  Node  assign  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	145	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  [CE]  cannot  find  symbol  lhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getNext()!=  null);	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	145	None	replace
97	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	145	2	replace
98	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign.getNext();  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	145	2	replace
99	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	35	2	replace
100	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	35	2	replace
101	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild()  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild()  ==  null?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	35	2	replace
102	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild()  ==  null?  assign.getLastChild()  :  assign;  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild()  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild()  ==  null?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	35	2	replace
103	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild()  ==  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild()  ==  null?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	35	2	replace
104	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild()  ==  null?  assign.getFirstChild()  :  assign;  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild()  ==  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild()  ==  null?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	35	2	replace
105	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  parent;  [CE]  cannot  find  symbol  parent  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  parent;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  parent;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  parent	35	None	replace
106	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  prefix;  [CE]  cannot  find  symbol  prefix  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  prefix;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  prefix;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  prefix	35	None	replace
107	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild()!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild()!=  null?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	35	2	replace
108	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild()!=  null?  assign.getLastChild()  :  assign;  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild()!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild()!=  null?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	35	2	replace
109	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	177	None	add
110	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	177	None	add
111	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  assign!=  null?  assign.getLastChild()  :  assign;  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  assign!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Node  assign!=  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  ';'  expected	177	None	add
112	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	177	None	add
113	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	177	None	add
114	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign);  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign);	  	non-compiled	[CE]  ';'  expected	177	None	add
115	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	177	None	add
116	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assigned;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assigned;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assigned;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	177	None	add
117	[BUG]  [BUGGY]  Node  lhs  =  assignment!=  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    lhs    =    assignment!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	156	None	replace
118	[BUG]  [BUGGY]  Node  lhs  =  assignment  ==  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    lhs    =    assignment!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	156	None	replace
119	[BUG]  [BUGGY]  Preconditions.checkState(assign.hasChildren());  [CE]  cannot  find  symbol  lhs  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  lhs	163	None	replace
120	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	163	None	replace
121	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  preconditions.checkState(assign.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	163	None	replace
122	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	163	1	replace
123	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	163	1	replace
124	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  preconditions.checkState(var.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  preconditions.checkState(var.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  preconditions.checkState(var.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	163	None	replace
125	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  [CE]  cannot  find  symbol  lhs  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(n.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(n.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  lhs	163	None	replace
126	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(alloc.hasChildren());  [CE]  cannot  find  symbol  alloc  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(alloc.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  preconditions.checkState(alloc.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  alloc	163	None	replace
127	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	83	None	add
128	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    Node  lhs  =  assign!=  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	83	None	add
129	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  assign  =  assign  ==  null?  assign.getNext()  :  null;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  assign  =  assign  ==  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    Node  assign  =  assign  ==  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	83	None	add
130	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  assign  =  assign!=  null?  assign.getNext()  :  null;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  assign  =  assign!=  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    Node  assign  =  assign!=  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	83	None	add
131	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  assignment  =  assign  ==  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  assignment  =  assign  ==  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    Node  assignment  =  assign  ==  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	83	None	add
132	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  lhs  =  assign  >=  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  lhs  =  assign  >=  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    Node  lhs  =  assign  >=  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	83	None	add
133	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  assigned  =  assign  ==  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  assigned  =  assign  ==  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    Node  assigned  =  assign  ==  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	83	None	add
134	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  null  :  assign.getParent();	  Node    lhs    =    assign.getParent();    	compilable	  [FE]  IllegalStateException  	50	2	replace
135	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getParent();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.getParent();	  Node    lhs    =    assign.getParent();    	compilable	  [FE]  IllegalStateException  	50	2	replace
136	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getParent()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getParent()  :  null;	  Node    lhs    =    assign.getParent();    	compilable	  [FE]  IllegalStateException  	50	2	replace
137	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getParent()  :  null;  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getParent()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getParent()  :  null;	  Node    lhs    =    assign.getParent();    	compilable	  [FE]  IllegalStateException  	50	2	replace
138	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  null  :  assign.getParent();	  Node    lhs    =    assign.getParent();    	compilable	  [FE]  NullPointerException  	50	2	replace
139	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getParent();  [FE]  NullPointerException  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.getParent();	  Node    lhs    =    assign.getParent();    	compilable	  [FE]  NullPointerException  	50	2	replace
140	[BUG]  [BUGGY]  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  cannot  find  symbol  lhs  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    c    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  lhs	19	None	replace
141	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    c    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  NullPointerException  	19	2	replace
142	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [FE]  NullPointerException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    c    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  NullPointerException  	19	2	replace
143	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    c    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	19	2	replace
144	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    c    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	19	2	replace
145	[BUG]  [BUGGY]  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;  [CE]  cannot  find  symbol  assignment  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    c    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  assignment	19	None	replace
146	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;  [CE]  cannot  find  symbol  assignment  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    c    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  assignment	19	None	replace
147	[BUG]  [BUGGY]  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	134	None	replace
148	[BUG]  [BUGGY]  Node  assign  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	134	None	replace
149	[BUG]  [BUGGY]  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	134	None	replace
150	[BUG]  [BUGGY]  Node  assign  =  assign  >=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign  >=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign  >=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	134	None	replace
151	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	149	2	replace
152	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	149	2	replace
153	[BUG]  [BUGGY]  Node  assign  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	149	None	replace
154	[BUG]  [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	149	None	replace
155	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	149	2	replace
156	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	149	2	replace
157	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	168	None	replace
158	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	168	None	replace
159	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	168	None	replace
160	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;  [CE]  cannot  find  symbol  assignment  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  assignment	15	None	replace
161	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	15	2	replace
162	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  assign;  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	15	2	replace
163	[BUG]  [BUGGY]  Node  c  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	39	None	replace
164	[BUG]  [BUGGY]  Node  c  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	39	None	replace
165	[BUG]  [BUGGY]  Node  c  =  assign  ==  null?  null  :  assign.getLastChild();  [CE]  cannot  find  symbol  lhs  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign  ==  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	39	None	replace
166	[BUG]  [BUGGY]  Node  c  =  assign  >=  null?  null  :  assign.getFirstChild();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign  >=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign  >=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	39	None	replace
167	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n.removeLastChild();  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n.removeLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
168	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  var.removeLastChild();  [CE]  cannot  find  symbol  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  var.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  var.removeLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
169	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.removeLastChild();  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.removeLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
170	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  n.removeLastChild();  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  n.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  n.removeLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
171	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeLastChild();  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
172	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Result:    function    f(a)    {    var    b=1!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  not  a  statement	181	None	replace
173	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  null?  assign.getFirstChild()  :  assign.getLastChild();  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  null?  assign.getFirstChild()  :  assign.getLastChild();  }  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1!=  null?  assign.getFirstChild()  :  assign.getLastChild();  }	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Result:    function    f(a)    {    var    b=1!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  not  a  statement	181	None	replace
174	[BUG]  [BUGGY]  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	16	None	replace
175	[BUG]  [BUGGY]  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	16	None	replace
176	[BUG]  [BUGGY]  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	16	None	replace
177	[BUG]  [BUGGY]  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  Integer.toString(assign);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  Integer.toString(assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  Integer.toString(assign);	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	16	None	replace
178	[BUG]  [BUGGY]  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	16	None	replace
179	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assignment.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	135	None	replace
180	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assignment.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assignment.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assignment.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assignment.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	135	None	replace
181	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assignment.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assignment.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assignment.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assignment.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	135	None	replace
182	[BUG]  [BUGGY]  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assignment.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assignment.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assignment.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assignment.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	135	None	replace
183	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getLastChild()!=  null);  Node  lhs  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getLastChild()!=  null);  Node  lhs  =  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	23	2	replace
184	[BUG]  [BUGGY]  Preconditions.checkState(assign.getLastChild()!=  null);  Node  lhs  =  assign.getLastChild();  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getLastChild()!=  null);  Node  lhs  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getLastChild()!=  null);  Node  lhs  =  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	23	2	replace
185	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getLastChild()  ==  null);  Node  lhs  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getLastChild()  ==  null);  Node  lhs  =  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	23	2	replace
186	[BUG]  [BUGGY]  Preconditions.checkState(assign.getLastChild()  ==  null);  Node  lhs  =  assign.getLastChild();  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getLastChild()  ==  null);  Node  lhs  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getLastChild()  ==  null);  Node  lhs  =  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	23	2	replace
187	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getFirstChild()!=  null);  Node  lhs  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getFirstChild()!=  null);  Node  lhs  =  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	23	2	replace
188	[BUG]  [BUGGY]  Preconditions.checkState(assign.getFirstChild()!=  null);  Node  lhs  =  assign.getLastChild();  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getFirstChild()!=  null);  Node  lhs  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getFirstChild()!=  null);  Node  lhs  =  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	23	2	replace
189	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getLastChild()  ==  n);  Node  lhs  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getLastChild()  ==  n);  Node  lhs  =  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	23	2	replace
190	[BUG]  [BUGGY]  Preconditions.checkState(assign.getLastChild()  ==  n);  Node  lhs  =  assign.getLastChild();  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getLastChild()  ==  n);  Node  lhs  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getLastChild()  ==  n);  Node  lhs  =  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	23	2	replace
191	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getLastChild()!=  n);  Node  lhs  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getLastChild()!=  n);  Node  lhs  =  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	23	2	replace
192	[BUG]  [BUGGY]  Preconditions.checkState(assign.getLastChild()!=  n);  Node  lhs  =  assign.getLastChild();  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getLastChild()!=  n);  Node  lhs  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getLastChild()!=  n);  Node  lhs  =  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	23	2	replace
193	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	37	1	replace
194	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  null;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	37	1	replace
195	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    	compilable	  [FE]  NullPointerException  	37	2	replace
196	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    	compilable	  [FE]  NullPointerException  	37	2	replace
197	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    	compilable	  [FE]  NullPointerException  	37	2	replace
198	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  null;  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    	compilable	  [FE]  NullPointerException  	37	2	replace
199	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR  &&  assign.getLastChild().getString().endsWith( "__ "));  [CE]  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR  &&  assign.getLastChild().getString().endsWith( "__ "));  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR  &&  assign.getLastChild().getString().endsWith( "__ "));	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    	non-compiled	[CE]  	37	None	replace
200	[BUG]  [BUGGY]  Node  parent  =  assign.getNext();  [CE]  cannot  find  symbol  lhs  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  assign.getNext();	  Node    parent    =    assign.getParent();    	non-compiled	[CE]  cannot  find  symbol  lhs	47	None	replace
201	[BUG]  [BUGGY]  Node  parent  =  assign!=  null?  assign.getParent()  :  null;  [CE]  cannot  find  symbol  lhs  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  assign!=  null?  assign.getParent()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  assign!=  null?  assign.getParent()  :  null;	  Node    parent    =    assign.getParent();    	non-compiled	[CE]  cannot  find  symbol  lhs	47	None	replace
202	[BUG]  [BUGGY]  Node  parent  =  assign  ==  null?  assign.getParent()  :  null;  [CE]  cannot  find  symbol  lhs  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  assign  ==  null?  assign.getParent()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  assign  ==  null?  assign.getParent()  :  null;	  Node    parent    =    assign.getParent();    	non-compiled	[CE]  cannot  find  symbol  lhs	47	None	replace
203	[BUG]  [BUGGY]  Node  parent  =  assign.getLastChild();  [CE]  cannot  find  symbol  lhs  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  assign.getLastChild();	  Node    parent    =    assign.getParent();    	non-compiled	[CE]  cannot  find  symbol  lhs	47	None	replace
204	[BUG]  [BUGGY]  Node  parent  =  assign!=  null?  assign.getParent()  :  node;  [CE]  cannot  find  symbol  node  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  assign!=  null?  assign.getParent()  :  node;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  assign!=  null?  assign.getParent()  :  node;	  Node    parent    =    assign.getParent();    	non-compiled	[CE]  cannot  find  symbol  node	47	None	replace
205	[BUG]  [BUGGY]  Node  lhs  =  assigned!=  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assigned  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assigned!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assigned!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    lhs    =    assigned!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assigned	179	None	replace
206	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	98	2	replace
207	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	98	2	replace
208	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	98	2	replace
209	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	98	2	replace
210	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  lhs  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  lhs	98	None	replace
211	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	98	2	replace
212	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	98	2	replace
213	[BUG]  [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.VAR);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	98	None	replace
214	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.VAR);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	98	1	replace
215	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.VAR);  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.VAR);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	98	1	replace
216	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	173	None	add
217	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	173	None	add
218	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	173	None	add
219	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	173	None	add
220	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	173	None	add
221	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	173	None	add
222	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  assigned  =  assign!=  null?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  assigned  =  assign!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  assigned  =  assign!=  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	173	None	add
223	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  assign  =  assignment!=  null?  assign.getFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  assign  =  assignment!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  assign  =  assignment!=  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	173	None	add
224	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  a  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    assign    =    assign    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  a	41	None	replace
225	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	114	2	replace
226	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	114	2	replace
227	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	114	2	replace
228	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.hasChildren());  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	114	2	replace
229	[BUG]  [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	114	None	replace
230	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	114	2	replace
231	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.hasChildren());  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	114	2	replace
232	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	26	2	replace
233	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	26	2	replace
234	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.hasChildren());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	26	2	replace
235	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.hasChildren());  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.hasChildren());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	26	2	replace
236	[BUG]  [BUGGY]  Preconditions.checkState(assign.getLastChild()!=  null);  [CE]  cannot  find  symbol  lhs  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getLastChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getLastChild()!=  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  lhs	26	None	replace
237	[BUG]  [BUGGY]  Preconditions.checkState(assign.getLastChild()  ==  null);  [CE]  cannot  find  symbol  lhs  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getLastChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getLastChild()  ==  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(lhs.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  lhs	26	None	replace
238	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
239	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
240	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild());  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild());	  	non-compiled	[CE]  ';'  expected	3	None	add
241	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  assign  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  assign  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getLastChild();    Node  assign  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	3	None	add
242	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assignment.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assignment.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  assignment.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
243	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
244	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
245	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assignment.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assignment.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assignment.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
246	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()!=    null);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	118	1	replace
247	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()!=    null);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	118	1	replace
248	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()!=    null);    	compilable	  [FE]  IllegalStateException  	118	2	replace
249	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()!=  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()!=    null);    	compilable	  [FE]  IllegalStateException  	118	2	replace
250	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()!=    null);    	compilable	  [FE]  IllegalStateException  	118	2	replace
251	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()!=    null);    	compilable	  [FE]  IllegalStateException  	118	2	replace
252	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getLastChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getLastChild()!=  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()!=    null);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	118	2	replace
253	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getLastChild()!=  null);  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getLastChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getLastChild()!=  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()!=    null);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	118	2	replace
254	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getLastChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getLastChild()!=  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()!=    null);    	compilable	  [FE]  IllegalStateException  	118	2	replace
255	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getLastChild()!=  null);  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getLastChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getLastChild()!=  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()!=    null);    	compilable	  [FE]  IllegalStateException  	118	2	replace
256	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
257	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
258	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  assign  ==  null?  null  :  assign.getLastChild();  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  assign  ==  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  ';'  expected	11	None	add
259	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  assign!=  null?  null  :  assign.getLastChild();  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  assign!=  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  ';'  expected	11	None	add
260	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  >>  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  >>  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  lhs  =  assign  >>  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
261	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild());  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild());	  	non-compiled	[CE]  ';'  expected	11	None	add
262	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  assigned  =  assign  ==  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  assigned  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  assigned  =  assign  ==  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
263	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	115	2	replace
264	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	115	2	replace
265	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  lhs  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  lhs	115	None	replace
266	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	115	2	replace
267	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	115	2	replace
268	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	115	2	replace
269	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	115	2	replace
270	[BUG]  [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	115	None	replace
271	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	115	1	replace
272	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	115	1	replace
273	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	80	2	replace
274	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [FE]  IllegalStateException  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	80	2	replace
275	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	80	2	replace
276	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [FE]  IllegalStateException  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	80	2	replace
277	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	80	2	replace
278	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [FE]  IllegalStateException  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Preconditions.checkState(lhs.hasChildren());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	80	2	replace
279	[BUG]  [BUGGY]  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	77	None	replace
280	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  null  :  assign.getNext();	  Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    	compilable	  [FE]  NullPointerException  	111	2	replace
281	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getNext();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.getNext();	  Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    	compilable	  [FE]  NullPointerException  	111	2	replace
282	[BUG]  [BUGGY]  Node  lhs  =  assign  >=  null?  null  :  assign.getNext();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  >=  null?  null  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  >=  null?  null  :  assign.getNext();	  Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	111	None	replace
283	[BUG]  [BUGGY]  Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	139	None	replace
284	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  alloc  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  alloc	139	None	replace
285	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	148	2	replace
286	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	148	2	replace
287	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	148	2	replace
288	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	148	2	replace
289	[BUG]  [BUGGY]  Node  assign  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	148	None	replace
290	[BUG]  [BUGGY]  Node  lhs  =  assignment.nextChild();  [CE]  cannot  find  symbol  assignment  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment.nextChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment.nextChild();	  Node    lhs    =    assign.nextChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	144	None	replace
291	[BUG]  [BUGGY]  Node  assign  =  assign.nextChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.nextChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.nextChild();	  Node    lhs    =    assign.nextChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	144	None	replace
292	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	167	None	replace
293	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	167	None	replace
294	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	167	None	replace
295	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeLastChild()  :  assign;  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
296	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	34	None	add
297	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  assign  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  assign  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Node  assign  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	34	None	add
298	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	34	None	add
299	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assignment;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assignment;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	34	None	add
300	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  assign  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  assign  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Node  assign  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	34	None	add
301	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign);  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign);	  	non-compiled	[CE]  ';'  expected	34	None	add
302	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  assignment  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  assignment  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Node  assignment  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	34	None	add
303	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assigned;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assigned;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assigned;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	34	None	add
304	[BUG]  [BUGGY]  Preconditions.checkState(assign.getFirstChild()!=  null);  [CE]  cannot  find  symbol  lhs  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getFirstChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getFirstChild()!=  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()!=    null);    	non-compiled	[CE]  cannot  find  symbol  lhs	140	None	replace
305	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()!=  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()!=    null);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	140	1	replace
306	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()!=  null);  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()!=  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()!=    null);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	140	1	replace
307	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()!=  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()!=    null);    	compilable	  [FE]  IllegalStateException  	140	2	replace
308	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()!=  null);  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()!=  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()!=    null);    	compilable	  [FE]  IllegalStateException  	140	2	replace
309	[BUG]  [BUGGY]  Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()!=  null);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()!=  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()!=    null);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	140	None	replace
310	[BUG]  [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()!=  null);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()!=  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()!=    null);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	140	None	replace
311	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    >>    null?    null    :    assign.getFirstChild();    	compilable	  [FE]  NullPointerException  	92	2	replace
312	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    >>    null?    null    :    assign.getFirstChild();    	compilable	  [FE]  NullPointerException  	92	2	replace
313	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getParent();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    	compilable	  [FE]  IllegalStateException  	113	2	replace
314	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getParent();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getParent();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    	compilable	  [FE]  IllegalStateException  	113	2	replace
315	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    	compilable	  [FE]  NullPointerException  	113	2	replace
316	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    	compilable	  [FE]  NullPointerException  	113	2	replace
317	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	186	1	replace
318	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	186	1	replace
319	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  cannot  find  symbol  lhs  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  cannot  find  symbol  lhs	186	None	replace
320	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	compilable	  [FE]  IllegalStateException  	186	2	replace
321	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	compilable	  [FE]  IllegalStateException  	186	2	replace
322	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	compilable	  [FE]  IllegalStateException  	186	2	replace
323	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.ASSIGN);  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	compilable	  [FE]  IllegalStateException  	186	2	replace
324	[BUG]  [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	186	None	replace
325	[BUG]  [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	186	None	replace
326	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	169	None	add
327	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Node  assign  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	169	None	add
328	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Node  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;	  	non-compiled	[CE]  ';'  expected	169	None	add
329	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.cloneTree()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Node  lhs  =  assign.getType()!=  Token.VAR?  assign.cloneTree()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	169	None	add
330	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assignment;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assignment;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	169	None	add
331	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  assignment  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  assignment  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Node  assignment  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	169	None	add
332	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign);	  	non-compiled	[CE]  ';'  expected	169	None	add
333	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  assigned  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  assigned  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Node  assigned  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	169	None	add
334	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  nodesToCollapse;  [CE]  incompatible  types  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  nodesToCollapse;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  nodesToCollapse;	  Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    	non-compiled	[CE]  incompatible  types	176	None	replace
335	[BUG]  [BUGGY]  Node  c  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    c    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	76	None	replace
336	[BUG]  [BUGGY]  Node  c  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    c    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	76	None	replace
337	[BUG]  [BUGGY]  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    c    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	76	None	replace
338	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
339	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.isName());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
340	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
341	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
342	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
343	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
344	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
345	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.isDefined());  Node  lhs  =  assign.cloneTree();  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.isDefined());  Node  lhs  =  assign.cloneTree();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Preconditions.checkState(assign.isDefined());  Node  lhs  =  assign.cloneTree();	  	non-compiled	[CE]  cannot  find  symbol	160	None	add
346	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  assignment;  [CE]  cannot  find  symbol  assignment  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  assignment;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assignment;    	non-compiled	[CE]  cannot  find  symbol  assignment	18	None	replace
347	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  a  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  assign  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  a	44	None	replace
348	[BUG]  [BUGGY]  Node  assign  =  assign  >=  null?  null  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign  >=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign  >=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	44	None	replace
349	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    assignment.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	63	None	replace
350	[BUG]  [BUGGY]  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    assignment.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	63	None	replace
351	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()!=  Token.FUNCTION);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	69	2	replace
352	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()!=  Token.FUNCTION);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	69	2	replace
353	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assignment.getNext();  [CE]  cannot  find  symbol  assignment  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assignment.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assignment.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  assignment	69	None	replace
354	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    	compilable	  [FE]  NullPointerException  	90	2	replace
355	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    	compilable	  [FE]  NullPointerException  	90	2	replace
356	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	55	None	add
357	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	55	None	add
358	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    Node  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();	  	non-compiled	[CE]  ';'  expected	55	None	add
359	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	55	None	add
360	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild());  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild());	  	non-compiled	[CE]  ';'  expected	55	None	add
361	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	55	None	add
362	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	55	None	add
363	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	55	None	add
364	[BUG]  [BUGGY]  Preconditions.checkState(a.isName());  [CE]  cannot  find  symbol  a  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.isName());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(a.isName());    	non-compiled	[CE]  cannot  find  symbol  a	29	None	replace
365	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(a.isName());  [CE]  cannot  find  symbol  a  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(a.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(a.isName());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(a.isName());    	non-compiled	[CE]  cannot  find  symbol  a	29	None	replace
366	[BUG]  [BUGGY]  Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.isName());  [CE]  cannot  find  symbol  lhs  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.isName());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(a.isName());    	non-compiled	[CE]  cannot  find  symbol  lhs	29	None	replace
367	[BUG]  [BUGGY]  Node  a  =  assign.getLastChild();  Preconditions.checkState(a.isName());  [CE]  cannot  find  symbol  lhs  [FE]                          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getLastChild();  Preconditions.checkState(a.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.getLastChild();  Preconditions.checkState(a.isName());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(a.isName());    	non-compiled	[CE]  cannot  find  symbol  lhs	29	None	replace
368	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.isName());  [CE]  cannot  find  symbol  a  [FE]                            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.isName());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(a.isName());    	non-compiled	[CE]  cannot  find  symbol  a	29	None	replace
369	[BUG]  [BUGGY]  Node  a  =  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]                              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.getFirstChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(a.isName());    	non-compiled	[CE]  cannot  find  symbol  lhs	29	None	replace
370	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	105	2	replace
371	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [FE]  IllegalStateException  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	105	2	replace
372	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    	compilable	  [FE]  NullPointerException  	170	2	replace
373	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  null;  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    	compilable	  [FE]  NullPointerException  	170	2	replace
374	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  Integer.toString(assign);  [CE]  no  suitable  method  found  for  toString(Node)  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  Integer.toString(assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  Integer.toString(assign);	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    	non-compiled	[CE]  no  suitable  method  found  for  toString(Node)	170	None	replace
375	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  Collections  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  Collections.EMPTY_LIST;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  Collections.EMPTY_LIST;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  Collections	170	None	replace
376	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  Boolean.TRUE;  [CE]  incompatible  types  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  Boolean.TRUE;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  Boolean.TRUE;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    	non-compiled	[CE]  incompatible  types	170	None	replace
377	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  name;  [CE]  cannot  find  symbol  name  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  name;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  name;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  name	170	None	replace
378	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  Boolean.FALSE;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  Boolean.FALSE;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    	non-compiled	[CE]  incompatible  types	170	None	replace
379	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeLastChild();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.removeLastChild();	  Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
380	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeLastChild();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.removeLastChild();	  Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
381	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  alloc  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  alloc	137	None	replace
382	[BUG]  [BUGGY]  Preconditions.checkState(assign.getFirstChild()  ==  null);  [CE]  cannot  find  symbol  lhs  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getFirstChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getFirstChild()  ==  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()    ==    null);    	non-compiled	[CE]  cannot  find  symbol  lhs	142	None	replace
383	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	142	2	replace
384	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	142	2	replace
385	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	142	2	replace
386	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	142	2	replace
387	[BUG]  [BUGGY]  Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()    ==    null);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	142	None	replace
388	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild());  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild());    	non-compiled	[CE]  ';'  expected	152	None	replace
389	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild());  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild());    	non-compiled	[CE]  ';'  expected	152	None	replace
390	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	119	2	replace
391	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getLastChild()  ==  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	119	2	replace
392	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getLastChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getLastChild()  ==  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	119	2	replace
393	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getLastChild()  ==  null);  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getLastChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getLastChild()  ==  null);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getLastChild()    ==    null);    	compilable	  [FE]  IllegalStateException  	119	2	replace
394	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	187	2	replace
395	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	187	2	replace
396	[BUG]  [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	187	None	replace
397	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	165	None	replace
398	[BUG]  [BUGGY]  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  lhs  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    c    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	106	None	replace
399	[BUG]  [BUGGY]  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  lhs  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    c    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	106	None	replace
400	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  null?  null  :  assign.getFirstChild();  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  null?  null  :  assign.getFirstChild();  }  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1!=  null?  null  :  assign.getFirstChild();  }	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    >>    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	196	None	replace
401	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  null?  null  :  assign.getFirstChild();  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    >>    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	196	None	replace
402	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	96	2	replace
403	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	96	2	replace
404	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	96	2	replace
405	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	96	2	replace
406	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	94	2	replace
407	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  lhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.removeFirstChild()  ==  null);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	94	2	replace
408	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	94	2	replace
409	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  lhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.removeFirstChild()!=  null);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	94	2	replace
410	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  var);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.removeFirstChild()  ==  var);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	94	2	replace
411	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  var);  Node  lhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  var);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.removeFirstChild()  ==  var);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	94	2	replace
412	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()!=  var);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.removeFirstChild()!=  var);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	94	2	replace
413	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild()!=  var);  Node  lhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()!=  var);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.removeFirstChild()!=  var);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	94	2	replace
414	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	94	2	replace
415	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  lhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.removeFirstChild()  ==  n);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	94	2	replace
416	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getParent()  ==  null);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getParent()  ==  null);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	147	2	replace
417	[BUG]  [BUGGY]  Preconditions.checkState(assign.getParent()  ==  null);  Node  lhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getParent()  ==  null);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getParent()  ==  null);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	147	2	replace
418	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Node  assign  =  assign.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Node  assign  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getNext()  ==  null);  Node  assign  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	147	None	replace
419	[BUG]  [BUGGY]  Node  c  =  assign!=  null?  null  :  assign.getLastChild();  [CE]  cannot  find  symbol  lhs  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign!=  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	43	None	replace
420	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	85	None	add
421	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	85	None	add
422	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	85	None	add
423	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	85	None	add
424	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  c  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  c  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    Node  c  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	85	None	add
425	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	85	None	add
426	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  assigned  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  assigned  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    Node  assigned  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	85	None	add
427	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.removeFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	56	1	replace
428	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.removeFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.removeFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	56	1	replace
429	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.removeFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	56	2	replace
430	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.removeFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	56	2	replace
431	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  NullPointerException  	66	2	replace
432	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  NullPointerException  	66	2	replace
433	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  lhs  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  lhs	151	None	replace
434	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	151	2	replace
435	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	151	2	replace
436	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	151	2	replace
437	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	151	2	replace
438	[BUG]  [BUGGY]  Node  assign  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.NAME);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	151	None	replace
439	[BUG]  [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.NAME);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	151	None	replace
440	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	151	2	replace
441	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	151	2	replace
442	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
443	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
444	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	1	None	add
445	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild());	  	non-compiled	[CE]  ';'  expected	1	None	add
446	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
447	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assignment.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assignment.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  assignment.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
448	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  ';'  expected	1	None	add
449	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	1	None	add
450	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  assign.getLastChild()  :  assign.getFirstChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1!=  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	79	None	replace
451	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  assign.getLastChild()  :  assign.getFirstChild();  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  assign.getLastChild()  :  assign.getFirstChild();  }  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1!=  assign.getLastChild()  :  assign.getFirstChild();  }	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	79	None	replace
452	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null? "null "  :  assign.getFirstChild();  [CE]  incompatible  types  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null? "null "  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null? "null "  :  assign.getFirstChild();	  Node    lhs    =    assign    >=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  incompatible  types	185	None	replace
453	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
454	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.isName());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
455	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
456	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
457	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
458	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
459	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
460	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(lhs.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
461	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.hasChildren());	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	183	None	replace
462	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.hasChildren());	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	183	None	replace
463	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  preconditions.checkState(a.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  preconditions.checkState(a.hasChildren());	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	183	None	replace
464	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	17	2	replace
465	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  null;  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  null;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	17	2	replace
466	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  a  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  a	130	None	replace
467	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  a  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  a	130	None	replace
468	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  a  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getType()  ==  Token.VAR);	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(a.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  a	130	None	replace
469	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  NullPointerException  	146	2	replace
470	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  NullPointerException  	146	2	replace
471	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	146	2	replace
472	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	146	2	replace
473	[BUG]  [BUGGY]  Node  assign  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getNext();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	146	None	replace
474	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.NAME);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()!=  Token.NAME);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	67	2	replace
475	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.NAME);  Node  lhs  =  assign.getNext();  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.NAME);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()!=  Token.NAME);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	67	2	replace
476	[BUG]  [BUGGY]  Node  parent  =  nodesToCollapse.getParent();  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  nodesToCollapse.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  nodesToCollapse.getParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol	192	None	replace
477	[BUG]  [BUGGY]  Node  parent  =  n.getNext();  [CE]  cannot  find  symbol  lhs  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  n.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  n.getNext();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  lhs	192	None	replace
478	[BUG]  [BUGGY]  Node  parent  =  assignment.getParent();  [CE]  cannot  find  symbol  assignment  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  assignment.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  assignment.getParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  assignment	192	None	replace
479	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  Integer.toString(assign);  [CE]  no  suitable  method  found  for  toString(Node)  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  Integer.toString(assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  Integer.toString(assign);	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    	non-compiled	[CE]  no  suitable  method  found  for  toString(Node)	31	None	replace
480	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  Integer.toString(n.getLastChild());  [CE]  no  suitable  method  found  for  toString(Node)  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  Integer.toString(n.getLastChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  Integer.toString(n.getLastChild());	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    	non-compiled	[CE]  no  suitable  method  found  for  toString(Node)	31	None	replace
481	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  name;  [CE]  cannot  find  symbol  name  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  name;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  name;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  name	31	None	replace
482	[BUG]  [BUGGY]  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	27	None	replace
483	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	27	None	replace
484	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	27	None	replace
485	[BUG]  [BUGGY]  Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  lhs  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  lhs	27	None	replace
486	[BUG]  [BUGGY]  Node  a  =  assign.getLastChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  lhs  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getLastChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.getLastChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  lhs	27	None	replace
487	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign);	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign);    	non-compiled	[CE]  ';'  expected	22	None	replace
488	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign);	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign);    	non-compiled	[CE]  ';'  expected	22	None	replace
489	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assignment;  [CE]  cannot  find  symbol  assignment  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assignment;	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  assignment	178	None	replace
490	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	95	1	replace
491	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	95	1	replace
492	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	95	2	replace
493	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.isName());  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	95	2	replace
494	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	95	2	replace
495	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isName());  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  IllegalStateException  	95	2	replace
496	[BUG]  [BUGGY]  Node  rhs  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  rhs  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  rhs  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    rhs    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	157	None	replace
497	[BUG]  [BUGGY]  Node  rhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  rhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  rhs  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    rhs    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	157	None	replace
498	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	51	None	add
499	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	51	None	add
500	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  assign  ==  null?  null  :  assign.removeFirstChild();  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  assign  ==  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  assign  ==  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  ';'  expected	51	None	add
501	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  assign!=  null?  null  :  assign.removeFirstChild();  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  assign!=  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  assign!=  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  ';'  expected	51	None	add
502	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  assigned  =  assign  ==  null?  null  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  assigned  =  assign  ==  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  assigned  =  assign  ==  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	51	None	add
503	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  assignment  ==  null?  null  :  assign.removeFirstChild();  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  assignment  ==  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  assignment  ==  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  ';'  expected	51	None	add
504	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  assign  >>  null?  null  :  assign.removeFirstChild();  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  assign  >>  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  assign  >>  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  ';'  expected	51	None	add
505	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isVar());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.isVar());    	compilable	  [FE]  NullPointerException  	71	2	replace
506	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isVar());  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isVar());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.isVar());    	compilable	  [FE]  NullPointerException  	71	2	replace
507	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isVar());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.isVar());    	compilable	  [FE]  IllegalStateException  	71	2	replace
508	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isVar());  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.isVar());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.isVar());    	compilable	  [FE]  IllegalStateException  	71	2	replace
509	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	190	None	add
510	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	190	None	add
511	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	190	None	add
512	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	190	None	add
513	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	190	None	add
514	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  assignment  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  assignment  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Node  assignment  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	190	None	add
515	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  assigned  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  assigned  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Node  assigned  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	190	None	add
516	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	194	None	add
517	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	194	None	add
518	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  assign  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  assign  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    Node  assign  =  assign  ==  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	194	None	add
519	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assignment;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assignment;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	194	None	add
520	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  assign  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  assign  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    Node  assign  =  assign!=  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	194	None	add
521	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign);  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign);	  	non-compiled	[CE]  ';'  expected	194	None	add
522	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assignment.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assignment.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign  ==  null?  assignment.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	194	None	add
523	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assigned;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assigned;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assigned;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	194	None	add
524	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	150	2	replace
525	[BUG]  [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	150	2	replace
526	[BUG]  [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  assign  =  assign.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  assign  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.hasChildren());  Node  assign  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	150	None	replace
527	[BUG]  [BUGGY]  Preconditions.checkState(assign.hasChildren(),  assign.hasNext());  Node  lhs  =  assign.getNext();  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren(),  assign.hasNext());  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.hasChildren(),  assign.hasNext());  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
528	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(n.hasChildren());  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	150	2	replace
529	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  lhs  =  assign.getNext();  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(n.hasChildren());  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	150	2	replace
530	[BUG]  [BUGGY]  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	74	None	replace
531	[BUG]  [BUGGY]  Node  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  ';'  expected	182	None	replace
532	[BUG]  [BUGGY]  Node  assign  senzor  senzor  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  senzor  senzor  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  senzor  senzor  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  ';'  expected	182	None	replace
533	[BUG]  [BUGGY]  Node  assign  senzor  senzor  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  senzor  senzor  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  senzor  senzor  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  ';'  expected	182	None	replace
534	[BUG]  [BUGGY]  Node  assign  senzor  senzor  =  assign.getFirstChild();  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  senzor  senzor  =  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  senzor  senzor  =  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  ';'  expected	182	None	replace
535	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assignment.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assignment.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assignment.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assignment.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	155	None	replace
536	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild());  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild());	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild());    	non-compiled	[CE]  ';'  expected	131	None	replace
537	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	88	1	replace
538	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	88	1	replace
539	[BUG]  [BUGGY]  Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign    >=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	162	None	replace
540	[BUG]  [BUGGY]  Node  assign  =  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getFirstChild();	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	20	None	replace
541	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  ';'  expected	20	None	replace
542	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  ';'  expected	20	None	replace
543	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  ';'  expected	20	None	replace
544	[BUG]  [BUGGY]  Node  assign  =  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getLastChild();	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	20	None	replace
545	[BUG]  [BUGGY]  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  ';'  expected	20	None	replace
546	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	128	None	replace
547	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	128	None	replace
548	[BUG]  [BUGGY]  Node  c  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  lhs  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    c    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	103	None	replace
549	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
550	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
551	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	7	None	add
552	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
553	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
554	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
555	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	7	None	add
556	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
557	[BUG]  [BUGGY]  Preconditions.checkState(assign.isVar());  [CE]  cannot  find  symbol  lhs  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.isVar());    	non-compiled	[CE]  cannot  find  symbol  lhs	199	None	replace
558	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.isVar());    	compilable	  [FE]  IllegalStateException  	199	2	replace
559	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.isVar());  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.isVar());    	compilable	  [FE]  IllegalStateException  	199	2	replace
560	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.isVar());    	compilable	  [FE]  IllegalStateException  	199	2	replace
561	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isVar());  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.isVar());    	compilable	  [FE]  IllegalStateException  	199	2	replace
562	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.isVar());  [CE]  cannot  find  symbol  alloc  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.isVar());    	non-compiled	[CE]  cannot  find  symbol  alloc	199	None	replace
563	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isEmpty());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isEmpty());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.isVar());    	compilable	  [FE]  IllegalStateException  	199	2	replace
564	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isEmpty());  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isEmpty());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.isEmpty());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.isVar());    	compilable	  [FE]  IllegalStateException  	199	2	replace
565	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	53	None	add
566	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	53	None	add
567	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  assign  =  assign!=  null?  null  :  assign.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  assign  =  assign!=  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  assign  =  assign!=  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	53	None	add
568	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  assign  =  assign  ==  null?  null  :  assign.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  assign  =  assign  ==  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  assign  =  assign  ==  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	53	None	add
569	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign!=  null?  null  :  assign.removeLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	53	None	add
570	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  assignment  =  assign!=  null?  null  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  assignment  =  assign!=  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  assignment  =  assign!=  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	53	None	add
571	[BUG]  [BUGGY]  Node  assignment  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assignment  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assignment  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    assignment    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	93	None	replace
572	[BUG]  [BUGGY]  Node  assignment  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assignment  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assignment  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    assignment    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	93	None	replace
573	[BUG]  [BUGGY]  Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    >=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	62	None	replace
574	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	112	None	add
575	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	112	None	add
576	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	112	None	add
577	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  assign  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  assign  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    Node  assign  =  assign  ==  null?  assign.getLastChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	112	None	add
578	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext());  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext());	  	non-compiled	[CE]  ';'  expected	112	None	add
579	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	112	None	add
580	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	add
581	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	add
582	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  assign  =  assign!=  null?  null  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  assign  =  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  assign  =  assign!=  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	13	None	add
583	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  assign  =  assign  ==  null?  null  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  assign  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  assign  =  assign  ==  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	13	None	add
584	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  >>  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  >>  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  lhs  =  assign  >>  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	add
585	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  assignment!=  null?  null  :  assign.getLastChild();  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  assignment!=  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  assignment!=  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  ';'  expected	13	None	add
586	[BUG]  [BUGGY]  Preconditions.checkState(assign.hasOneChild());  [CE]  cannot  find  symbol  lhs  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasOneChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.hasOneChild());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasOneChild());    	non-compiled	[CE]  cannot  find  symbol  lhs	164	None	replace
587	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasOneChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasOneChild());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasOneChild());    	compilable	  [FE]  IllegalStateException  	164	2	replace
588	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasOneChild());  [FE]  IllegalStateException  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasOneChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.hasOneChild());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasOneChild());    	compilable	  [FE]  IllegalStateException  	164	2	replace
589	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasOneChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasOneChild());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasOneChild());    	compilable	  [FE]  IllegalStateException  	164	2	replace
590	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasOneChild());  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasOneChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.hasOneChild());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasOneChild());    	compilable	  [FE]  IllegalStateException  	164	2	replace
591	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasOneChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasOneChild());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasOneChild());    	compilable	  [FE]  IllegalStateException  	164	2	replace
592	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasOneChild());  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasOneChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.hasOneChild());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasOneChild());    	compilable	  [FE]  IllegalStateException  	164	2	replace
593	[BUG]  [BUGGY]  Node  assign  =  assign.getNext();  Preconditions.checkState(assign.hasOneChild());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getNext();  Preconditions.checkState(assign.hasOneChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getNext();  Preconditions.checkState(assign.hasOneChild());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasOneChild());    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	164	None	replace
594	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    Node  lhs  =  assign  ==  null?  null  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	110	None	add
595	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  assign  =  assign  ==  null?  null  :  assign.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  assign  =  assign  ==  null?  null  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    Node  assign  =  assign  ==  null?  null  :  assign.getNext();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	110	None	add
596	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  lhs  =  assign!=  null?  null  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  lhs  =  assign!=  null?  null  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    Node  lhs  =  assign!=  null?  null  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	110	None	add
597	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  assign  =  assign!=  null?  null  :  assign.getNext();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  assign  =  assign!=  null?  null  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    Node  assign  =  assign!=  null?  null  :  assign.getNext();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	110	None	add
598	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  assignment  =  assign  ==  null?  null  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  assignment  =  assign  ==  null?  null  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    Node  assignment  =  assign  ==  null?  null  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	110	None	add
599	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  assigned  =  assign  ==  null?  null  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  assigned  =  assign  ==  null?  null  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    Node  assigned  =  assign  ==  null?  null  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	110	None	add
600	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	175	None	add
601	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	175	None	add
602	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	175	None	add
603	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assignment;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assignment;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	175	None	add
604	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	175	None	add
605	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	175	None	add
606	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assigned;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assigned;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assigned;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	175	None	add
607	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign);	  	non-compiled	[CE]  ';'  expected	175	None	add
608	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	116	2	replace
609	[BUG]  [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	116	2	replace
610	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(n.hasChildren());  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	116	2	replace
611	[BUG]  [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  lhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(n.hasChildren());  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(n.hasChildren());  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	116	2	replace
612	[BUG]  [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  assign  =  assign.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  assign  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.hasChildren());  Node  assign  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.removeFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	116	None	replace
613	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeLastChild()  :  assign;  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.removeLastChild()  :  assign;	  Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
614	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  parent;  [CE]  cannot  find  symbol  parent  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  parent;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  parent;	  Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  parent	159	None	replace
615	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  nodesToCollapse;  [CE]  incompatible  types  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  nodesToCollapse;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  nodesToCollapse;	  Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    	non-compiled	[CE]  incompatible  types	159	None	replace
616	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	99	1	replace
617	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	99	1	replace
618	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	99	2	replace
619	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	99	2	replace
620	[BUG]  [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	99	None	replace
621	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	compilable	  [FE]  IllegalStateException  	143	2	replace
622	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	compilable	  [FE]  IllegalStateException  	143	2	replace
623	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.ASSIGN);  [CE]  cannot  find  symbol  alloc  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  cannot  find  symbol  alloc	143	None	replace
624	[BUG]  [BUGGY]  Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	143	None	replace
625	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	120	2	replace
626	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(var.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	120	2	replace
627	[BUG]  [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	120	None	replace
628	[BUG]  [BUGGY]  Node  assign  =  assign  >>  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign  >>  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign  >>  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	108	None	replace
629	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	184	None	replace
630	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	184	None	replace
631	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  preconditions.checkState(a.isVar());	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	184	None	replace
632	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	36	None	add
633	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	36	None	add
634	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  	non-compiled	[CE]  ';'  expected	36	None	add
635	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getLastChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	36	None	add
636	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	36	None	add
637	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  assignment  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  assignment  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    Node  assignment  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	36	None	add
638	[BUG]  [BUGGY]  c  =  assign  ==  null?  null  :  assign.getLastChild();  [CE]  cannot  find  symbol  c  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  c  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	c  =  assign  ==  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  c	46	None	replace
639	[BUG]  [BUGGY]  Preconditions.checkState(account.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  account  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(account.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(account.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  account	123	None	replace
640	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.FUNCTION);  [CE]  cannot  find  symbol  lhs  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()!=  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  lhs	123	None	replace
641	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  lhs  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  lhs	123	None	replace
642	[BUG]  [BUGGY]  Preconditions.checkState(advice.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  advice  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(advice.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(advice.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  advice	123	None	replace
643	[BUG]  [BUGGY]  Preconditions.checkState(adsign.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  adsign  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(adsign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(adsign.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  adsign	123	None	replace
644	[BUG]  [BUGGY]  Preconditions.checkState(assigned.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  assigned  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assigned.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assigned.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  assigned	123	None	replace
645	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.cloneTree();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  null  :  assign.cloneTree();	  Node    lhs    =    assign.cloneTree();    	compilable	  [FE]  IllegalStateException  	161	2	replace
646	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.cloneTree();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.cloneTree();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.cloneTree();	  Node    lhs    =    assign.cloneTree();    	compilable	  [FE]  IllegalStateException  	161	2	replace
647	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.cloneTree();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  null  :  assign.cloneTree();	  Node    lhs    =    assign.cloneTree();    	compilable	  [FE]  NullPointerException  	161	2	replace
648	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.cloneTree();  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.cloneTree();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.cloneTree();	  Node    lhs    =    assign.cloneTree();    	compilable	  [FE]  NullPointerException  	161	2	replace
649	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.cloneTree()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.cloneTree()  :  null;	  Node    lhs    =    assign.cloneTree();    	compilable	  [FE]  IllegalStateException  	161	2	replace
650	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.cloneTree()  :  null;  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.cloneTree()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.cloneTree()  :  null;	  Node    lhs    =    assign.cloneTree();    	compilable	  [FE]  IllegalStateException  	161	2	replace
651	[BUG]  [BUGGY]  Node  lhs  =  assignment  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assignment!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	136	None	replace
652	[BUG]  [BUGGY]  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  cannot  find  symbol  lhs  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    b    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  lhs	121	None	replace
653	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    b    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	121	2	replace
654	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    b    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	121	2	replace
655	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    b    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  NullPointerException  	121	2	replace
656	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [FE]  NullPointerException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    b    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  NullPointerException  	121	2	replace
657	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    b    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  NullPointerException  	121	2	replace
658	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [FE]  NullPointerException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    b    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  NullPointerException  	121	2	replace
659	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
660	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
661	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	9	None	add
662	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
663	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
664	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
665	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
666	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	9	None	add
667	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	158	None	add
668	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	158	None	add
669	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  assign  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  assign  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    Node  assign  =  assign!=  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	158	None	add
670	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assignment;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assignment;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	158	None	add
671	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  assignerfolg  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  assignerfolg  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    Node  assignerfolg  =  assign!=  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	158	None	add
672	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  assign!=  null?  assign.removeFirstChild()  :  assign;  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  assign!=  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    Node  assign!=  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  ';'  expected	158	None	add
673	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  >>  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign  >>  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign  >>  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	158	None	add
674	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign);	  	non-compiled	[CE]  ';'  expected	158	None	add
675	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  preconditions.checkState(a.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	28	None	replace
676	[BUG]  [BUGGY]  Preconditions.checkState(a.getLastChild()!=  assign.getLastChild());  [CE]  cannot  find  symbol  a  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.getLastChild()!=  assign.getLastChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getLastChild()!=  assign.getLastChild());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	28	None	replace
677	[BUG]  [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	138	None	replace
678	[BUG]  [BUGGY]  Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	138	None	replace
679	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.hasChildren());  [CE]  cannot  find  symbol  alloc  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.hasChildren());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  alloc	138	None	replace
680	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  assign  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	32	None	add
681	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  c  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	32	None	add
682	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  assign  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	32	None	add
683	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign  =  assign.getType()  >>  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign  =  assign.getType()  >>  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  assign  =  assign.getType()  >>  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	32	None	add
684	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  ';'  expected	32	None	add
685	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  c  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	32	None	add
686	[BUG]  [BUGGY]  Preconditions.checkState(account.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  account  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(account.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(account.getType()  ==  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  account	48	None	replace
687	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.NAME);  [CE]  cannot  find  symbol  lhs  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()!=  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  lhs	48	None	replace
688	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  lhs  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  lhs	48	None	replace
689	[BUG]  [BUGGY]  Preconditions.checkState(advice.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  advice  [FE]                                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(advice.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(advice.getType()  ==  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  advice	48	None	replace
690	[BUG]  [BUGGY]  Preconditions.checkState(adsign.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  adsign  [FE]                                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(adsign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(adsign.getType()  ==  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  adsign	48	None	replace
691	[BUG]  [BUGGY]  Preconditions.checkState(assigned.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  assigned  [FE]                                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assigned.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assigned.getType()  ==  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  assigned	48	None	replace
692	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	198	1	replace
693	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	198	1	replace
694	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  NullPointerException  	198	2	replace
695	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [FE]  NullPointerException  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  NullPointerException  	198	2	replace
696	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  NullPointerException  	72	2	replace
697	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  NullPointerException  	72	2	replace
698	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	72	2	replace
699	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	72	2	replace
700	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(lhs.isVar());    	compilable	  [FE]  IllegalStateException  	25	2	replace
701	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isVar());  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(lhs.isVar());	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(lhs.isVar());    	compilable	  [FE]  IllegalStateException  	25	2	replace
702	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    assign    =    assign    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	91	None	replace
703	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isName());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  NullPointerException  	70	2	replace
704	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isName());  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(lhs.isName());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.isName());    	compilable	  [FE]  NullPointerException  	70	2	replace
705	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  Collections  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  Collections.EMPTY_LIST;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  Collections.EMPTY_LIST;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol  Collections	172	None	replace
706	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeLastChild()  :  assign;  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.removeLastChild()  :  assign;	  Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
707	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    Node  lhs  =  assign!=  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	81	None	add
708	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  assign  =  assign!=  null?  assign.getNext()  :  null;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  assign  =  assign!=  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    Node  assign  =  assign!=  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	81	None	add
709	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	81	None	add
710	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  assign  =  assign  ==  null?  assign.getNext()  :  null;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  assign  =  assign  ==  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    Node  assign  =  assign  ==  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	81	None	add
711	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  lhs  =  assign  >>  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  lhs  =  assign  >>  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    Node  lhs  =  assign  >>  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	81	None	add
712	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  assignment  =  assign!=  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  assignment  =  assign!=  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    Node  assignment  =  assign!=  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	81	None	add
713	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  assigned  =  assign!=  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  assigned  =  assign!=  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    Node  assigned  =  assign!=  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	81	None	add
714	[BUG]  [BUGGY]  Node  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  ';'  expected	59	None	replace
715	[BUG]  [BUGGY]  Node  assign  senzor  senzor  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  senzor  senzor  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  senzor  senzor  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  ';'  expected	59	None	replace
716	[BUG]  [BUGGY]  Node  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  ';'  expected	59	None	replace
717	[BUG]  [BUGGY]  Node  assign  senzor  senzor  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  senzor  senzor  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  senzor  senzor  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  ';'  expected	59	None	replace
718	[BUG]  [BUGGY]  Node  assign  română  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  română  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  română  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  ';'  expected	59	None	replace
719	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(assign.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	188	None	replace
720	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(var.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(var.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(var.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	188	None	replace
721	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	127	None	replace
722	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.hasChildren());	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	127	None	replace
723	[BUG]  [BUGGY]  Preconditions.checkState(a.hasChildren());  [CE]  cannot  find  symbol  a  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.hasChildren());	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(a.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  a	127	None	replace
724	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	100	None	replace
725	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	100	None	replace
726	[BUG]  [BUGGY]  Node  a  =  assign.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  lhs  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  lhs	100	None	replace
727	[BUG]  [BUGGY]  Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  lhs  [FE]                          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  lhs	100	None	replace
728	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]                            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	100	None	replace
729	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
730	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
731	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild());  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild());	  	non-compiled	[CE]  ';'  expected	5	None	add
732	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign  >>  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
733	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    Node  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  ';'  expected	5	None	add
734	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign  >=  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
735	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  assignment.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
736	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  [Delete]  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign  [Delete]  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign  [Delete]  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  ';'  expected	5	None	add
737	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  n;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  n;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assignment;    	compilable	  [FE]  IllegalStateException  	38	2	replace
738	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  n;  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  n;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  n;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assignment;    	compilable	  [FE]  IllegalStateException  	38	2	replace
739	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  varNode;  [CE]  cannot  find  symbol  varNode  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  varNode;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  varNode;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assignment;    	non-compiled	[CE]  cannot  find  symbol  varNode	38	None	replace
740	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  var;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  var;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assignment;    	compilable	  [FE]  IllegalStateException  	38	2	replace
741	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  var;  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  var;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  var;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assignment;    	compilable	  [FE]  IllegalStateException  	38	2	replace
742	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	141	2	replace
743	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	141	2	replace
744	[BUG]  [BUGGY]  Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	141	None	replace
745	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  alloc  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.VAR);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  alloc	141	None	replace
746	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	68	2	replace
747	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	68	2	replace
748	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.GETPROP);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()!=  Token.GETPROP);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	68	2	replace
749	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.GETPROP);  Node  lhs  =  assign.getNext();  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()!=  Token.GETPROP);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()!=  Token.GETPROP);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	68	2	replace
750	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assignment.getNext();  [CE]  cannot  find  symbol  assignment  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assignment.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assignment.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  assignment	68	None	replace
751	[BUG]  [BUGGY]  Node  lhs  =  nodesToCollapse.removeLastChild();  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  nodesToCollapse.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  nodesToCollapse.removeLastChild();	  Node    lhs    =    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol	193	None	replace
752	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	101	None	replace
753	[BUG]  [BUGGY]  Node  a  =  assign.removeFirstChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  lhs  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.removeFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.removeFirstChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  lhs	101	None	replace
754	[BUG]  [BUGGY]  Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assigned  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assigned!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assigned	189	None	replace
755	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  Integer.MAX_VALUE;  [CE]  incompatible  types  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  Integer.MAX_VALUE;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  Integer.MAX_VALUE;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    	non-compiled	[CE]  incompatible  types	31	None	replace
756	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign  ==  null?  null  :  assign.getLastChild());  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign  ==  null?  null  :  assign.getLastChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Preconditions.checkState(assign  ==  null?  null  :  assign.getLastChild());	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	11	None	add
757	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.isName());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
758	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(lhs.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(lhs.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(lhs.isName());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
759	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  assign  =  assign  ==  null?  null  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  assign  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  assign  =  assign  ==  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	11	None	add
760	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  rhs  =  assign  ==  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  rhs  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  rhs  =  assign  ==  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
761	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign!=  null?  null  :  assign.getLastChild());  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign!=  null?  null  :  assign.getLastChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Preconditions.checkState(assign!=  null?  null  :  assign.getLastChild());	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	11	None	add
762	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getLastChild();    	compilable	  [FE]  NullPointerException  	46	2	replace
763	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  null  :  assign.getLastChild();  [FE]  NullPointerException  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Node  c  =  assign  ==  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getLastChild();    	compilable	  [FE]  NullPointerException  	46	2	replace
764	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  c  =  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  c  =  assign!=  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	46	1	replace
765	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  c  =  assign!=  null?  null  :  assign.getLastChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  c  =  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  Node  c  =  assign!=  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	46	1	replace
766	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  a  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	28	None	replace
767	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  a  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getType()  ==  Token.GETPROP);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	28	None	replace
768	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	171	None	add
769	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  n  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  n  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    Node  n  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	171	None	add
770	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	171	None	add
771	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  var  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [CE]  variable  var  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  var  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    Node  var  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  applyCollapses()	171	None	add
772	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
773	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	65	2	replace
774	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.isName());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.isName());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
775	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.cloneTree()!=  null);  Node  lhs  =  assign.cloneTree();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.cloneTree()!=  null);  Node  lhs  =  assign.cloneTree();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Preconditions.checkState(assign.cloneTree()!=  null);  Node  lhs  =  assign.cloneTree();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
776	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.cloneTree()  ==  null);  Node  lhs  =  assign.cloneTree();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.cloneTree()  ==  null);  Node  lhs  =  assign.cloneTree();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Preconditions.checkState(assign.cloneTree()  ==  null);  Node  lhs  =  assign.cloneTree();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
777	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
778	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
779	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.cloneTree()!=  null);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.cloneTree()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Preconditions.checkState(assign.cloneTree()!=  null);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
780	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.isDefined());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.isDefined());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.isDefined());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
781	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	compilable	  [FE]  IllegalStateException  	186	2	replace
782	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.ASSIGN);  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	compilable	  [FE]  IllegalStateException  	186	2	replace
783	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	compilable	  [FE]  IllegalStateException  	186	2	replace
784	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.ASSIGN);  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	compilable	  [FE]  IllegalStateException  	186	2	replace
785	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
786	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	9	None	add
787	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild());  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild());	  	non-compiled	[CE]  ';'  expected	9	None	add
788	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()  ==  null;  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  ';'  expected	20	None	replace
789	[BUG]  [BUGGY]  Node  parent  =  assign!=  null?  assign.getParent()  :  nameNode.getParent();  [CE]  cannot  find  symbol  nameNode  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  assign!=  null?  assign.getParent()  :  nameNode.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  assign!=  null?  assign.getParent()  :  nameNode.getParent();	  Node    parent    =    assign.getParent();    	non-compiled	[CE]  cannot  find  symbol  nameNode	47	None	replace
790	[BUG]  [BUGGY]  Node  parent  =  assign.nextChild();  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  assign.nextChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  assign.nextChild();	  Node    parent    =    assign.getParent();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
791	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Preconditions.checkState(assign.getNext()!=  null);  [CE]  cannot  find  symbol  lhs  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Preconditions.checkState(assign.getNext()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getNext()!=  null);  Preconditions.checkState(assign.getNext()!=  null);	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	145	None	replace
792	[BUG]  [BUGGY]  Preconditions.checkState(assign.getParent()!=  null);  Preconditions.checkState(assign.getNext()!=  null);  [CE]  cannot  find  symbol  lhs  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getParent()!=  null);  Preconditions.checkState(assign.getNext()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getParent()!=  null);  Preconditions.checkState(assign.getNext()!=  null);	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	145	None	replace
793	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Preconditions.checkState(assign.getNext()!=  null);  [CE]  cannot  find  symbol  lhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Preconditions.checkState(assign.getNext()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getNext()  ==  null);  Preconditions.checkState(assign.getNext()!=  null);	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()!=    null);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	145	None	replace
794	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	35	2	replace
795	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getFirstChild()  :  assign;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	35	2	replace
796	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild()!=  null?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	35	1	replace
797	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getFirstChild()  :  assign;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()!=  null?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	35	1	replace
798	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  node;  [CE]  cannot  find  symbol  node  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  node;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  node;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  node	35	None	replace
799	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  node;  [CE]  cannot  find  symbol  node  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  node;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  node;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  node	35	None	replace
800	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  preconditions  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.getType()  ==  Token.VAR);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  preconditions	141	None	replace
801	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	141	2	replace
802	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	141	2	replace
803	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.isEmpty());  [CE]  cannot  find  symbol  a  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.isEmpty());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  Preconditions.checkState(a.isEmpty());	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	184	None	replace
804	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Preconditions.checkState(assign!=  null?  assign.getNext()  :  null);  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Preconditions.checkState(assign!=  null?  assign.getNext()  :  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    Preconditions.checkState(assign!=  null?  assign.getNext()  :  null);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	83	None	add
805	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  rhs  =  assign  ==  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  rhs  =  assign  ==  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    Node  rhs  =  assign  ==  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	83	None	add
806	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  lhs  =  assign  ==  null?  assignment.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  lhs  =  assign  ==  null?  assignment.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    Node  lhs  =  assign  ==  null?  assignment.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	83	None	add
807	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  lhs  =  assignment  ==  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  lhs  =  assignment  ==  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    Node  lhs  =  assignment  ==  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	83	None	add
808	[BUG]  [BUGGY]  Preconditions.checkState(a  assign.getType()  ==  Token.NAME);  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a  assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a  assign.getType()  ==  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  ')'  expected	48	None	replace
809	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	124	None	add
810	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  n  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  n  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Node  n  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	124	None	add
811	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	124	None	add
812	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [CE]  ')'  expected  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  ')'  expected	124	None	add
813	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign);  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	124	None	add
814	[BUG]  [BUGGY]  Node  lhs  =  n.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  n.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  n.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	100	None	replace
815	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Preconditions.checkState(assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild());  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Preconditions.checkState(assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    Preconditions.checkState(assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild());	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	55	None	add
816	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	55	None	add
817	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	55	None	add
818	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    Node  rhs  =  assign!=  null?  assign.getLastChild()  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	55	None	add
819	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  parent;  [CE]  cannot  find  symbol  parent  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  parent;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  parent;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  parent	125	None	replace
820	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  node;  [CE]  cannot  find  symbol  node  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  node;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  node;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  node	125	None	replace
821	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  c  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  c  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getLastChild();    Node  c  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
822	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assignment  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assignment  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assignment  ==  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	3	None	add
823	[BUG]  [BUGGY]  Node  a  =  assign.getNext();  [CE]  cannot  find  symbol  lhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	67	None	replace
824	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	67	2	replace
825	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	67	2	replace
826	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  lhs  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.NAME);  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	67	None	replace
827	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  a.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  a.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	67	2	replace
828	[BUG]  [BUGGY]  Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  a.getNext();  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  a.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  a.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	67	2	replace
829	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  account  =  assign.getNext();  Preconditions.checkState(account.getType()  ==  Token.NAME);  Node  lhs  =  account.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  account  =  assign.getNext();  Preconditions.checkState(account.getType()  ==  Token.NAME);  Node  lhs  =  account.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	67	2	replace
830	[BUG]  [BUGGY]  Node  account  =  assign.getNext();  Preconditions.checkState(account.getType()  ==  Token.NAME);  Node  lhs  =  account.getNext();  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  account  =  assign.getNext();  Preconditions.checkState(account.getType()  ==  Token.NAME);  Node  lhs  =  account.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  account  =  assign.getNext();  Preconditions.checkState(account.getType()  ==  Token.NAME);  Node  lhs  =  account.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	67	2	replace
831	[BUG]  [BUGGY]  Node  lhs  =  nodesToCollapse.nextChild();  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  nodesToCollapse.nextChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  nodesToCollapse.nextChild();	  Node    lhs    =    assign.nextChild();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
832	[BUG]  [BUGGY]  Node  lhs  =  assign.getNextChild();  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNextChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNextChild();	  Node    lhs    =    assign.nextChild();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
833	[BUG]  [BUGGY]  Node  lhs  =  assigned.nextChild();  [CE]  cannot  find  symbol  assigned  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assigned.nextChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assigned.nextChild();	  Node    lhs    =    assign.nextChild();    	non-compiled	[CE]  cannot  find  symbol  assigned	144	None	replace
834	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.removeFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	56	2	replace
835	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.removeFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	56	2	replace
836	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assignment!=  null?  null  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assignment!=  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assignment!=  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	53	None	add
837	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign!=  null?  null  :  assign.removeFirstChild());  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign!=  null?  null  :  assign.removeFirstChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Preconditions.checkState(assign!=  null?  null  :  assign.removeFirstChild());	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	53	None	add
838	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  rhs  =  assign!=  null?  null  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  rhs  =  assign!=  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  rhs  =  assign!=  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	53	None	add
839	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  node.removeLastChild();  [CE]  cannot  find  symbol  node  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  node.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  node.removeLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol  node	180	None	replace
840	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n,  assign.removeLastChild();  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n,  assign.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n,  assign.removeLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.removeLastChild();    	non-compiled	[CE]  ';'  expected	180	None	replace
841	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getNext()  :  assign;	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    	compilable	  [FE]  NullPointerException  	174	2	replace
842	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  assign;  [FE]  NullPointerException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getNext()  :  assign;	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    	compilable	  [FE]  NullPointerException  	174	2	replace
843	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n;	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	174	1	replace
844	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n;	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	174	1	replace
845	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	32	None	add
846	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  a  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  a  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  a  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	32	None	add
847	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  >>  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  incompatible  types  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  >>  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  c  =  assign.getType()  >>  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  incompatible  types	32	None	add
848	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  b  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  b  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  b  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	32	None	add
849	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign.getType()  >>  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign.getType()  >>  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign.getType()  >>  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	32	None	add
850	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  >>  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  incompatible  types  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  >>  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  >>  Token.VAR?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  incompatible  types	17	None	replace
851	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getParent();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	86	1	replace
852	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getParent();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getParent();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	86	1	replace
853	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  node;  [CE]  cannot  find  symbol  node  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  node;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  node;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  node	170	None	replace
854	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  nameNode;  [CE]  cannot  find  symbol  nameNode  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  nameNode;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  nameNode;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  nameNode	170	None	replace
855	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild());  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild());	  	non-compiled	[CE]  ';'  expected	7	None	add
856	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  b  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  b  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  b  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
857	[BUG]  [BUGGY]  Preconditions.checkState(a  assign.getType()  ==  Token.FUNCTION);  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a  assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a  assign.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  ')'  expected	123	None	replace
858	[BUG]  [BUGGY]  Preconditions.checkState(aloc.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  aloc  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(aloc.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(aloc.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  aloc	123	None	replace
859	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	116	2	replace
860	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	116	2	replace
861	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	116	1	replace
862	[BUG]  [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	116	1	replace
863	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	6	2	replace
864	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign.getLastChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	6	2	replace
865	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	187	2	replace
866	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	187	2	replace
867	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	187	2	replace
868	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.VAR);    	compilable	  [FE]  IllegalStateException  	187	2	replace
869	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.getLastChild()  :  assign;  [CE]  ')'  expected  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Preconditions.checkState(assign!=  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  ')'  expected	177	None	add
870	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.getLastChild()  :  assign);  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.getLastChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Preconditions.checkState(assign!=  null?  assign.getLastChild()  :  assign);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	177	None	add
871	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  IllegalStateException  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  IllegalStateException  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    IllegalStateException  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	177	None	add
872	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign;  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	177	None	add
873	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Node  rhs  =  assign!=  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	177	None	add
874	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Preconditions.checkState(assign  ==  null?  null  :  assign.getNext());  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Preconditions.checkState(assign  ==  null?  null  :  assign.getNext());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    Preconditions.checkState(assign  ==  null?  null  :  assign.getNext());	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	110	None	add
875	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Preconditions.checkState(assign!=  null?  null  :  assign.getNext());  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Preconditions.checkState(assign!=  null?  null  :  assign.getNext());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    Preconditions.checkState(assign!=  null?  null  :  assign.getNext());	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	110	None	add
876	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  rhs  =  assign  ==  null?  null  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  rhs  =  assign  ==  null?  null  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    Node  rhs  =  assign  ==  null?  null  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	110	None	add
877	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  lhs  =  assignment  ==  null?  null  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  lhs  =  assignment  ==  null?  null  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    Node  lhs  =  assignment  ==  null?  null  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	110	None	add
878	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  [CE]  cannot  find  symbol  lhs  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  lhs	200	None	replace
879	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
880	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Preconditions.checkState(assign!=  null?  assign.getLastChild()  :  assign.getNext());  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Preconditions.checkState(assign!=  null?  assign.getLastChild()  :  assign.getNext());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    Preconditions.checkState(assign!=  null?  assign.getLastChild()  :  assign.getNext());	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	112	None	add
881	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	112	None	add
882	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	112	None	add
883	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  rhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    Node  rhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	112	None	add
884	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.removeFirstChild()  :  assign;  [CE]  ')'  expected  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    Preconditions.checkState(assign!=  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  ')'  expected	158	None	add
885	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.removeFirstChild()  :  assign);  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.removeFirstChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    Preconditions.checkState(assign!=  null?  assign.removeFirstChild()  :  assign);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	158	None	add
886	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  IllegalStateException  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  IllegalStateException  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    IllegalStateException  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	158	None	add
887	[BUG]  [BUGGY]  Node  lhs  =  assignment!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assignment!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	136	None	replace
888	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren());  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.hasChildren());  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	150	2	replace
889	[BUG]  [BUGGY]  Preconditions.checkState(assign.hasChildren());  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren());  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.hasChildren());  Preconditions.checkState(assign.hasChildren());  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	150	2	replace
890	[BUG]  [BUGGY]  Preconditions.checkState(assign.hasChildren());  Preconditions.checkState(assign.hasChildren());  [CE]  cannot  find  symbol  lhs  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.hasChildren());  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.hasChildren());  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	150	None	replace
891	[BUG]  [BUGGY]  Preconditions.checkState(alloc.hasChildren());  [CE]  cannot  find  symbol  alloc  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(alloc.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(alloc.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  alloc	163	None	replace
892	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.getFirstChild()  :  assign;  [CE]  ')'  expected  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    Preconditions.checkState(assign!=  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  ')'  expected	175	None	add
893	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.getFirstChild()  :  assign);  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.getFirstChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    Preconditions.checkState(assign!=  null?  assign.getFirstChild()  :  assign);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	175	None	add
894	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  IllegalStateException  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  IllegalStateException  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    IllegalStateException  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	175	None	add
895	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  n  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  n  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    Node  n  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	30	None	add
896	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	30	None	add
897	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  ')'  expected  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  ')'  expected	30	None	add
898	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign);  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	30	None	add
899	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Preconditions.checkState(assign!=  null?  assign.getFirstChild()  :  assign.getNext());  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Preconditions.checkState(assign!=  null?  assign.getFirstChild()  :  assign.getNext());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Preconditions.checkState(assign!=  null?  assign.getFirstChild()  :  assign.getNext());	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	190	None	add
900	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	190	None	add
901	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assignment  ==  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assignment  ==  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Node  lhs  =  assignment  ==  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	190	None	add
902	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assignment.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assignment.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Node  lhs  =  assign  ==  null?  assignment.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	190	None	add
903	[BUG]  [BUGGY]  Node  lhs  =  assignment!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  assignment  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign    >>    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	132	None	replace
904	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.removeFirstChild()  :  assign;  [CE]  ')'  expected  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    Preconditions.checkState(assign!=  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  ')'  expected	194	None	add
905	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.removeFirstChild()  :  assign);  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign!=  null?  assign.removeFirstChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    Preconditions.checkState(assign!=  null?  assign.removeFirstChild()  :  assign);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	194	None	add
906	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign  ==  null?  assign.removeFirstChild()  :  assign;  [CE]  ')'  expected  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign  ==  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    Preconditions.checkState(assign  ==  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  ')'  expected	194	None	add
907	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  IllegalStateException  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  IllegalStateException  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    IllegalStateException  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	194	None	add
908	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign!=  null?  null  :  assign.getLastChild());  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign!=  null?  null  :  assign.getLastChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Preconditions.checkState(assign!=  null?  null  :  assign.getLastChild());	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	13	None	add
909	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assignment!=  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assignment!=  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  lhs  =  assignment!=  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	add
910	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  rhs  =  assign!=  null?  null  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  rhs  =  assign!=  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  rhs  =  assign!=  null?  null  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	add
911	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	173	None	add
912	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assignment;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assignment;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	173	None	add
913	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign  >>  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	173	None	add
914	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	173	None	add
915	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.isName());    	compilable	  [FE]  IllegalStateException  	117	2	replace
916	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.isName());  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.isName());    	compilable	  [FE]  IllegalStateException  	117	2	replace
917	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.isDefined());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.isDefined());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.isDefined());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.isName());    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
918	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	149	2	replace
919	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	149	2	replace
920	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();	  Node    lhs    =    assign    >=    null?    assign.getFirstChild()    :    assign.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	162	1	replace
921	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();	  Node    lhs    =    assign    >=    null?    assign.getFirstChild()    :    assign.getLastChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	162	1	replace
922	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  cannot  find  symbol  preconditions  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  cannot  find  symbol  preconditions	143	None	replace
923	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGN);  [CE]  cannot  find  symbol  lhs  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGN);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  cannot  find  symbol  lhs	143	None	replace
924	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	36	None	add
925	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null);  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	36	None	add
926	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	36	None	add
927	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  n  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Node  n  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    Node  n  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	36	None	add
928	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    null;    Preconditions.checkState(assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  null;	  	non-compiled	[CE]  ')'  expected	36	None	add
929	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  preconditions  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  preconditions	139	None	replace
930	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  preconditions  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  preconditions	137	None	replace
931	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  lhs  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  lhs	137	None	replace
932	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
933	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
934	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  lhs  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	69	None	replace
935	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  a.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  a.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	69	2	replace
936	[BUG]  [BUGGY]  Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  a.getNext();  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  a.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  a.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	69	2	replace
937	[BUG]  [BUGGY]  Preconditions.checkState(assign.getParent()  ==  null);  Preconditions.checkState(assign.getNext()  ==  null);  [CE]  cannot  find  symbol  lhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getParent()  ==  null);  Preconditions.checkState(assign.getNext()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getParent()  ==  null);  Preconditions.checkState(assign.getNext()  ==  null);	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	147	None	replace
938	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Preconditions.checkState(assign.getNext()  ==  null);  [CE]  cannot  find  symbol  lhs  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getNext()!=  null);  Preconditions.checkState(assign.getNext()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getNext()!=  null);  Preconditions.checkState(assign.getNext()  ==  null);	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	147	None	replace
939	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Preconditions.checkState(assign.getNext()  ==  null);  [CE]  cannot  find  symbol  lhs  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  Preconditions.checkState(assign.getNext()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getNext()  ==  null);  Preconditions.checkState(assign.getNext()  ==  null);	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	147	None	replace
940	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null  ||  assign.getFirstChild()!=  null;  [CE]  incompatible  types  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null  ||  assign.getFirstChild()!=  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null  ||  assign.getFirstChild()!=  null;	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  incompatible  types	40	None	replace
941	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    c    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  NullPointerException  	19	2	replace
942	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [FE]  NullPointerException  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    c    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  NullPointerException  	19	2	replace
943	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    c    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	19	1	replace
944	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    c    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	19	1	replace
945	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assignment;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  cannot  find  symbol  assignment  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assignment;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assignment;  Node  c  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    c    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  assignment	19	None	replace
946	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	99	2	replace
947	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	99	2	replace
948	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
949	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assignment.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
950	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	105	2	replace
951	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [FE]  IllegalStateException  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	105	2	replace
952	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	68	2	replace
953	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	68	2	replace
954	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  lhs  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	68	None	replace
955	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.GETPROP);  Node  lhs  =  a.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.GETPROP);  Node  lhs  =  a.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	68	2	replace
956	[BUG]  [BUGGY]  Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.GETPROP);  Node  lhs  =  a.getNext();  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.GETPROP);  Node  lhs  =  a.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.getNext();  Preconditions.checkState(a.getType()  ==  Token.GETPROP);  Node  lhs  =  a.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	68	2	replace
957	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  lhs  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.GETPROP);	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	68	None	replace
958	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	169	None	add
959	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  n  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  n  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Node  n  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	169	None	add
960	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Node  rhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	169	None	add
961	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  t  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  t  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Node  t  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	169	None	add
962	[BUG]  [BUGGY]  Node  lhs  =  assignment.removeLastChild();  [CE]  cannot  find  symbol  assignment  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment.removeLastChild();	  Node    lhs    =    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	193	None	replace
963	[BUG]  [BUGGY]  Node  assignEOF  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  lhs  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assignEOF  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assignEOF  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	182	None	replace
964	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  nameNode;  [CE]  cannot  find  symbol  nameNode  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  nameNode;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  nameNode;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assignment;    	non-compiled	[CE]  cannot  find  symbol  nameNode	38	None	replace
965	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  node;  [CE]  cannot  find  symbol  node  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  node;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  node;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assignment;    	non-compiled	[CE]  cannot  find  symbol  node	38	None	replace
966	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Preconditions.checkState(assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [CE]  ')'  expected  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Preconditions.checkState(assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Preconditions.checkState(assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  ')'  expected	34	None	add
967	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Preconditions.checkState(assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign);  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Preconditions.checkState(assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Preconditions.checkState(assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	34	None	add
968	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  n  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  n  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Node  n  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	34	None	add
969	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  rhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  rhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Node  rhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	34	None	add
970	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	114	2	replace
971	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.hasChildren());  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	114	2	replace
972	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(var.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getNext();  Preconditions.checkState(var.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	146	2	replace
973	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(var.hasChildren());  [FE]  IllegalStateException  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(var.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(var.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    	compilable	  [FE]  IllegalStateException  	146	2	replace
974	[BUG]  [BUGGY]  Node  assign  =  assignment!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assignment!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assignment!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	134	None	replace
975	[BUG]  [BUGGY]  Node  parent  =  node.getParent();  [CE]  cannot  find  symbol  node  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  node.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  node.getParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  cannot  find  symbol  node	192	None	replace
976	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	85	None	add
977	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  a  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  a  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    Node  a  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	85	None	add
978	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  b  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  b  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    Node  b  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	85	None	add
979	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    Node  rhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	85	None	add
980	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	151	2	replace
981	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	151	2	replace
982	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  a  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  a	104	None	replace
983	[BUG]  [BUGGY]  Node  assign  =  assignment!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assignment!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assignment!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	104	None	replace
984	[BUG]  [BUGGY]  Node  lhs  =  n.removeFirstChild();  Preconditions.checkState(a.isVar());  [CE]  cannot  find  symbol  a  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  n.removeFirstChild();  Preconditions.checkState(a.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  n.removeFirstChild();  Preconditions.checkState(a.isVar());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	101	None	replace
985	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.isVar());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.isVar());    	compilable	  [FE]  IllegalStateException  	101	2	replace
986	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.isVar());  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.isVar());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.isVar());    	compilable	  [FE]  IllegalStateException  	101	2	replace
987	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	115	2	replace
988	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	115	2	replace
989	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	115	2	replace
990	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	115	2	replace
991	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  a  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getType()  ==  Token.NAME);  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  a	44	None	replace
992	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  assign  =  assign  ==  null?  null  :  assign.removeFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  assign  =  assign  ==  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  assign  =  assign  ==  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	51	None	add
993	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign  ==  null?  null  :  assign.removeFirstChild());  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign  ==  null?  null  :  assign.removeFirstChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Preconditions.checkState(assign  ==  null?  null  :  assign.removeFirstChild());	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	51	None	add
994	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign!=  null?  null  :  assign.removeFirstChild());  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign!=  null?  null  :  assign.removeFirstChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Preconditions.checkState(assign!=  null?  null  :  assign.removeFirstChild());	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	51	None	add
995	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  rhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  rhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  rhs  =  assign  ==  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	51	None	add
996	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.removeLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	51	None	add
997	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  n  =  assign  ==  null?  null  :  assign.removeFirstChild();  [CE]  variable  n  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  n  =  assign  ==  null?  null  :  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  n  =  assign  ==  null?  null  :  assign.removeFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  applyCollapses()	51	None	add
998	[BUG]  [BUGGY]  Node  c  =  assignment!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  assignment  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assignment!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assignment!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    c    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	103	None	replace
999	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getFirstChild()  ==  null);  Node  lhs  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getFirstChild()  ==  null);  Node  lhs  =  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	23	2	replace
1000	[BUG]  [BUGGY]  Preconditions.checkState(assign.getFirstChild()  ==  null);  Node  lhs  =  assign.getLastChild();  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getFirstChild()  ==  null);  Node  lhs  =  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getFirstChild()  ==  null);  Node  lhs  =  assign.getLastChild();	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	23	2	replace
1001	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	120	2	replace
1002	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(var.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	120	2	replace
1003	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	120	2	replace
1004	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	120	2	replace
1005	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Preconditions.checkState(assign!=  null?  assign.getNext()  :  null);  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Preconditions.checkState(assign!=  null?  assign.getNext()  :  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    Preconditions.checkState(assign!=  null?  assign.getNext()  :  null);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	81	None	add
1006	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  lhs  =  assignment!=  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  lhs  =  assignment!=  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    Node  lhs  =  assignment!=  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	81	None	add
1007	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Preconditions.checkState(assign!=  null?  assign.getNext()  :  null;  [CE]  ')'  expected  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Preconditions.checkState(assign!=  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    Preconditions.checkState(assign!=  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  ')'  expected	81	None	add
1008	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()!=  null);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()!=  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()!=  null);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
1009	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
1010	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()  ==  null);  Node  lhs  =  assign.getParent();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()  ==  null);  Node  lhs  =  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Preconditions.checkState(assign.getParent()  ==  null);  Node  lhs  =  assign.getParent();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
1011	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()!=  null);  Node  lhs  =  assign.getParent();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()!=  null);  Node  lhs  =  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Preconditions.checkState(assign.getParent()!=  null);  Node  lhs  =  assign.getParent();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
1012	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()  ==  null);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getParent()  ==  null);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
1013	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
1014	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
1015	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getNext()  :  assign;	  Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	176	2	replace
1016	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  assign;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getNext()  :  assign;	  Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	176	2	replace
1017	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  node;  [CE]  cannot  find  symbol  node  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  node;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  node;	  Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  node	176	None	replace
1018	[BUG]  [BUGGY]  Node  lhs  =  assign  >=  null?  assign.getFirstChild()  :  assign;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  >=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  >=  null?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	178	None	replace
1019	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assignment.getFirstChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assignment.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assignment.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    assignment.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	63	None	replace
1020	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign.getNext();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    	compilable	  [FE]  IllegalStateException  	113	2	replace
1021	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign.getNext();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assign.getNext();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    	compilable	  [FE]  IllegalStateException  	113	2	replace
1022	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getParent();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    	compilable	  [FE]  IllegalStateException  	113	2	replace
1023	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getParent();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getParent();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    	compilable	  [FE]  IllegalStateException  	113	2	replace
1024	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	148	2	replace
1025	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	compilable	  [FE]  IllegalStateException  	148	2	replace
1026	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null);  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null;  Node  lhs  =  assign  ==  null?  assign.getNext()  :  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getNext()    :    null;    Node  lhs  =  assign  ==  null?  assign.getNext()  :  null);	  	non-compiled	[CE]  ';'  expected	83	None	add
1027	[BUG]  [BUGGY]  Node  parent  =  assign.removeFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  assign.removeFirstChild();	  Node    parent    =    assign.getParent();    	non-compiled	[CE]  cannot  find  symbol  lhs	47	None	replace
1028	[BUG]  [BUGGY]  Node  parent  =  assigned.getParent();  [CE]  cannot  find  symbol  assigned  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  parent  =  assigned.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  parent  =  assigned.getParent();	  Node    parent    =    assign.getParent();    	non-compiled	[CE]  cannot  find  symbol  assigned	47	None	replace
1029	[BUG]  [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  [CE]  cannot  find  symbol  lhs  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getNext()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getNext()  ==  null);	  Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.getNext()    ==    null);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  cannot  find  symbol  lhs	147	None	replace
1030	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.cloneTree()  :  assign;	  Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	195	2	replace
1031	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.cloneTree()  :  assign;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.cloneTree()  :  assign;	  Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	195	2	replace
1032	[BUG]  [BUGGY]  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  assignment  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	109	None	replace
1033	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	53	None	add
1034	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	53	None	add
1035	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	53	None	add
1036	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	53	None	add
1037	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign!=  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	53	None	add
1038	[BUG]  [BUGGY]  Preconditions.checkArgument(assign.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  lhs  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkArgument(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkArgument(assign.getType()  ==  Token.NAME);	  Preconditions.checkState(a.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  lhs	48	None	replace
1039	[BUG]  [BUGGY]  Node  assign  =  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	182	None	replace
1040	[BUG]  [BUGGY]  Node  assign  senzor  senzor  =  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  senzor  senzor  =  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  senzor  senzor  =  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  ';'  expected	182	None	replace
1041	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(n.hasChildren());  [CE]  cannot  find  symbol  preconditions  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(n.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(n.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  preconditions	188	None	replace
1042	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(alloc.hasChildren());  [CE]  cannot  find  symbol  alloc  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(alloc.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  preconditions.checkState(alloc.hasChildren());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  alloc	188	None	replace
1043	[BUG]  [BUGGY]  Node  assign  =  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	59	None	replace
1044	[BUG]  [BUGGY]  Node  assign  =  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	59	None	replace
1045	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assignment.getLastChild();  [CE]  cannot  find  symbol  assignment  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assignment.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assignment.getLastChild();	  Node    lhs    =    assign    >=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	162	None	replace
1046	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assignment.getFirstChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  assignment  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assignment.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assignment.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign    >=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	162	None	replace
1047	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assignment.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assignment.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assignment.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
1048	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assignment  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Node  lhs  =  assignment  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    Node  lhs  =  assignment  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	1	None	add
1049	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  c  =  assign  ==  null?  null  :  assign.getLastChild();  [CE]  cannot  find  symbol  lhs  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  c  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  c  =  assign  ==  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	46	None	replace
1050	[BUG]  [BUGGY]  Node  c  =  assignment  ==  null?  null  :  assign.getLastChild();  [CE]  cannot  find  symbol  assignment  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assignment  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assignment  ==  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	46	None	replace
1051	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
1052	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
1053	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
1054	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	11	None	add
1055	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	42	None	replace
1056	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1  }	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	42	None	replace
1057	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkArgument(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkArgument(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	88	1	replace
1058	[BUG]  [BUGGY]  Preconditions.checkArgument(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkArgument(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkArgument(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	88	1	replace
1059	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  c  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  c  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  c  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	39	None	replace
1060	[BUG]  [BUGGY]  Node  c  =  assignment  ==  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assignment  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assignment  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	39	None	replace
1061	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext());  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext());	  	non-compiled	[CE]  ';'  expected	190	None	add
1062	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assignment.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getNext();  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assignment.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assignment.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	190	None	add
1063	[BUG]  [BUGGY]  Node  lhs  =  assigned!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assigned  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assigned!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assigned!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assigned!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assigned	189	None	replace
1064	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(alloc.hasChildren());  [CE]  cannot  find  symbol  alloc  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(alloc.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(alloc.hasChildren());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasChildren());    	non-compiled	[CE]  cannot  find  symbol  alloc	146	None	replace
1065	[BUG]  [BUGGY]  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  lhs  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	102	None	replace
1066	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.cloneTree()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    	compilable	  [FE]  IllegalStateException  	170	2	replace
1067	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.cloneTree()  :  assign;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.cloneTree()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    	compilable	  [FE]  IllegalStateException  	170	2	replace
1068	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assignment;  [CE]  cannot  find  symbol  assignment  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assignment;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  assignment	170	None	replace
1069	[BUG]  [BUGGY]  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  cannot  find  symbol  lhs  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  b  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  b  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    b    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  lhs	121	None	replace
1070	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  rhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  rhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  rhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	32	None	add
1071	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assignment;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()!=    Token.VAR?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assignment;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	32	None	add
1072	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getParent();	  Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    	compilable	  [FE]  IllegalStateException  	191	2	replace
1073	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getParent();  [FE]  IllegalStateException  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getParent();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getParent();	  Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getNext();    	compilable	  [FE]  IllegalStateException  	191	2	replace
1074	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  parent;  [CE]  cannot  find  symbol  parent  [FE]                IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  parent;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  parent;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assignment;    	non-compiled	[CE]  cannot  find  symbol  parent	38	None	replace
1075	[BUG]  [BUGGY]  Node  b  =  assignment  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  b  =  assignment  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  b  =  assignment  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    b    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	154	None	replace
1076	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  Result:  function  f(a)  {  var  b=1  }	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	107	None	replace
1077	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getString()  :  null;  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getString()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getString()  :  null;	  Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    	non-compiled	[CE]  incompatible  types	82	None	replace
1078	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assignment  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assignment  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  assignment  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    assignment    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	93	None	replace
1079	[BUG]  [BUGGY]  Node  c  =  assign  >=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assign  >=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assign  >=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    c    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	106	None	replace
1080	[BUG]  [BUGGY]  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  c  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	c  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    c    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  c	106	None	replace
1081	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  assign  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	108	None	replace
1082	[BUG]  [BUGGY]  Node  assign  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	108	None	replace
1083	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild()  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild()  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	58	1	replace
1084	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild()  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getLastChild()  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild()  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	58	1	replace
1085	[BUG]  [BUGGY]  Node  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  ';'  expected	20	None	replace
1086	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  ';'  expected	20	None	replace
1087	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  ';'  expected	20	None	replace
1088	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR  ||  assign.getType()  ==  Token.VAR);  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR  ||  assign.getType()  ==  Token.VAR);  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR  ||  assign.getType()  ==  Token.VAR);  Node  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  ';'  expected	20	None	replace
1089	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  new  Node(assign);  [CE]  no  suitable  constructor  found  for  Node(Node)  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  new  Node(assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  new  Node(assign);	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(Node)	174	None	replace
1090	[BUG]  [BUGGY]  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	75	None	replace
1091	[BUG]  [BUGGY]  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    [Delete]    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	64	None	replace
1092	[BUG]  [BUGGY]  Node  c  =  assignment!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  assignment  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  c  =  assignment!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  c  =  assignment!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    c    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  assignment	76	None	replace
1093	[BUG]  [BUGGY]  c  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  c  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  c  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	c  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    c    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  c	76	None	replace
1094	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null? "null "  :  assign.getFirstChild();  [CE]  incompatible  types  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null? "null "  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null? "null "  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  incompatible  types	45	None	replace
1095	[BUG]  [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	115	None	replace
1096	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  null?  assign.getLastChild()  :  assign.getFirstChild();  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  null?  assign.getLastChild()  :  assign.getFirstChild();  }  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1!=  null?  assign.getLastChild()  :  assign.getFirstChild();  }	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	165	None	replace
1097	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;  [CE]  cannot  find  symbol  assignment  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assignment;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assignment;    	non-compiled	[CE]  cannot  find  symbol  assignment	18	None	replace
1098	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
1099	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
1100	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
1101	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getParent();    Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	49	None	add
1102	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(alloc.isName());  [CE]  cannot  find  symbol  alloc  [FE]              IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(alloc.isName());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(alloc.isName());	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(assign.isName());    	non-compiled	[CE]  cannot  find  symbol  alloc	117	None	replace
1103	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	51	None	add
1104	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	51	None	add
1105	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	51	None	add
1106	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	51	None	add
1107	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.removeFirstChild();    Node  lhs  =  assign  ==  null?  null  :  assign.removeFirstChild();  Preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	51	None	add
1108	[BUG]  [BUGGY]  Node  lhs  =  n.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  a  [FE]                    IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  n.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  n.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  a	100	None	replace
1109	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.cloneTree()  :  assign;	  Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	159	2	replace
1110	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.cloneTree()  :  assign;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.cloneTree()  :  assign;	  Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	159	2	replace
1111	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  node;  [CE]  cannot  find  symbol  node  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  node;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  node;	  Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  node	159	None	replace
1112	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.BLOCK);  [CE]  cannot  find  symbol  a  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.BLOCK);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(a.getType()  ==  Token.BLOCK);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	28	None	replace
1113	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  a  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();  Preconditions.checkState(a.getType()  ==  Token.VAR);	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    Preconditions.checkState(a.isVar());    	non-compiled	[CE]  cannot  find  symbol  a	101	None	replace
1114	[BUG]  [BUGGY]  Node  lhs  =  assign  >=  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  >=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  >=  null?  assign.getFirstChild()  :  assign.getNext();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	113	None	replace
1115	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.removeFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	125	2	replace
1116	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.removeFirstChild()  :  assign;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.removeFirstChild()  :  assign;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    	compilable	  [FE]  IllegalStateException  	125	2	replace
1117	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	80	2	replace
1118	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [FE]  IllegalStateException  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Preconditions.checkState(assign.hasChildren());	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(lhs.hasChildren());    	compilable	  [FE]  IllegalStateException  	80	2	replace
1119	[BUG]  [BUGGY]  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  lhs  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	105	None	replace
1120	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    assign;    Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	30	None	add
1121	[BUG]  [BUGGY]  Node  a  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  lhs  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign  ==  null?  null  :  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  lhs	129	None	replace
1122	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  this;  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  this;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  this;	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    	non-compiled	[CE]  incompatible  types	172	None	replace
1123	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(a.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	167	1	replace
1124	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Preconditions.checkState(a.hasChildren());    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	167	1	replace
1125	[BUG]  [BUGGY]  Preconditions.checkState(assign  ==  null);  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign  ==  null);  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign  ==  null);  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    assign    =    assign    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	41	None	replace
1126	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	67	None	replace
1127	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	67	None	replace
1128	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.NAME);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	67	None	replace
1129	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  new  Node(assign);  [CE]  no  suitable  constructor  found  for  Node(Node)  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  new  Node(assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  new  Node(assign);	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(Node)	35	None	replace
1130	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assignment;  [CE]  cannot  find  symbol  assignment  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assignment;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild()!=  null?  assign.getLastChild()  :  assignment;	  Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    	non-compiled	[CE]  cannot  find  symbol  assignment	35	None	replace
1131	[BUG]  [BUGGY]  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  cannot  find  symbol  c  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  c  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	c  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    c    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  c	103	None	replace
1132	[BUG]  [BUGGY]  Preconditions.checkState(assign.removeFirstChild());  Node  lhs  =  assign.removeFirstChild();  [CE]  no  suitable  method  found  for  checkState(Node)  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.removeFirstChild());  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.removeFirstChild());  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	non-compiled	[CE]  no  suitable  method  found  for  checkState(Node)	94	None	replace
1133	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	94	2	replace
1134	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.removeFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.VAR);  Node  lhs  =  assign.removeFirstChild();	  Node    lhs    =    assign.removeFirstChild();    Node    lhs    =    assign.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	94	2	replace
1135	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	126	2	replace
1136	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [FE]  IllegalStateException  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign  ==  null?  null  :  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    ==    null?    null    :    assign.getLastChild();    	compilable	  [FE]  IllegalStateException  	126	2	replace
1137	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	5	None	add
1138	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  assign.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getLastChild();  Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getLastChild();    Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  assign.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	5	None	add
1139	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getFirstChild();    Result:  function  f(a)  {  var  b=1!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  not  a  statement	7	None	add
1140	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  rhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	7	None	add
1141	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  c  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  cannot  find  symbol  lhs  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  c  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  c  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Node    c    =    assign!=    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lhs	43	None	replace
1142	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assignment!=  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assignment!=  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assignment!=  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	158	None	add
1143	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getFirstChild()    :    null;    Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.getFirstChild()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	171	None	add
1144	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.hasOneChild());  [CE]  cannot  find  symbol  alloc  [FE]          NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.hasOneChild());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.hasOneChild());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(assign.hasOneChild());    	non-compiled	[CE]  cannot  find  symbol  alloc	164	None	replace
1145	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.removeFirstChild()  :  assign;  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	124	None	add
1146	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]              NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	68	None	replace
1147	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	68	None	replace
1148	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.GETPROP);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.GETPROP);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	68	None	replace
1149	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  assign  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    assign    =    assign!=    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	134	None	replace
1150	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c=1;  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c=1;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1;a=2;var  c=1;	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	197	None	replace
1151	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1;  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1;  }  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1;a=2;var  c  =  function  f(a)  {  var  b=1;  }	  Node    lhs    =    assign    ==    null?    null    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	197	None	replace
1152	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  Node  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getFirstChild();    Node  assign!=  null?  assign.getFirstChild()  :  assign.getFirstChild();	  	non-compiled	[CE]  ';'  expected	9	None	add
1153	[BUG]  [BUGGY]  Preconditions.checkArgument(assign!=  null);  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkArgument(assign!=  null);  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkArgument(assign!=  null);  Node  assign  =  assign  ==  null?  null  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    assign    =    assign    ==    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	91	None	replace
1154	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.cloneTree()    :    assign;    Node  lhs  =  assignment.getType()  ==  Token.VAR?  assign.cloneTree()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	169	None	add
1155	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getNext();  Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign.getNext();    Node  lhs  =  assigned!=  null?  assign.getLastChild()  :  assign.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	112	None	add
1156	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	65	2	replace
1157	[BUG]  [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  lhs  =  assign.getNext();  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign.getType()  ==  Token.ASSIGN);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    	compilable	  [FE]  NullPointerException  	65	2	replace
1158	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  assign!=  null?  assign.getFirstChild()  :  assign;  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  assign!=  null?  assign.getFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  assign!=  null?  assign.getFirstChild()  :  assign;	  	non-compiled	[CE]  ';'  expected	173	None	add
1159	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assigned;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign;  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assigned;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign;    Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assigned;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	173	None	add
1160	[BUG]  [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getParent();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	69	None	replace
1161	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.getType()  ==  Token.FUNCTION);  Node  lhs  =  assign.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    lhs    =    assign.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	69	None	replace
1162	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  a.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  a.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
1163	[BUG]  [BUGGY]  Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  a.getNext();  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  a.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  a  =  assign.getFirstChild();  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  Node  lhs  =  a.getNext();	  Node    lhs    =    assign.getNext();    Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    Node    lhs    =    assign.getNext();    	compilable	  [FE]  IllegalStateException  	69	2	replace
1164	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assignment.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assignment.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.getFirstChild()    ==    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assignment.getFirstChild()  ==  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	34	None	add
1165	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()!=  Token.VAR?  assign.getFirstChild()  :  assign);	  Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign;    Node    lhs    =    assign.getType()    ==    Token.VAR?    assign.getLastChild()    :    assign);    	non-compiled	[CE]  ';'  expected	22	None	replace
1166	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  lhs  =  assign  ==  null?  null  :  assignment.getNext();  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  lhs  =  assign  ==  null?  null  :  assignment.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    Node  lhs  =  assign  ==  null?  null  :  assignment.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	110	None	add
1167	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  lhs  =  assign  ==  null?  null  :  assign.getNext());  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getNext();  Node  lhs  =  assign  ==  null?  null  :  assign.getNext());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    null    :    assign.getNext();    Node  lhs  =  assign  ==  null?  null  :  assign.getNext());	  	non-compiled	[CE]  ';'  expected	110	None	add
1168	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.cloneTree()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.cloneTree()  :  null;	  Node    lhs    =    assign.cloneTree();    	compilable	  [FE]  NullPointerException  	161	2	replace
1169	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.cloneTree()  :  null;  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.cloneTree()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.cloneTree()  :  null;	  Node    lhs    =    assign.cloneTree();    	compilable	  [FE]  NullPointerException  	161	2	replace
1170	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  lhs  =  assigned!=  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  lhs  =  assigned!=  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    Node  lhs  =  assigned!=  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	81	None	add
1171	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  lhs  =  assign  >=  null?  assign.getNext()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getNext()  :  null;  Node  lhs  =  assign  >=  null?  assign.getNext()  :  null;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getNext()    :    null;    Node  lhs  =  assign  >=  null?  assign.getNext()  :  null;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	81	None	add
1172	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    >>    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	166	None	replace
1173	[BUG]  [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]                  IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  assign  =  assign.getFirstChild();  Preconditions.checkState(assign.getFirstChild()  ==  null);	  Node    lhs    =    assign.getLastChild();    Node    lhs    =    assign.getLastChild();    Preconditions.checkState(assign.getFirstChild()    ==    null);    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	142	None	replace
1174	[BUG]  [BUGGY]  Result:  function  f(a)  {  var  b=1!=  assign.getLastChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  {  var  b=1!=  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  {  var  b=1!=  assign.getLastChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	79	None	replace
1175	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  assign.getLastChild()  :  assign.getFirstChild  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  assign.getLastChild()  :  assign.getFirstChild  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  >>  assign.getLastChild()  :  assign.getFirstChild	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	79	None	replace
1176	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  assign.getLastChild()  :  assign.getFirstChild  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  assign.getLastChild()  :  assign.getFirstChild  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1!=  assign.getLastChild()  :  assign.getFirstChild	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	79	None	replace
1177	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  assign.getLastChild()  :  assign.getFirstChild  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  assign.getLastChild()  :  assign.getFirstChild  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  assign.getLastChild()  :  assign.getFirstChild	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1!=    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  not  a  statement	79	None	replace
1178	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign;  Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getLastChild()    :    assign;    Node  lhs  =  assignment!=  null?  assign.getLastChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	177	None	add
1179	[BUG]  [BUGGY]  c  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  cannot  find  symbol  c  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  c  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	c  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Node    c    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  c	74	None	replace
1180	[BUG]  [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  alloc  [FE]                      NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getFirstChild();  Preconditions.checkState(alloc.getType()  ==  Token.NAME);	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  alloc	72	None	replace
1181	[BUG]  [BUGGY]  Result:  function  f(a)  ==  var  b=1!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Result:  function  f(a)  ==  var  b=1!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Result:  function  f(a)  ==  var  b=1!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Result:    function    f(a)    {    var    b=1!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  not  a  statement	181	None	replace
1182	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
1183	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.isVar());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.isVar());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
1184	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
1185	[BUG]  [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.getType()  ==  Token.CALL);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.cloneTree();  Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.getType()  ==  Token.CALL);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign.cloneTree();    Node  lhs  =  assign.cloneTree();  Preconditions.checkState(assign.getType()  ==  Token.CALL);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	160	None	add
1186	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  as.removeLastChild();  [CE]  cannot  find  symbol  as  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  as.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  as.removeLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol  as	180	None	replace
1187	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  parent.removeLastChild();  [CE]  cannot  find  symbol  parent  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  parent.removeLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  parent.removeLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol  parent	180	None	replace
1188	[BUG]  [BUGGY]  Preconditions.checkState(ac.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  ac  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(ac.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(ac.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  ac	123	None	replace
1189	[BUG]  [BUGGY]  Preconditions.checkState(alloc.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  alloc  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(alloc.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(alloc.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(a.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  alloc	123	None	replace
1190	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	78	None	replace
1191	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getFirstChild()  :  assign.getFirstChild();  Result:  function  f(a)  {  var  b=1  }	  Node    lhs    =    assign    ==    null?    assign.getLastChild()    :    assign.getFirstChild();    Result:    function    f(a)    {    var    b=1    }    	non-compiled	[CE]  not  a  statement	78	None	replace
1192	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  variable  assign  is  already  defined  in  method  applyCollapses()  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  assign  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    Node    assign    =    assign!=    null?    assign.getFirstChild()    :    assign.getLastChild();    	non-compiled	[CE]  variable  assign  is  already  defined  in  method  applyCollapses()	104	None	replace
1193	[BUG]  [BUGGY]  Node  lhs  =  next.nextChild();  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  next.nextChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  next.nextChild();	  Node    lhs    =    assign.nextChild();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1194	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assignment  ==  null?  assign.removeFirstChild()  :  assign;  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    IllegalStateException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign  ==  null?  assign.removeFirstChild()  :  assign;  Node  lhs  =  assignment  ==  null?  assign.removeFirstChild()  :  assign;  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign    ==    null?    assign.removeFirstChild()    :    assign;    Node  lhs  =  assignment  ==  null?  assign.removeFirstChild()  :  assign;	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	194	None	add
1195	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  Node  assign!=  null?  assign.getFirstChild()  :  assign.getNext();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    assign.getFirstChild()    :    assign.getNext();    Node  assign!=  null?  assign.getFirstChild()  :  assign.getNext();	  	non-compiled	[CE]  ';'  expected	85	None	add
1196	[BUG]  [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null? " "  :  assign.getFirstChild();  [CE]  incompatible  types  [FE]                  NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null? " "  :  assign.getFirstChild();  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Preconditions.checkState(assign!=  null);  Node  lhs  =  assign!=  null? " "  :  assign.getFirstChild();	  Node    lhs    =    assign!=    null?    null    :    assign.getFirstChild();    Node    lhs    =    assign    >>    null?    null    :    assign.getFirstChild();    	non-compiled	[CE]  incompatible  types	92	None	replace
1197	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.isVar());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.isVar());    	compilable	  [FE]  IllegalStateException  	71	2	replace
1198	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.isVar());  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.isVar());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();  Preconditions.checkState(assign.isVar());	  Node    lhs    =    assign.getNext();    Node    lhs    =    assign.getNext();    Preconditions.checkState(lhs.isVar());    	compilable	  [FE]  IllegalStateException  	71	2	replace
1199	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]    NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	add
1200	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]      NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	add
1201	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]        NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.VAR);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	add
1202	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  preconditions.checkState(assign.hasChildren());  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]          NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  preconditions.checkState(assign.hasChildren());  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  preconditions.checkState(assign.hasChildren());	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	add
1203	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [CE]  variable  lhs  is  already  defined  in  method  applyCollapses()  [FE]            NullPointerException    [CONTEXT]      if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();      [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node    lhs    =    assign!=    null?    null    :    assign.getLastChild();    Node  lhs  =  assign!=  null?  null  :  assign.getLastChild();  Preconditions.checkState(assign.getType()  ==  Token.NAME);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  applyCollapses()	13	None	add
