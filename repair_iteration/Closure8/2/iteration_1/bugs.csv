bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign.getLastChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getLastChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  IllegalStateException  	3	2	replace
2	[BUG]  [BUGGY]  Node  lhs  =  assign.getLastChild();  [FE]  IllegalStateException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign.getLastChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getLastChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  IllegalStateException  	3	2	replace
3	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign.getNext();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getNext();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  NullPointerException  	3	2	replace
4	[BUG]  [BUGGY]  Node  lhs  =  assign.getNext();  [FE]  NullPointerException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign.getNext();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getNext();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  NullPointerException  	3	2	replace
5	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	3	1	replace
6	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  null  :  assign.getFirstChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	3	1	replace
7	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  IllegalStateException  	3	2	replace
8	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [FE]  IllegalStateException  [FE]          junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  IllegalStateException  	3	2	replace
9	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  IllegalStateException  	3	2	replace
10	[BUG]  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [FE]  IllegalStateException  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.getType()  ==  Token.VAR?  assign.getLastChild()  :  assign;	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  IllegalStateException  	3	2	replace
11	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign.removeFirstChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  IllegalStateException  	3	2	replace
12	[BUG]  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  [FE]  IllegalStateException  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign.removeFirstChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign.removeFirstChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  IllegalStateException  	3	2	replace
13	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  lhs  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]    [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	  	Node  lhs  =  assign.getFirstChild();  	non-compiled	[CE]  cannot  find  symbol  lhs	3	None	replace
14	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	3	1	replace
15	[BUG]  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign  ==  null?  assign.getLastChild()  :  assign.getFirstChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	3	1	replace
16	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  NullPointerException  	3	2	replace
17	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [FE]  NullPointerException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  null  :  assign.getFirstChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  NullPointerException  	3	2	replace
18	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	add	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	3	1	replace
19	[BUG]  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  [CONTEXT]  if  (n.isVar())  {  while(n.hasChildren())  {  var.addChildToBack(n.removeFirstChild());  }  }  else  {  Node  assign  =  n.getFirstChild();  [BUGGY]  Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]  Preconditions.checkState(lhs.isName());  Node  rhs  =  assign.getLastChild();  lhs.addChildToBack(rhs.detachFromParent());  var.addChildToBack(lhs.detachFromParent());  redeclaration  =  true;  }  [CLASS]  CollapseVariableDeclarations  Collapse  GatherCollapses  [METHOD]  applyCollapses  [RETURN_TYPE]  void  [VARIABLES]  Collapse  collapse  AbstractCompiler  compiler  Set  blacklistedVars  nodesToCollapse  boolean  redeclaration  Node  assign  child  endNode  externs  lhs  n  next  parent  rhs  root  startNode  var  varNode  List  collapses  JSDocInfo  info  	projects/Closure8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	0.7071067811865475	229	229	1	replace	Node  lhs  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	Node  lhs  =  assign.getFirstChild();  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  f(a){var  b=1;a=2;var  c}  Result:  function  f(a){var  b=1  	3	1	replace
