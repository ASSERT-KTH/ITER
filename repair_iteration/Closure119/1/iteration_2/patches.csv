bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  2);  v  =  externsScope.getVar(name  +  2);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	v    =    externsScope.getVar(name    +    2);    v  =  externsScope.getVar(name  +  2);	  	compilable	  [FE]  AssertionFailedError  	61	1	add
2	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  2);  v  =  externsScope.getVar(name  +  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  2);  v  =  externsScope.getVar(name  +  2);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    2);    v  =  externsScope.getVar(name  +  2);	  	compilable	  [FE]  AssertionFailedError  	61	1	add
3	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  2);  VAR  v  =  externsScope.getVar(name  +  2);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  2);  VAR  v  =  externsScope.getVar(name  +  2);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    2);    VAR  v  =  externsScope.getVar(name  +  2);	  	non-compiled	[CE]  cannot  find  symbol	61	None	add
4	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  2);  inExterns  =  externsScope.getVar(name  +  2);  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  2);  inExterns  =  externsScope.getVar(name  +  2);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    2);    inExterns  =  externsScope.getVar(name  +  2);	  	non-compiled	[CE]  incompatible  types	61	None	add
5	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  2);  v  =  externalsScope.getVar(name  +  2);  [CE]  cannot  find  symbol  externalsScope  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  2);  v  =  externalsScope.getVar(name  +  2);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    2);    v  =  externalsScope.getVar(name  +  2);	  	non-compiled	[CE]  cannot  find  symbol  externalsScope	61	None	add
6	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkNotNull(v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);    Preconditions.checkNotNull(v);	  	compilable	  [FE]  RuntimeException  	28	13	add
7	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkNotNull(v);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkNotNull(v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);    Preconditions.checkNotNull(v);	  	compilable	  [FE]  RuntimeException  	28	13	add
8	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);    Preconditions.checkState(v!=  null);	  	compilable	  [FE]  RuntimeException  	28	13	add
9	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(v!=  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);    Preconditions.checkState(v!=  null);	  	compilable	  [FE]  RuntimeException  	28	13	add
10	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);    Preconditions.checkState(v  ==  null);	  	compilable	  [FE]  RuntimeException  	28	13	add
11	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(v  ==  null);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);    Preconditions.checkState(v  ==  null);	  	compilable	  [FE]  RuntimeException  	28	13	add
12	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v);  [CE]  no  suitable  method  found  for  checkArgument(Var)  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);    Preconditions.checkArgument(v);	  	non-compiled	[CE]  no  suitable  method  found  for  checkArgument(Var)	28	None	add
13	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(v);  [CE]  no  suitable  method  found  for  checkState(Var)  [FE]            RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);    Preconditions.checkState(v);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Var)	28	None	add
14	[BUG]  [BUGGY]  v  =  externsScope.getVar(name)/  4;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name)/  4;  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name)/  4;	  v    =    externsScope.getVar(name)+    4;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	33	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.GETPROP,  v);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.GETPROP,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.GETPROP,  v);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    name);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  name);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  name);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    name);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name,  s);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name,  s);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name,  s);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	25	None	replace
18	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.GETPROP,  name);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.GETPROP,  name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.GETPROP,  name);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    name);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name,  externsScope);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name,  externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name,  externsScope);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	25	None	replace
20	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s,  v).reference();  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s,  v).reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s,  v).reference();	  v    =    externsScope.getVar(name,    s).reference();    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	46	None	replace
21	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s,  v.reference());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s,  v.reference());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s,  v.reference());	  v    =    externsScope.getVar(name,    s).reference();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null,  s.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(externsScope!=  null,  s.getVar(name));	  Preconditions.checkState(v!=    null,    externsScope.getVar(name));    	compilable	  [FE]  AssertionFailedError  	101	4	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(externsScope!=  null,  s.getVar(name));  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null,  s.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope!=  null,  s.getVar(name));	  Preconditions.checkState(v!=    null,    externsScope.getVar(name));    	compilable	  [FE]  AssertionFailedError  	101	4	replace
24	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  s.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null,  s.getVar(name));	  Preconditions.checkState(v!=    null,    externsScope.getVar(name));    	compilable	  [FE]  RuntimeException  	101	13	replace
25	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null,  s.getVar(name));  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  s.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null,  s.getVar(name));	  Preconditions.checkState(v!=    null,    externsScope.getVar(name));    	compilable	  [FE]  RuntimeException  	101	13	replace
26	[BUG]  [BUGGY]  Preconditions.checkState(externsScope!=  null,  scope.getVar(name));  [CE]  cannot  find  symbol  scope  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null,  scope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope!=  null,  scope.getVar(name));	  Preconditions.checkState(v!=    null,    externsScope.getVar(name));    	non-compiled	[CE]  cannot  find  symbol  scope	101	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null,  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(externsScope!=  null,  externsScope.getVar(name));	  Preconditions.checkState(v!=    null,    externsScope.getVar(name));    	compilable	  [FE]  AssertionFailedError  	101	4	replace
28	[BUG]  [BUGGY]  Preconditions.checkState(externsScope!=  null,  externsScope.getVar(name));  [FE]  AssertionFailedError  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null,  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope!=  null,  externsScope.getVar(name));	  Preconditions.checkState(v!=    null,    externsScope.getVar(name));    	compilable	  [FE]  AssertionFailedError  	101	4	replace
29	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.VAR,  v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.VAR,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.VAR,  v);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR,  name);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR,  name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR,  name);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
31	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  name,  s);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  name,  s);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR,  name,  s);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	57	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.VAR);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  v.name);  [CE]  incomparable  types:  JSType  and  int  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  v.name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR,  v.name);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	57	None	replace
34	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(externsScope  ==  null);	  Preconditions.checkState(v    ==    null);    	compilable	  [FE]  RuntimeException  	12	13	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(externsScope  ==  null);  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope  ==  null);	  Preconditions.checkState(v    ==    null);    	compilable	  [FE]  RuntimeException  	12	13	replace
36	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  &&  v.getType()  ==  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  &&  v.getType()  ==  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  &&  v.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP    ||    v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	26	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.GETPROP  &&  v.getType()  ==  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.GETPROP  &&  v.getType()  ==  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.GETPROP  &&  v.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP    ||    v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	26	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  ||  v.getType()!=  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  ||  v.getType()!=  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  ||  v.getType()!=  Token.GETPROP);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP    ||    v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	26	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.GETPROP  ||  v.getType()  ==  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.GETPROP  ||  v.getType()  ==  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.GETPROP  ||  v.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP    ||    v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	26	None	replace
40	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);	  	compilable	  [FE]  RuntimeException  	3	13	add
41	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);	  	compilable	  [FE]  RuntimeException  	3	13	add
42	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);	  	compilable	  [FE]  RuntimeException  	3	13	add
43	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);	  	compilable	  [FE]  RuntimeException  	3	13	add
44	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);	  	compilable	  [FE]  RuntimeException  	3	13	add
45	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);	  	compilable	  [FE]  RuntimeException  	3	13	add
46	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	3	None	add
47	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >>  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >>  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >>  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	3	None	add
48	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >=  null);  Preconditions.checkState(v!=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >=  null);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v!=    null);    Preconditions.checkState(v  >=  null);  Preconditions.checkState(v!=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	3	None	add
49	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1,  v,  s);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  1,  v,  s);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  1,  v,  s);	  v    =    externsScope.getVar(name    +    1,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	83	None	replace
50	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v  +  1,  s);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v  +  1,  s);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v  +  1,  s);	  v    =    externsScope.getVar(name    +    1,    v);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	83	None	replace
51	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v  +  1,  scope);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v  +  1,  scope);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v  +  1,  scope);	  v    =    externsScope.getVar(name    +    1,    v);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	83	None	replace
52	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1,  v,  scope);  [CE]  cannot  find  symbol  scope  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  1,  v,  scope);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  1,  v,  scope);	  v    =    externsScope.getVar(name    +    1,    v);    	non-compiled	[CE]  cannot  find  symbol  scope	83	None	replace
53	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(v!=  null);	          Preconditions.checkState(v!=    null);    Preconditions.checkState(v    [Delete]    null);    	compilable	  [FE]  RuntimeException  	10	13	replace
54	[BUG]  [BUGGY]  Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(v!=  null);  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(v!=  null);	          Preconditions.checkState(v!=    null);    Preconditions.checkState(v    [Delete]    null);    	compilable	  [FE]  RuntimeException  	10	13	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    RuntimeException      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(v  ==  null);	          Preconditions.checkState(v!=    null);    Preconditions.checkState(v    [Delete]    null);    	compilable	  [FE]  AssertionFailedError  	10	4	replace
56	[BUG]  [BUGGY]  Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(v  ==  null);  [FE]  AssertionFailedError  [FE]                    RuntimeException      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(v  ==  null);	          Preconditions.checkState(v!=    null);    Preconditions.checkState(v    [Delete]    null);    	compilable	  [FE]  AssertionFailedError  	10	4	replace
57	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrsScope);    	compilable	  [FE]  RuntimeException  	43	13	replace
58	[BUG]  [BUGGY]  Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(v);  [FE]  RuntimeException  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrsScope);    	compilable	  [FE]  RuntimeException  	43	13	replace
59	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkNotNull(v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null);  Preconditions.checkNotNull(v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrsScope);    	compilable	  [FE]  RuntimeException  	43	13	replace
60	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkNotNull(v);  [FE]  RuntimeException  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkNotNull(v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null);  Preconditions.checkNotNull(v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrsScope);    	compilable	  [FE]  RuntimeException  	43	13	replace
61	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null);  Preconditions.checkNotNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrsScope);    	compilable	  [FE]  RuntimeException  	43	13	replace
62	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkNotNull(externsScope);  [FE]  RuntimeException  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null);  Preconditions.checkNotNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrsScope);    	compilable	  [FE]  RuntimeException  	43	13	replace
63	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrsScope);    	compilable	  [FE]  RuntimeException  	43	13	replace
64	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(v);  [FE]  RuntimeException  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrsScope);    	compilable	  [FE]  RuntimeException  	43	13	replace
65	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  null);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  s,  null);	  v    =    externsScope.getVar(name,    v,    null);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	73	None	replace
66	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  null,  s);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  null,  s);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  null,  s);	  v    =    externsScope.getVar(name,    v,    null);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	73	None	replace
67	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  sourceName,  null);  [CE]  cannot  find  symbol  sourceName  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  sourceName,  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  sourceName,  null);	  v    =    externsScope.getVar(name,    v,    null);    	non-compiled	[CE]  cannot  find  symbol  sourceName	73	None	replace
68	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  sourceFile,  null);  [CE]  cannot  find  symbol  sourceFile  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  sourceFile,  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  sourceFile,  null);	  v    =    externsScope.getVar(name,    v,    null);    	non-compiled	[CE]  cannot  find  symbol  sourceFile	73	None	replace
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null  &&  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(externsScope!=  null  &&  externsScope!=  null);	  Preconditions.checkState(v!=    null    &&    externsScope!=    null);    	compilable	  [FE]  AssertionFailedError  	103	4	replace
70	[BUG]  [BUGGY]  Preconditions.checkState(externsScope!=  null  &&  externsScope!=  null);  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null  &&  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope!=  null  &&  externsScope!=  null);	  Preconditions.checkState(v!=    null    &&    externsScope!=    null);    	compilable	  [FE]  AssertionFailedError  	103	4	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null  &&  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v  ==  null  &&  externsScope!=  null);	  Preconditions.checkState(v!=    null    &&    externsScope!=    null);    	compilable	  [FE]  AssertionFailedError  	103	4	replace
72	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null  &&  externsScope!=  null);  [FE]  AssertionFailedError  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null  &&  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null  &&  externsScope!=  null);	  Preconditions.checkState(v!=    null    &&    externsScope!=    null);    	compilable	  [FE]  AssertionFailedError  	103	4	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  ||  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null  ||  externsScope!=  null);	  Preconditions.checkState(v!=    null    &&    externsScope!=    null);    	compilable	  [FE]  AssertionFailedError  	103	4	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  ||  externsScope!=  null);  [FE]  AssertionFailedError  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  ||  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  ||  externsScope!=  null);	  Preconditions.checkState(v!=    null    &&    externsScope!=    null);    	compilable	  [FE]  AssertionFailedError  	103	4	replace
75	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v    ==    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);	  	compilable	  [FE]  RuntimeException  	5	13	add
76	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v    ==    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);	  	compilable	  [FE]  RuntimeException  	5	13	add
77	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v    ==    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  ==  null);	  	compilable	  [FE]  RuntimeException  	5	13	add
78	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  ==  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v    ==    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  ==  null);	  	compilable	  [FE]  RuntimeException  	5	13	add
79	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  >=  null);  Preconditions.checkState(v  ==  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  >=  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v    ==    null);    Preconditions.checkState(v  >=  null);  Preconditions.checkState(v  ==  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	5	None	add
80	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  >>  null);  Preconditions.checkState(v  ==  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  >>  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v    ==    null);    Preconditions.checkState(v  >>  null);  Preconditions.checkState(v  ==  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	5	None	add
81	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v    ==    null);    Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	5	None	add
82	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.NAME);	  Preconditions.checkState(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	37	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.NAME);	  Preconditions.checkState(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	37	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.NAME);	  Preconditions.checkState(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	37	None	replace
85	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.NAME  ||  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.NAME  ||  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.NAME  ||  v.getType()  ==  Token.VAR);	  Preconditions.checkState(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	37	None	replace
86	[BUG]  [BUGGY]  Preconditions.checkState(externsScope.getType()!=  Token.VAR);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope.getType()!=  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope.getType()!=  Token.VAR);	  Preconditions.checkState(v.getType()!=    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
87	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(v.getType()!=    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	35	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	90	1	add
89	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope!=  null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	90	1	add
90	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	90	13	add
91	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope  ==  null);  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	90	13	add
92	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkNotNull(extrsScope);  Preconditions.checkArgument(externsScope!=  null);  [CE]  cannot  find  symbol  extrsScope  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkNotNull(extrsScope);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkNotNull(extrsScope);  Preconditions.checkArgument(externsScope!=  null);	  	non-compiled	[CE]  cannot  find  symbol  extrsScope	90	None	add
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	90	1	add
94	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	90	1	add
95	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  &&  v.length()  >  0);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  &&  v.length()  >  0);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  &&  v.length()  >  0);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    &&    name.length()    >    0);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  name.length()  >  0);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  name.length()  >  0);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  name.length()  >  0);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    &&    name.length()    >    0);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	17	None	replace
97	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  &&  name.length()  >  0);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  &&  name.length()  >  0);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  &&  name.length()  >  0);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    &&    name.length()    >    0);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION  &&  name.length()  >  0);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION  &&  name.length()  >  0);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION  &&  name.length()  >  0);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    &&    name.length()    >    0);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
99	[BUG]  [BUGGY]  Preconditions.checkState(externsScope.getType()  ==  Token.VAR,  v);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope.getType()  ==  Token.VAR,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope.getType()  ==  Token.VAR,  v);	  Preconditions.checkState(externsScope.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
100	[BUG]  [BUGGY]  Preconditions.checkState(scope.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  scope  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(scope.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(scope.getType()  ==  Token.VAR);	  Preconditions.checkState(externsScope.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  scope	34	None	replace
101	[BUG]  [BUGGY]  Preconditions.checkState(externsScope.getType()  ==  Token.VAR  ||  externsScope.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope.getType()  ==  Token.VAR  ||  externsScope.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope.getType()  ==  Token.VAR  ||  externsScope.getType()  ==  Token.VAR);	  Preconditions.checkState(externsScope.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
102	[BUG]  [BUGGY]  Preconditions.checkState(externsScope.getType()  ==  Token.VAR,  name);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope.getType()  ==  Token.VAR,  name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope.getType()  ==  Token.VAR,  name);	  Preconditions.checkState(externsScope.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
103	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  ||  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  ||  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  ||  v.getType()  ==  Token.VAR);	  Preconditions.checkState(v!=    null    &&    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	94	None	replace
104	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null  &&  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null  &&  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null  &&  v.getType()  ==  Token.VAR);	  Preconditions.checkState(v!=    null    &&    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	94	None	replace
105	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null  ||  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null  ||  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null  ||  v.getType()  ==  Token.VAR);	  Preconditions.checkState(v!=    null    &&    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	94	None	replace
106	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  &&  externsScope.getType()  ==  Token.VAR);	  Preconditions.checkState(v!=    null    &&    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
107	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);  Preconditions.checkNotNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);    preconditions.checkNotNull(externsScope);    	compilable	  [FE]  RuntimeException  	89	13	replace
108	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkNotNull(externsScope);  [FE]  RuntimeException  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);  Preconditions.checkNotNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);    preconditions.checkNotNull(externsScope);    	compilable	  [FE]  RuntimeException  	89	13	replace
109	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  preconditions.checkNotNull(externsScope);  [CE]  cannot  find  symbol  preconditions  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);  preconditions.checkNotNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);    preconditions.checkNotNull(externsScope);    	non-compiled	[CE]  cannot  find  symbol  preconditions	89	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);    preconditions.checkNotNull(externsScope);    	compilable	  [FE]  AssertionFailedError  	89	4	replace
111	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(externsScope);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);    preconditions.checkNotNull(externsScope);    	compilable	  [FE]  AssertionFailedError  	89	4	replace
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);	  	compilable	  [FE]  AssertionFailedError  	38	1	add
113	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);	  	compilable	  [FE]  AssertionFailedError  	38	1	add
114	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(extrsScope);  Preconditions.checkNotNull(externsScope);  [CE]  cannot  find  symbol  extrsScope  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(extrsScope);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrsScope);  Preconditions.checkNotNull(externsScope);	  	non-compiled	[CE]  cannot  find  symbol  extrsScope	38	None	add
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);	  	compilable	  [FE]  AssertionFailedError  	38	1	add
116	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);	  	compilable	  [FE]  AssertionFailedError  	38	1	add
117	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(v);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(v);  Preconditions.checkNotNull(externsScope);	  	compilable	  [FE]  RuntimeException  	38	13	add
118	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(v);  Preconditions.checkNotNull(externsScope);  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(v);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(v);  Preconditions.checkNotNull(externsScope);	  	compilable	  [FE]  RuntimeException  	38	13	add
119	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(extendsScope);  Preconditions.checkNotNull(externsScope);  [CE]  cannot  find  symbol  extendsScope  [FE]            AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(extendsScope);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extendsScope);  Preconditions.checkNotNull(externsScope);	  	non-compiled	[CE]  cannot  find  symbol  extendsScope	38	None	add
120	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(n);  Preconditions.checkNotNull(n);  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(n);  Preconditions.checkNotNull(n);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(n);  Preconditions.checkNotNull(n);	  	non-compiled	[CE]  cannot  find  symbol  n	38	None	add
121	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);	  	compilable	  [FE]  RuntimeException  	92	4	add
122	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);	  	compilable	  [FE]  RuntimeException  	92	4	add
123	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);	  	compilable	  [FE]  RuntimeException  	92	4	add
124	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);	  	compilable	  [FE]  RuntimeException  	92	4	add
125	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)  ==  null);	  	compilable	  [FE]  RuntimeException  	92	13	add
126	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)  ==  null);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)  ==  null);	  	compilable	  [FE]  RuntimeException  	92	13	add
127	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkNotNull(extrsScope);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [CE]  cannot  find  symbol  extrsScope  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkNotNull(extrsScope);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkNotNull(extrsScope);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);	  	non-compiled	[CE]  cannot  find  symbol  extrsScope	92	None	add
128	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)  >=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	92	None	add
129	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION,  v);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION,  v);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION,    name);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
130	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION,  name);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION,  name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION,  name);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION,    name);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
131	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION,    name);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name,  s);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name,  s);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name,  s);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
133	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name,  externsScope);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name,  externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name,  externsScope);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
134	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v!=    null);    Preconditions.checkArgument(v!=  null);	  	compilable	  [FE]  RuntimeException  	13	13	add
135	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v!=  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=    null);    Preconditions.checkArgument(v!=  null);	  	compilable	  [FE]  RuntimeException  	13	13	add
136	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v!=    null);    Preconditions.checkArgument(v  ==  null);	  	compilable	  [FE]  RuntimeException  	13	13	add
137	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v  ==  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=    null);    Preconditions.checkArgument(v  ==  null);	  	compilable	  [FE]  RuntimeException  	13	13	add
138	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v  >=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=    null);    Preconditions.checkArgument(v  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	13	None	add
139	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v  >>  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v  >>  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=    null);    Preconditions.checkArgument(v  >>  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	13	None	add
140	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v  [BUGGY]  null);  [CE]  ')'  expected  [FE]            RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v  [BUGGY]  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=    null);    Preconditions.checkArgument(v  [BUGGY]  null);	  	non-compiled	[CE]  ')'  expected	13	None	add
141	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v  [Delete]  null);  [CE]  ')'  expected  [FE]              RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v  [Delete]  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=    null);    Preconditions.checkArgument(v  [Delete]  null);	  	non-compiled	[CE]  ')'  expected	13	None	add
142	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope    ==    null);    	compilable	  [FE]  RuntimeException  	113	13	replace
143	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope!=  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope    ==    null);    	compilable	  [FE]  RuntimeException  	113	13	replace
144	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope  ==  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope    ==    null);    	compilable	  [FE]  RuntimeException  	113	13	replace
145	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope  ==  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope  ==  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope    ==    null);    	compilable	  [FE]  RuntimeException  	113	13	replace
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkState(externsScope!=    null);    Preconditions.checkState(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
147	[BUG]  [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(externsScope!=    null);    Preconditions.checkState(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
148	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkState(externsScope!=    null);    Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	1	13	add
149	[BUG]  [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  ==  null);  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(externsScope!=    null);    Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	1	13	add
150	[BUG]  [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  >=  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(externsScope!=    null);    Preconditions.checkState(externsScope  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	1	None	add
151	[BUG]  [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  >>  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  >>  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(externsScope!=    null);    Preconditions.checkState(externsScope  >>  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	1	None	add
152	[BUG]  [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  [BUGGY]  null);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  [BUGGY]  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(externsScope!=    null);    Preconditions.checkState(externsScope  [BUGGY]  null);	  	non-compiled	[CE]  ')'  expected	1	None	add
153	[BUG]  [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  [Delete]  null);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  [Delete]  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(externsScope!=    null);    Preconditions.checkState(externsScope  [Delete]  null);	  	non-compiled	[CE]  ')'  expected	1	None	add
154	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.NAME,  v);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.NAME,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.NAME,  v);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
155	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.NAME);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
156	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  name);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  name);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
157	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
158	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.VAR);	  Preconditions.checkState(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	108	None	replace
159	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.VAR);	  Preconditions.checkState(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	108	None	replace
160	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.VAR);	  Preconditions.checkState(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	108	None	replace
161	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()!=  Token.NAME,  v);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()!=  Token.NAME,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()!=  Token.NAME,  v);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
162	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Preconditions.checkArgument(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkArgument(v.isGlobal());    Preconditions.checkArgument(v.isGlobal());	  	compilable	  [FE]  RuntimeException  	98	13	add
163	[BUG]  [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Preconditions.checkArgument(v.isGlobal());  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Preconditions.checkArgument(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkArgument(v.isGlobal());    Preconditions.checkArgument(v.isGlobal());	  	compilable	  [FE]  RuntimeException  	98	13	add
164	[BUG]  [BUGGY]          Preconditions.checkArgument(v.isGlobal());  preconditions.checkArgument(v.isGlobal());  [CE]  cannot  find  symbol  preconditions  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkArgument(v.isGlobal());  preconditions.checkArgument(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkArgument(v.isGlobal());    preconditions.checkArgument(v.isGlobal());	  	non-compiled	[CE]  cannot  find  symbol  preconditions	98	None	add
165	[BUG]  [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Context.checkArgument(v.isGlobal());  [CE]  cannot  find  symbol  Context  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Context.checkArgument(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkArgument(v.isGlobal());    Context.checkArgument(v.isGlobal());	  	non-compiled	[CE]  cannot  find  symbol  Context	98	None	add
166	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	112	13	add
167	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	112	13	add
168	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);	  	compilable	  [FE]  RuntimeException  	112	13	add
169	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);	  	compilable	  [FE]  RuntimeException  	112	13	add
170	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkState(externsScope  ==  null);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	112	13	add
171	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkState(externsScope  ==  null);  Preconditions.checkState(externsScope  ==  null);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkState(externsScope  ==  null);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	112	13	add
172	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	112	13	add
173	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  ==  null);  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	112	13	add
174	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(extrsScope);  Preconditions.checkState(externsScope  ==  null);  [CE]  cannot  find  symbol  extrsScope  [FE]            RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(extrsScope);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkNotNull(extrsScope);  Preconditions.checkState(externsScope  ==  null);	  	non-compiled	[CE]  cannot  find  symbol  extrsScope	112	None	add
175	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	112	13	add
176	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope  ==  null);  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkNotNull(v);  Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	112	13	add
177	[BUG]  [BUGGY]  JSModule  module  =  v,  scope.getModule();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  JSModule  module  =  v,  scope.getModule();  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	JSModule  module  =  v,  scope.getModule();	  JSModule    module    =    s,    scope.getModule();    	non-compiled	[CE]  ';'  expected	52	None	replace
178	[BUG]  [BUGGY]  JSModule  module  =  v.getModule();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  JSModule  module  =  v.getModule();  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	JSModule  module  =  v.getModule();	  JSModule    module    =    s,    scope.getModule();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
179	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR,  name);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR,  name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.VAR,  name);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR,    v);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	77	None	replace
180	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  this,  s);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  this,  s);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  this,  s);	  v    =    externsScope.getVar(name,    v,    this);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	75	None	replace
181	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  sourceName,  this);  [CE]  cannot  find  symbol  sourceName  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  sourceName,  this);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  sourceName,  this);	  v    =    externsScope.getVar(name,    v,    this);    	non-compiled	[CE]  cannot  find  symbol  sourceName	75	None	replace
182	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  null,  this);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  null,  this);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  null,  this);	  v    =    externsScope.getVar(name,    v,    this);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	75	None	replace
183	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkEquals(externsScope,  v);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkEquals(externsScope,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);  Preconditions.checkEquals(externsScope,  v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkEquals(externsScope,    v);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
184	[BUG]  [BUGGY]  Preconditions.checkEquals(v,  externsScope);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkEquals(v,  externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkEquals(v,  externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkEquals(externsScope,    v);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
185	[BUG]  [BUGGY]  Preconditions.checkState(externsScope!=  null);  Preconditions.checkEquals(v,  externsScope);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null);  Preconditions.checkEquals(v,  externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope!=  null);  Preconditions.checkEquals(v,  externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkEquals(externsScope,    v);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
186	[BUG]  [BUGGY]  Preconditions.checkEquals(externsScope,  v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkEquals(externsScope,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkEquals(externsScope,  v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkEquals(externsScope,    v);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
187	[BUG]  [BUGGY]  Preconditions.checkState(v!=  externsScope);  Preconditions.checkEquals(externsScope,  v);  [CE]  incomparable  types:  Var  and  Scope  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  externsScope);  Preconditions.checkEquals(externsScope,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  externsScope);  Preconditions.checkEquals(externsScope,  v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkEquals(externsScope,    v);    	non-compiled	[CE]  incomparable  types:  Var  and  Scope	114	None	replace
188	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  v.getType()  ==  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  v.getType()  ==  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  v.getType()  ==  Token.NAME);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	111	None	replace
189	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()!=  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()!=  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()!=  Token.NAME);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	111	None	replace
190	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  ||  v.getType()  ==  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  ||  v.getType()  ==  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  ||  v.getType()  ==  Token.NAME);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	111	None	replace
191	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.NAME,  name);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.NAME,  name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.NAME,  name);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	111	None	replace
192	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=    null);    	compilable	  [FE]  RuntimeException  	93	13	replace
193	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=    null);    	compilable	  [FE]  RuntimeException  	93	13	replace
194	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=    null);    	compilable	  [FE]  RuntimeException  	93	13	replace
195	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=    null);    	compilable	  [FE]  RuntimeException  	93	13	replace
196	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v  ==  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=    null);    	compilable	  [FE]  RuntimeException  	93	5	replace
197	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=    null);    	compilable	  [FE]  RuntimeException  	93	5	replace
198	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(externsScope.getVar(name)!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=    null);    	compilable	  [FE]  RuntimeException  	93	5	replace
199	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getVar(name)!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=    null);    	compilable	  [FE]  RuntimeException  	93	5	replace
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getVar(name)  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(externsScope.getVar(name)  ==  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=    null);    	compilable	  [FE]  AssertionFailedError  	93	12	replace
201	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getVar(name)  ==  null);  [FE]  AssertionFailedError  [FE]            RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getVar(name)  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getVar(name)  ==  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=    null);    	compilable	  [FE]  AssertionFailedError  	93	12	replace
202	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()!=  Token.NAME);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()!=  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()!=  Token.NAME);	  Preconditions.checkArgument(v.getType()!=    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
203	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()!=  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()!=  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()!=  Token.NAME);	  Preconditions.checkArgument(v.getType()!=    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	105	None	replace
204	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);    	compilable	  [FE]  RuntimeException  	39	13	replace
205	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null);  Preconditions.checkState(v!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);    	compilable	  [FE]  RuntimeException  	39	13	replace
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	v        =        externsScope.getVar(name        +        1);        v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
207	[BUG]  [BUGGY]  v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v        =        externsScope.getVar(name        +        1);        v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
208	[BUG]  [BUGGY]  v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);  VAR  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);  VAR  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v        =        externsScope.getVar(name        +        1);        v    =    externsScope.getVar(name    +    1);    VAR  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
209	[BUG]  [BUGGY]  v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);  v  =  externalsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  [CE]  cannot  find  symbol  externalsScope  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);  v  =  externalsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v        =        externsScope.getVar(name        +        1);        v    =    externsScope.getVar(name    +    1);    v  =  externalsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);	  	non-compiled	[CE]  cannot  find  symbol  externalsScope	19	None	add
210	[BUG]  [BUGGY]  Preconditions.checkArgument(sourceName.getType()  ==  Token.NAME,  v);  [CE]  cannot  find  symbol  sourceName  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(sourceName.getType()  ==  Token.NAME,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(sourceName.getType()  ==  Token.NAME,  v);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  sourceName	50	None	replace
211	[BUG]  [BUGGY]  Preconditions.checkArgument(sourceName.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  sourceName  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(sourceName.getType()  ==  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(sourceName.getType()  ==  Token.NAME);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  sourceName	50	None	replace
212	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v.getVar(name));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v.getVar(name));	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    externsScope.getVar(name));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
213	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v.getName());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    externsScope.getVar(name));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
214	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  externsScope.getVar(name),  v);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  externsScope.getVar(name),  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  externsScope.getVar(name),  v);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    externsScope.getVar(name));    	non-compiled	[CE]  incomparable  types:  JSType  and  int	86	None	replace
215	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v.getValue());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v.getValue());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v.getValue());	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    externsScope.getVar(name));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
216	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	117	None	replace
217	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.GETPROP);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	117	None	replace
218	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	117	None	replace
219	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	117	None	replace
220	[BUG]  [BUGGY]  v  =  s.getVar(name),  externsScope.reference();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  s.getVar(name),  externsScope.reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  s.getVar(name),  externsScope.reference();	  v    =    externsScope.getVar(name),    s.reference();    	non-compiled	[CE]  ';'  expected	45	None	replace
221	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s.reference());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s.reference());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s.reference());	  v    =    externsScope.getVar(name),    s.reference();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
222	[BUG]  [BUGGY]  v  =  s.reference();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  s.reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  s.reference();	  v    =    externsScope.getVar(name),    s.reference();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
223	[BUG]  [BUGGY]  v  =  externsScope.getVar(name)/  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name)/  2;  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name)/  2;	  v    =    externsScope.getVar(name)/    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	32	None	replace
224	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v)/  1;  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v)/  1;  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v)/  1;	  v    =    externsScope.getVar(name)/    1;    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	32	None	replace
225	[BUG]  [BUGGY]  v  =  externsScope.getVar(name)/  3;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name)/  3;  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name)/  3;	  v    =    externsScope.getVar(name)/    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	32	None	replace
226	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v.reference());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v.reference());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v.reference());	  v    =    externsScope.getVar(name),    v.reference();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
227	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v.reference();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v.reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v.reference();	  v    =    externsScope.getVar(name),    v.reference();    	non-compiled	[CE]  ')'  expected	69	None	replace
228	[BUG]  [BUGGY]  v  =  externsScope.getVar(name),  v.toString();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name),  v.toString();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name),  v.toString();	  v    =    externsScope.getVar(name),    v.reference();    	non-compiled	[CE]  ';'  expected	69	None	replace
229	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name,  v.name);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name,  v.name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name,  v.name);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	49	None	replace
230	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.NAME,  v.name);  [CE]  incomparable  types:  JSType  and  int  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.NAME,  v.name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.NAME,  v.name);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	49	None	replace
231	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.NAME,  v.name);  [CE]  incomparable  types:  JSType  and  int  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.NAME,  v.name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.NAME,  v.name);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	49	None	replace
232	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.VAR);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	60	None	replace
233	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.VAR);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	60	None	replace
234	[BUG]  [BUGGY]  Preconditions.checkState(externsScope  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope  >=  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope  >=  null);	          Preconditions.checkState(externsScope!=    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	2	None	replace
235	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name,  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	107	None	replace
236	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.GETPROP,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.GETPROP,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.GETPROP,  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	107	None	replace
237	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	107	None	replace
238	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  &&  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  &&  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  &&  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	107	None	replace
239	[BUG]  [BUGGY]  ||  externsScope!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  ||  externsScope!=  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	||  externsScope!=  null)  {  return  false;  }	          if(externsScope!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
240	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  if(v  ==  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	if(v  ==  null)  {  return  false;  }	          if(externsScope!=    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	81	4	replace
241	[BUG]  [BUGGY]  if(v  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  if(v  ==  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	if(v  ==  null)  {  return  false;  }	          if(externsScope!=    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	81	4	replace
242	[BUG]  [BUGGY]  ||  externsScope  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  ||  externsScope  ==  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	||  externsScope  ==  null)  {  return  false;  }	          if(externsScope!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  if(v!=  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	if(v!=  null)  {  return  false;  }	          if(externsScope!=    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	81	4	replace
244	[BUG]  [BUGGY]  if(v!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  if(v!=  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	if(v!=  null)  {  return  false;  }	          if(externsScope!=    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	81	4	replace
245	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  v);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  v);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
246	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP  ||  externsScope.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP  ||  externsScope.getType()  ==  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP  ||  externsScope.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          if(externsScope!=  null)  {  return  false;  }  if(externsScope!=  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                if(externsScope!=    null)    {    return    false;    }    if(externsScope!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	80	4	add
248	[BUG]  [BUGGY]          if(externsScope!=  null)  {  return  false;  }  if(externsScope!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          if(externsScope!=  null)  {  return  false;  }  if(externsScope!=  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                if(externsScope!=    null)    {    return    false;    }    if(externsScope!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	80	4	add
249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          if(externsScope!=  null)  {  return  false;  }  if(externsScope  ==  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                if(externsScope!=    null)    {    return    false;    }    if(externsScope  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	80	4	add
250	[BUG]  [BUGGY]          if(externsScope!=  null)  {  return  false;  }  if(externsScope  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          if(externsScope!=  null)  {  return  false;  }  if(externsScope  ==  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                if(externsScope!=    null)    {    return    false;    }    if(externsScope  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	80	4	add
251	[BUG]  [BUGGY]          if(externsScope!=  null)  {  return  false;  }  If(externsScope!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          if(externsScope!=  null)  {  return  false;  }  If(externsScope!=  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                if(externsScope!=    null)    {    return    false;    }    If(externsScope!=  null)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	80	None	add
252	[BUG]  [BUGGY]          if(externsScope!=  null)  {  return  false;  }  if(externsScope  >=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          if(externsScope!=  null)  {  return  false;  }  if(externsScope  >=  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                if(externsScope!=    null)    {    return    false;    }    if(externsScope  >=  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	80	None	add
253	[BUG]  [BUGGY]          if(externsScope!=  null)  {  return  false;  }  if(externsScope  >>  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          if(externsScope!=  null)  {  return  false;  }  if(externsScope  >>  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                if(externsScope!=    null)    {    return    false;    }    if(externsScope  >>  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	80	None	add
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);	  	compilable	  [FE]  AssertionFailedError  	87	1	add
255	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);	  	compilable	  [FE]  AssertionFailedError  	87	1	add
256	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(extrsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [CE]  cannot  find  symbol  extrsScope  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(extrsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);	  	non-compiled	[CE]  cannot  find  symbol  extrsScope	87	None	add
257	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkNonNull(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkNonNull(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);    Preconditions.checkNonNull(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
258	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v  *  1);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v  *  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v  *  1);	  v    =    externsScope.getVar(name,    v    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	65	None	replace
259	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  ||!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null  ||!v.isGlobal());	  Preconditions.checkState(v!=    null    &&!v.isGlobal());    	compilable	  [FE]  RuntimeException  	67	13	replace
260	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  ||!v.isGlobal());  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  ||!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  ||!v.isGlobal());	  Preconditions.checkState(v!=    null    &&!v.isGlobal());    	compilable	  [FE]  RuntimeException  	67	13	replace
261	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v  ==  null  &&!v.isGlobal());	  Preconditions.checkState(v!=    null    &&!v.isGlobal());    	compilable	  [FE]  RuntimeException  	67	13	replace
262	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null  &&!v.isGlobal());  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null  &&!v.isGlobal());	  Preconditions.checkState(v!=    null    &&!v.isGlobal());    	compilable	  [FE]  RuntimeException  	67	13	replace
263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null  ||!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v  ==  null  ||!v.isGlobal());	  Preconditions.checkState(v!=    null    &&!v.isGlobal());    	compilable	  [FE]  AssertionFailedError  	67	4	replace
264	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null  ||!v.isGlobal());  [FE]  AssertionFailedError  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null  ||!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null  ||!v.isGlobal());	  Preconditions.checkState(v!=    null    &&!v.isGlobal());    	compilable	  [FE]  AssertionFailedError  	67	4	replace
265	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name,  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	104	None	replace
266	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	104	None	replace
267	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.NAME,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.NAME,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.NAME,  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	104	None	replace
268	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name.toString());  [CE]  incomparable  types:  JSType  and  int  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name.toString());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name.toString());	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	104	None	replace
269	[BUG]  [BUGGY]  Presconditions.checkNotNull(externsScope);  [CE]  cannot  find  symbol  Presconditions  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Presconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Presconditions.checkNotNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);    	non-compiled	[CE]  cannot  find  symbol  Presconditions	88	None	replace
270	[BUG]  [BUGGY]  Préconditions.checkNotNull(externsScope);  [CE]  cannot  find  symbol  Pr  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Préconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Préconditions.checkNotNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);    	non-compiled	[CE]  cannot  find  symbol  Pr	88	None	replace
271	[BUG]  [BUGGY]  preconditions.checkNotNull(externsScope);  [CE]  cannot  find  symbol  preconditions  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	preconditions.checkNotNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);    	non-compiled	[CE]  cannot  find  symbol  preconditions	88	None	replace
272	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()!=  Token.VAR);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()!=  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()!=  Token.VAR);	  Preconditions.checkArgument(v.getType()!=    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
273	[BUG]  [BUGGY]  V  v  =  s.getVar(name).reference();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  V  v  =  s.getVar(name).reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	V  v  =  s.getVar(name).reference();	  v    =    s.getVar(name).reference();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
274	[BUG]  [BUGGY]  VAR  v  =  s.getVar(name).reference();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  VAR  v  =  s.getVar(name).reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	VAR  v  =  s.getVar(name).reference();	  v    =    s.getVar(name).reference();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
275	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  ||  v.length()  ==  0);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  ||  v.length()  ==  0);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  ||  v.length()  ==  0);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    name.length()    ==    0);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
276	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  ||  name.length()  ==  0);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  ||  name.length()  ==  0);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  ||  name.length()  ==  0);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    name.length()    ==    0);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
277	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  name.length()  ==  0);  [CE]  incomparable  types:  JSType  and  int  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  name.length()  ==  0);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  name.length()  ==  0);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    name.length()    ==    0);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	18	None	replace
278	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION  ||  name.length()  ==  0);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION  ||  name.length()  ==  0);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION  ||  name.length()  ==  0);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    name.length()    ==    0);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  3);  v  =  externsScope.getVar(name  +  3);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	v    =    externsScope.getVar(name    +    3);    v  =  externsScope.getVar(name  +  3);	  	compilable	  [FE]  AssertionFailedError  	63	1	add
280	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  3);  v  =  externsScope.getVar(name  +  3);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  3);  v  =  externsScope.getVar(name  +  3);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    3);    v  =  externsScope.getVar(name  +  3);	  	compilable	  [FE]  AssertionFailedError  	63	1	add
281	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  3);  VAR  v  =  externsScope.getVar(name  +  3);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  3);  VAR  v  =  externsScope.getVar(name  +  3);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    3);    VAR  v  =  externsScope.getVar(name  +  3);	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
282	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  3);  inExterns  =  externsScope.getVar(name  +  3);  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  3);  inExterns  =  externsScope.getVar(name  +  3);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    3);    inExterns  =  externsScope.getVar(name  +  3);	  	non-compiled	[CE]  incompatible  types	63	None	add
283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  3);  v  =  externsScope.getVar(name  +  4);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	v    =    externsScope.getVar(name    +    3);    v  =  externsScope.getVar(name  +  4);	  	compilable	  [FE]  AssertionFailedError  	63	1	add
284	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  3);  v  =  externsScope.getVar(name  +  4);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  3);  v  =  externsScope.getVar(name  +  4);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    3);    v  =  externsScope.getVar(name  +  4);	  	compilable	  [FE]  AssertionFailedError  	63	1	add
285	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=    null,    externsScope.getVar(name));    Preconditions.checkState(v!=  null,  externsScope.getVar(name));	  	compilable	  [FE]  RuntimeException  	100	13	add
286	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null,    externsScope.getVar(name));    Preconditions.checkState(v!=  null,  externsScope.getVar(name));	  	compilable	  [FE]  RuntimeException  	100	13	add
287	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v  ==  null,  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=    null,    externsScope.getVar(name));    Preconditions.checkState(v  ==  null,  externsScope.getVar(name));	  	compilable	  [FE]  RuntimeException  	100	13	add
288	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v  ==  null,  externsScope.getVar(name));  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v  ==  null,  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null,    externsScope.getVar(name));    Preconditions.checkState(v  ==  null,  externsScope.getVar(name));	  	compilable	  [FE]  RuntimeException  	100	13	add
289	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v  >=  null,  externsScope.getVar(name));  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v  >=  null,  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null,    externsScope.getVar(name));    Preconditions.checkState(v  >=  null,  externsScope.getVar(name));	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	100	None	add
290	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v!=  null,  externalsScope.getVar(name));  [CE]  cannot  find  symbol  externalsScope  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v!=  null,  externalsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null,    externsScope.getVar(name));    Preconditions.checkState(v!=  null,  externalsScope.getVar(name));	  	non-compiled	[CE]  cannot  find  symbol  externalsScope	100	None	add
291	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v  >>  null,  externsScope.getVar(name));  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v  >>  null,  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null,    externsScope.getVar(name));    Preconditions.checkState(v  >>  null,  externsScope.getVar(name));	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	100	None	add
292	[BUG]  [BUGGY]  Var  v  =  externsScope.getVar(name  +  1);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Var  v  =  externsScope.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Var  v  =  externsScope.getVar(name  +  1);	  v    =    externsScope.getVar(name    +    1);    v    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
293	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);  Preconditions.checkArgument(externsScope!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=    null);    	compilable	  [FE]  RuntimeException  	91	13	replace
294	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(externsScope!=  null);  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);  Preconditions.checkArgument(externsScope!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=    null);    	compilable	  [FE]  RuntimeException  	91	13	replace
295	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null);  Preconditions.checkArgument(externsScope!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=    null);    	compilable	  [FE]  RuntimeException  	91	13	replace
296	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkArgument(externsScope!=  null);  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null);  Preconditions.checkArgument(externsScope!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=    null);    	compilable	  [FE]  RuntimeException  	91	13	replace
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v  ==  null);  Preconditions.checkArgument(externsScope!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=    null);    	compilable	  [FE]  AssertionFailedError  	91	4	replace
298	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkArgument(externsScope!=  null);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null);  Preconditions.checkArgument(externsScope!=  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=    null);    	compilable	  [FE]  AssertionFailedError  	91	4	replace
299	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v  ==  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=    null);    	compilable	  [FE]  AssertionFailedError  	91	4	replace
300	[BUG]  [BUGGY]  Preconditions.checkArgument(v  ==  null);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v  ==  null);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=    null);    	compilable	  [FE]  AssertionFailedError  	91	4	replace
301	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  scope);  [CE]  cannot  find  symbol  scope  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  scope);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  s,  scope);	  v    =    externsScope.getVar(name,    v,    s);    	non-compiled	[CE]  cannot  find  symbol  scope	53	None	replace
302	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  s);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  s);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  s,  s);	  v    =    externsScope.getVar(name,    v,    s);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	53	None	replace
303	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  sourceName);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  s,  sourceName);	  v    =    externsScope.getVar(name,    v,    s);    	non-compiled	[CE]  cannot  find  symbol  sourceName	53	None	replace
304	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  type);  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  type);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  s,  type);	  v    =    externsScope.getVar(name,    v,    s);    	non-compiled	[CE]  cannot  find  symbol  type	53	None	replace
305	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	116	None	replace
306	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.FUNCTION);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	116	None	replace
307	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	116	None	replace
308	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	116	None	replace
309	[BUG]  [BUGGY]  inExterns  =  externsScope.getVar(name  +  1);  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  inExterns  =  externsScope.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	inExterns  =  externsScope.getVar(name  +  1);	  v    =    externsScope.getVar(name    +    1);    inExterns    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  incompatible  types	96	None	replace
310	[BUG]  [BUGGY]  Preconditions.checkState(externsScope!=  null);  preconditions.checkState(v!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]        RuntimeException      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null);  preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope!=  null);  preconditions.checkState(v!=  null);	          Preconditions.checkState(v!=    null);    preconditions.checkState(v!=    null);    	non-compiled	[CE]  cannot  find  symbol  preconditions	82	None	replace
311	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null);  preconditions.checkState(v  ==  null);  [CE]  cannot  find  symbol  preconditions  [FE]          RuntimeException      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null);  preconditions.checkState(v  ==  null);	          Preconditions.checkState(v!=    null);    preconditions.checkState(v!=    null);    	non-compiled	[CE]  cannot  find  symbol  preconditions	82	None	replace
312	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  v.getVar(name));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  v.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  v.getVar(name));	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    externsScope.getVar(name));    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
313	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  s.getVar(name));  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  s.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  s.getVar(name));	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    externsScope.getVar(name));    	non-compiled	[CE]  incomparable  types:  JSType  and  int	71	None	replace
314	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  v.getName());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    externsScope.getVar(name));    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
315	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  externsScope.getVar(name),  v);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  externsScope.getVar(name),  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  externsScope.getVar(name),  v);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    externsScope.getVar(name));    	non-compiled	[CE]  incomparable  types:  JSType  and  int	71	None	replace
316	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()!=  Token.FUNCTION);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()!=  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()!=  Token.FUNCTION);	  Preconditions.checkArgument(v.getType()!=    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
317	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()!=  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()!=  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()!=  Token.FUNCTION);	  Preconditions.checkArgument(v.getType()!=    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	79	None	replace
318	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  >=  Token.FUNCTION);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  >=  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  >=  Token.FUNCTION);	  Preconditions.checkArgument(v.getType()!=    Token.FUNCTION);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	79	None	replace
319	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
320	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
321	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope!=    null);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
322	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope!=    null);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
323	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	40	13	add
324	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	40	13	add
325	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(extrsScope);  Preconditions.checkState(externsScope!=  null);  [CE]  cannot  find  symbol  extrsScope  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(extrsScope);  Preconditions.checkState(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope!=    null);    Preconditions.checkNotNull(extrsScope);  Preconditions.checkState(externsScope!=  null);	  	non-compiled	[CE]  cannot  find  symbol  extrsScope	40	None	add
326	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  >=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope!=    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	40	None	add
327	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name)  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null,  externsScope.getVar(name)  ==  null);	          Preconditions.checkState(v!=    null);    Preconditions.checkState(v    >>    null);    	compilable	  [FE]  RuntimeException  	8	13	replace
328	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name)  ==  null);  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name)  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null,  externsScope.getVar(name)  ==  null);	          Preconditions.checkState(v!=    null);    Preconditions.checkState(v    >>    null);    	compilable	  [FE]  RuntimeException  	8	13	replace
329	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  true);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  true);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  true);	  v    =    externsScope.getVar(name,    v,    false);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	56	None	replace
330	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  false,  s);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  false,  s);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  false,  s);	  v    =    externsScope.getVar(name,    v,    false);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	56	None	replace
331	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  null,  false);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  null,  false);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  null,  false);	  v    =    externsScope.getVar(name,    v,    false);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	56	None	replace
332	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  sourceName,  false);  [CE]  cannot  find  symbol  sourceName  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  sourceName,  false);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  sourceName,  false);	  v    =    externsScope.getVar(name,    v,    false);    	non-compiled	[CE]  cannot  find  symbol  sourceName	56	None	replace
333	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()!=  Token.GETPROP);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()!=  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()!=  Token.GETPROP);	  Preconditions.checkArgument(v.getType()!=    Token.GETPROP);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
334	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()!=  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()!=  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()!=  Token.GETPROP);	  Preconditions.checkArgument(v.getType()!=    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	106	None	replace
335	[BUG]  [BUGGY]  Preconditions.checkNotNull(s);  Preconditions.checkNonNull(externsScope);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(s);  Preconditions.checkNonNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(s);  Preconditions.checkNonNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNonNull(externsScope);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
336	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkNonNull(externsScope);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkNonNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);  Preconditions.checkNonNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNonNull(externsScope);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
337	[BUG]  [BUGGY]  Preconditions.checkNonNull(externsScope);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNonNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNonNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNonNull(externsScope);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
338	[BUG]  [BUGGY]  Preconditions.checkNotNull(scope);  Preconditions.checkNonNull(externsScope);  [CE]  cannot  find  symbol  scope  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(scope);  Preconditions.checkNonNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(scope);  Preconditions.checkNonNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNonNull(externsScope);    	non-compiled	[CE]  cannot  find  symbol  scope	115	None	replace
339	[BUG]  [BUGGY]  Preconditions.checkArgument(s.getType()  ==  Token.GETPROP,  v);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(s.getType()  ==  Token.GETPROP,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(s.getType()  ==  Token.GETPROP,  v);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    s);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
340	[BUG]  [BUGGY]  Preconditions.checkArgument(s.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(s.getType()  ==  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(s.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    s);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
341	[BUG]  [BUGGY]  Preconditions.checkState(s.getType()  ==  Token.GETPROP,  v);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(s.getType()  ==  Token.GETPROP,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(s.getType()  ==  Token.GETPROP,  v);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    s);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
342	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETELEM,  name);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETELEM,  name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETELEM,  name);	  Preconditions.checkArgument(v.getType()    ==    Token.GETELEM);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	70	None	replace
343	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETELEM  ||  v.getType()  ==  Token.GETELEM);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETELEM  ||  v.getType()  ==  Token.GETELEM);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETELEM  ||  v.getType()  ==  Token.GETELEM);	  Preconditions.checkArgument(v.getType()    ==    Token.GETELEM);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	70	None	replace
344	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETELEM  ||  v.getType()  ==  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETELEM  ||  v.getType()  ==  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETELEM  ||  v.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(v.getType()    ==    Token.GETELEM);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	70	None	replace
345	[BUG]  [BUGGY]  Preconditions.checkState(name.getType()  ==  Token.VAR,  v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(name.getType()  ==  Token.VAR,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(name.getType()  ==  Token.VAR,  v);	  Preconditions.checkState(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
346	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  name,  s);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  name,  s);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR,  name,  s);	  Preconditions.checkState(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	36	None	replace
347	[BUG]  [BUGGY]  Preconditions.checkState(name.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(name.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(name.getType()  ==  Token.VAR);	  Preconditions.checkState(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
348	[BUG]  [BUGGY]  Preconditions.checkState(scope.getType()  ==  Token.VAR,  name);  [CE]  cannot  find  symbol  scope  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(scope.getType()  ==  Token.VAR,  name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(scope.getType()  ==  Token.VAR,  name);	  Preconditions.checkState(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  cannot  find  symbol  scope	36	None	replace
349	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	109	None	replace
350	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.FUNCTION);	  Preconditions.checkState(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	109	None	replace
351	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	109	None	replace
352	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	109	None	replace
353	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  &&  v.getType()  ==  Token.NAME);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	59	None	replace
354	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()!=  Token.NAME);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	59	None	replace
355	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME  ||  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME  ||  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME  ||  v.getType()  ==  Token.VAR);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	59	None	replace
356	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.NAME,  name);  [CE]  incomparable  types:  JSType  and  int  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.NAME,  name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.NAME,  name);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	59	None	replace
357	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=    null    &&    externsScope!=    null);    Preconditions.checkState(v!=  null  &&  externsScope!=  null);	  	compilable	  [FE]  RuntimeException  	102	13	add
358	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&    externsScope!=    null);    Preconditions.checkState(v!=  null  &&  externsScope!=  null);	  	compilable	  [FE]  RuntimeException  	102	13	add
359	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v  ==  null  &&  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=    null    &&    externsScope!=    null);    Preconditions.checkState(v  ==  null  &&  externsScope!=  null);	  	compilable	  [FE]  RuntimeException  	102	13	add
360	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v  ==  null  &&  externsScope!=  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v  ==  null  &&  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&    externsScope!=    null);    Preconditions.checkState(v  ==  null  &&  externsScope!=  null);	  	compilable	  [FE]  RuntimeException  	102	13	add
361	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v!=  null  &&  externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=    null    &&    externsScope!=    null);    Preconditions.checkState(v!=  null  &&  externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	102	13	add
362	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v!=  null  &&  externsScope  ==  null);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v!=  null  &&  externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&    externsScope!=    null);    Preconditions.checkState(v!=  null  &&  externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	102	13	add
363	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v!=  null  &&  externsScope  >>  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v!=  null  &&  externsScope  >>  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&    externsScope!=    null);    Preconditions.checkState(v!=  null  &&  externsScope  >>  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	102	None	add
364	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v!=  null  &&  externsScope  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v!=  null  &&  externsScope  >=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&    externsScope!=    null);    Preconditions.checkState(v!=  null  &&  externsScope  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	102	None	add
365	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v  >=  null  &&  externsScope!=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v  >=  null  &&  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&    externsScope!=    null);    Preconditions.checkState(v  >=  null  &&  externsScope!=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	102	None	add
366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  4);  v  =  externsScope.getVar(name  +  4);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	v    =    externsScope.getVar(name    +    4);    v  =  externsScope.getVar(name  +  4);	  	compilable	  [FE]  AssertionFailedError  	84	1	add
367	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  4);  v  =  externsScope.getVar(name  +  4);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  4);  v  =  externsScope.getVar(name  +  4);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    4);    v  =  externsScope.getVar(name  +  4);	  	compilable	  [FE]  AssertionFailedError  	84	1	add
368	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  4);  VAR  v  =  externsScope.getVar(name  +  4);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  4);  VAR  v  =  externsScope.getVar(name  +  4);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    4);    VAR  v  =  externsScope.getVar(name  +  4);	  	non-compiled	[CE]  cannot  find  symbol	84	None	add
369	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  4);  inExterns  =  externsScope.getVar(name  +  4);  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  4);  inExterns  =  externsScope.getVar(name  +  4);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    4);    inExterns  =  externsScope.getVar(name  +  4);	  	non-compiled	[CE]  incompatible  types	84	None	add
370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  4);  v  =  externsScope.getVar(name  +  5);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	v    =    externsScope.getVar(name    +    4);    v  =  externsScope.getVar(name  +  5);	  	compilable	  [FE]  AssertionFailedError  	84	1	add
371	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  4);  v  =  externsScope.getVar(name  +  5);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  4);  v  =  externsScope.getVar(name  +  5);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    4);    v  =  externsScope.getVar(name  +  5);	  	compilable	  [FE]  AssertionFailedError  	84	1	add
372	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v    ==    null);    Preconditions.checkState(v  ==  null);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
373	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  ==  null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v    ==    null);    Preconditions.checkState(v  ==  null);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
374	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  >=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v    ==    null);    Preconditions.checkState(v  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	11	None	add
375	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  >>  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  >>  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v    ==    null);    Preconditions.checkState(v  >>  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	11	None	add
376	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  [BUGGY]  null);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkState(v  [BUGGY]  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v    ==    null);    Preconditions.checkState(v  [BUGGY]  null);	  	non-compiled	[CE]  ')'  expected	11	None	add
377	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s,  scope);  [CE]  cannot  find  symbol  scope  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s,  scope);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s,  scope);	  v    =    externsScope.getVar(name,    s);    	non-compiled	[CE]  cannot  find  symbol  scope	54	None	replace
378	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(externsScope!=  null);	  Preconditions.checkArgument(v!=    null);    	compilable	  [FE]  AssertionFailedError  	14	4	replace
379	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope!=  null);  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope!=  null);	  Preconditions.checkArgument(v!=    null);    	compilable	  [FE]  AssertionFailedError  	14	4	replace
380	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  v.getType()  ==  Token.VAR);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	110	None	replace
381	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()!=  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()!=  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()!=  Token.VAR);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	110	None	replace
382	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  ||  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  ||  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  ||  v.getType()  ==  Token.VAR);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	110	None	replace
383	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  &&  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  &&  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  &&  v.getType()  ==  Token.VAR);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	110	None	replace
384	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v.isGlobal());	          Preconditions.checkArgument(v.isGlobal());    	compilable	  [FE]  RuntimeException  	99	13	replace
385	[BUG]  [BUGGY]  Preconditions.checkState(v.isGlobal());  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.isGlobal());	          Preconditions.checkArgument(v.isGlobal());    	compilable	  [FE]  RuntimeException  	99	13	replace
386	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.isGlobal()  ||!v.isLocal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v.isGlobal()  ||!v.isLocal());	          Preconditions.checkArgument(v.isGlobal());    	compilable	  [FE]  RuntimeException  	99	13	replace
387	[BUG]  [BUGGY]  Preconditions.checkArgument(v.isGlobal()  ||!v.isLocal());  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.isGlobal()  ||!v.isLocal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.isGlobal()  ||!v.isLocal());	          Preconditions.checkArgument(v.isGlobal());    	compilable	  [FE]  RuntimeException  	99	13	replace
388	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.isGlobal()  ||  v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v.isGlobal()  ||  v.isGlobal());	          Preconditions.checkArgument(v.isGlobal());    	compilable	  [FE]  RuntimeException  	99	13	replace
389	[BUG]  [BUGGY]  Preconditions.checkArgument(v.isGlobal()  ||  v.isGlobal());  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.isGlobal()  ||  v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.isGlobal()  ||  v.isGlobal());	          Preconditions.checkArgument(v.isGlobal());    	compilable	  [FE]  RuntimeException  	99	13	replace
390	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.isGlobal()  ||  v.isLocal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v.isGlobal()  ||  v.isLocal());	          Preconditions.checkArgument(v.isGlobal());    	compilable	  [FE]  RuntimeException  	99	13	replace
391	[BUG]  [BUGGY]  Preconditions.checkArgument(v.isGlobal()  ||  v.isLocal());  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.isGlobal()  ||  v.isLocal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.isGlobal()  ||  v.isLocal());	          Preconditions.checkArgument(v.isGlobal());    	compilable	  [FE]  RuntimeException  	99	13	replace
392	[BUG]  [BUGGY]  VAR  v  =  externsScope.getVar(name  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  VAR  v  =  externsScope.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	VAR  v  =  externsScope.getVar(name  +  1);	  v    =    externsScope.getVar(name    +    1);    VAR    v    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
393	[BUG]  [BUGGY]  v  =  s.getVar(name  +  1);  VAR  v  =  externsScope.getVar(name  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  s.getVar(name  +  1);  VAR  v  =  externsScope.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  s.getVar(name  +  1);  VAR  v  =  externsScope.getVar(name  +  1);	  v    =    externsScope.getVar(name    +    1);    VAR    v    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
394	[BUG]  [BUGGY]  JSModule  module  =  externsScope.getModule(name);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  JSModule  module  =  externsScope.getModule(name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	JSModule  module  =  externsScope.getModule(name);	  JSModule    module    =    externsScope.getModule();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
395	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR,  v);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR,  v);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
396	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR  ||  externsScope.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR  ||  externsScope.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR  ||  externsScope.getType()  ==  Token.VAR);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
397	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION,  v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION,  v);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
398	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION  ||  externsScope.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION  ||  externsScope.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION  ||  externsScope.getType()  ==  Token.VAR);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
399	[BUG]  [BUGGY]  V  =  externsScope.getVar(name  +  1);  [CE]  cannot  find  symbol  V  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  V  =  externsScope.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	V  =  externsScope.getVar(name  +  1);	  v    =    externsScope.getVar(name    +    1);    V    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  cannot  find  symbol  V	23	None	replace
400	[BUG]  [BUGGY]  v  =  s.getVar(name  +  1);  V  =  externsScope.getVar(name  +  1);  [CE]  cannot  find  symbol  V  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  s.getVar(name  +  1);  V  =  externsScope.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  s.getVar(name  +  1);  V  =  externsScope.getVar(name  +  1);	  v    =    externsScope.getVar(name    +    1);    V    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  cannot  find  symbol  V	23	None	replace
401	[BUG]  [BUGGY]  s  =  externsScope.getVar(name,  v);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  s  =  externsScope.getVar(name,  v);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	s  =  externsScope.getVar(name,  v);	          s    =    externsScope.getVar(name);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	97	None	replace
402	[BUG]  [BUGGY]  s  =  scope.getVar(name);  [CE]  cannot  find  symbol  scope  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  s  =  scope.getVar(name);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	s  =  scope.getVar(name);	          s    =    externsScope.getVar(name);    	non-compiled	[CE]  cannot  find  symbol  scope	97	None	replace
403	[BUG]  [BUGGY]  s  =  externsScope.getVar(name)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  s  =  externsScope.getVar(name)+  1;  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	s  =  externsScope.getVar(name)+  1;	          s    =    externsScope.getVar(name);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	97	None	replace
404	[BUG]  [BUGGY]  s  =  externsScope.getVar(name  +  1);  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  s  =  externsScope.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	s  =  externsScope.getVar(name  +  1);	          s    =    externsScope.getVar(name);    	non-compiled	[CE]  incompatible  types	97	None	replace
405	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  v.isGlobal());  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  v.isGlobal());	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.isGlobal());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	78	None	replace
406	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  ||  v.isGlobal());  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  ||  v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  ||  v.isGlobal());	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.isGlobal());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	78	None	replace
407	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.FUNCTION  ||  v.isGlobal());  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.FUNCTION  ||  v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.FUNCTION  ||  v.isGlobal());	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.isGlobal());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	78	None	replace
408	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  name.isGlobal());  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  name.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  name.isGlobal());	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.isGlobal());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	78	None	replace
409	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  inExterns);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  inExterns);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s,  v,  inExterns);	  v    =    externsScope.getVar(name,    s,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	55	None	replace
410	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  null);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s,  v,  null);	  v    =    externsScope.getVar(name,    s,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	55	None	replace
411	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  scope);  [CE]  cannot  find  symbol  scope  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  scope);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s,  v,  scope);	  v    =    externsScope.getVar(name,    s,    v);    	non-compiled	[CE]  cannot  find  symbol  scope	55	None	replace
412	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  sourceName);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s,  v,  sourceName);	  v    =    externsScope.getVar(name,    s,    v);    	non-compiled	[CE]  cannot  find  symbol  sourceName	55	None	replace
413	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  source);  [CE]  cannot  find  symbol  source  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  source);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s,  v,  source);	  v    =    externsScope.getVar(name,    s,    v);    	non-compiled	[CE]  cannot  find  symbol  source	55	None	replace
414	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  s).reference();  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  s).reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  s).reference();	  v    =    externsScope.getVar(name,    v).reference();    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	68	None	replace
415	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v),  s.reference();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v),  s.reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v),  s.reference();	  v    =    externsScope.getVar(name,    v).reference();    	non-compiled	[CE]  ';'  expected	68	None	replace
416	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v).reference(null);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v).reference(null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v).reference(null);	  v    =    externsScope.getVar(name,    v).reference();    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	68	None	replace
417	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v).reference(stream);  [CE]  cannot  find  symbol  stream  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v).reference(stream);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v).reference(stream);	  v    =    externsScope.getVar(name,    v).reference();    	non-compiled	[CE]  cannot  find  symbol  stream	68	None	replace
418	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  topVarName);  [CE]  cannot  find  symbol  topVarName  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  topVarName);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  topVarName);	  v    =    externsScope.getVar(name,    v,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  topVarName	74	None	replace
419	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  baseVarName);  [CE]  cannot  find  symbol  baseVarName  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  baseVarName);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  baseVarName);	  v    =    externsScope.getVar(name,    v,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  baseVarName	74	None	replace
420	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  this.baseVarName);  [CE]  cannot  find  symbol  baseVarName  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  this.baseVarName);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  this.baseVarName);	  v    =    externsScope.getVar(name,    v,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  baseVarName	74	None	replace
421	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v!=  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=    null    &&!v.isGlobal());    Preconditions.checkState(v!=  null  &&!v.isGlobal());	  	compilable	  [FE]  RuntimeException  	66	13	add
422	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v!=  null  &&!v.isGlobal());  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v!=  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&!v.isGlobal());    Preconditions.checkState(v!=  null  &&!v.isGlobal());	  	compilable	  [FE]  RuntimeException  	66	13	add
423	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v  ==  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=    null    &&!v.isGlobal());    Preconditions.checkState(v  ==  null  &&!v.isGlobal());	  	compilable	  [FE]  RuntimeException  	66	13	add
424	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v  ==  null  &&!v.isGlobal());  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v  ==  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&!v.isGlobal());    Preconditions.checkState(v  ==  null  &&!v.isGlobal());	  	compilable	  [FE]  RuntimeException  	66	13	add
425	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v  >=  null  &&!v.isGlobal());  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v  >=  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&!v.isGlobal());    Preconditions.checkState(v  >=  null  &&!v.isGlobal());	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	66	None	add
426	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v  >>  null  &&!v.isGlobal());  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v  >>  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&!v.isGlobal());    Preconditions.checkState(v  >>  null  &&!v.isGlobal());	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	66	None	add
427	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v  [BUGGY]  null  &&!v.isGlobal());  [CE]  ')'  expected  [FE]            RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v  [BUGGY]  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&!v.isGlobal());    Preconditions.checkState(v  [BUGGY]  null  &&!v.isGlobal());	  	non-compiled	[CE]  ')'  expected	66	None	add
428	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v  [Delete]  null  &&!v.isGlobal());  [CE]  ')'  expected  [FE]              RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v  [Delete]  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&!v.isGlobal());    Preconditions.checkState(v  [Delete]  null  &&!v.isGlobal());	  	non-compiled	[CE]  ')'  expected	66	None	add
429	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  n,  s);  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  n,  s);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  n,  s);	  v    =    externsScope.getVar(name,    s);    	non-compiled	[CE]  cannot  find  symbol  n	54	None	replace
430	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.NAME);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	59	None	replace
431	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.NAME);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	59	None	replace
432	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.getName(),  externsScope);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.getName(),  externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.getName(),  externsScope);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	104	None	replace
433	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME  &&  v.getName().equals(name));  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME  &&  v.getName().equals(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME  &&  v.getName().equals(name));	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	104	None	replace
434	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.name);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.name);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	25	None	replace
435	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	25	None	replace
436	[BUG]  [BUGGY]  Presence.checkNotNull(externsScope);  [CE]  cannot  find  symbol  Presence  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Presence.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Presence.checkNotNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);    	non-compiled	[CE]  cannot  find  symbol  Presence	88	None	replace
437	[BUG]  [BUGGY]  Proxy.checkNotNull(externsScope);  [CE]  cannot  find  symbol  Proxy  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Proxy.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Proxy.checkNotNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);    	non-compiled	[CE]  cannot  find  symbol  Proxy	88	None	replace
438	[BUG]  [BUGGY]  Preconditions.checkState(v!=  externsScope);  Preconditions.checkEquals(v,  externsScope);  [CE]  incomparable  types:  Var  and  Scope  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  externsScope);  Preconditions.checkEquals(v,  externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  externsScope);  Preconditions.checkEquals(v,  externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkEquals(externsScope,    v);    	non-compiled	[CE]  incomparable  types:  Var  and  Scope	114	None	replace
439	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);    Preconditions.checkArgument(v!=  null);	  	compilable	  [FE]  RuntimeException  	28	13	add
440	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v!=  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);    Preconditions.checkArgument(v!=  null);	  	compilable	  [FE]  RuntimeException  	28	13	add
441	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v!=  null  &&!v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);    Preconditions.checkArgument(v!=  null  &&!v.isLocal());	  	compilable	  [FE]  RuntimeException  	28	13	add
442	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v!=  null  &&!v.isLocal());  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v!=  null  &&!v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);    Preconditions.checkArgument(v!=  null  &&!v.isLocal());	  	compilable	  [FE]  RuntimeException  	28	13	add
443	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(v!=  null  &&!v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);    Preconditions.checkState(v!=  null  &&!v.isLocal());	  	compilable	  [FE]  RuntimeException  	28	13	add
444	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(v!=  null  &&!v.isLocal());  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkState(v!=  null  &&!v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);    Preconditions.checkState(v!=  null  &&!v.isLocal());	  	compilable	  [FE]  RuntimeException  	28	13	add
445	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v).reference(scope);  [CE]  cannot  find  symbol  scope  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v).reference(scope);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v).reference(scope);	  v    =    externsScope.getVar(name,    v).reference();    	non-compiled	[CE]  cannot  find  symbol  scope	68	None	replace
446	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  externsRoot.getVar(name));  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  externsRoot.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  externsRoot.getVar(name));	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    externsScope.getVar(name));    	non-compiled	[CE]  incomparable  types:  JSType  and  int	86	None	replace
447	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  v  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  v  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  v  +  1);	  v    =    externsScope.getVar(name,    v    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	65	None	replace
448	[BUG]  [BUGGY]          Preconditions.checkState(externsScope!=  null);  preconditions.checkState(externsScope!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(externsScope!=  null);  preconditions.checkState(externsScope!=  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(externsScope!=    null);    preconditions.checkState(externsScope!=  null);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	1	None	add
449	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  externsRoot.getVar(name));  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  externsRoot.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  externsRoot.getVar(name));	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    externsScope.getVar(name));    	non-compiled	[CE]  incomparable  types:  JSType  and  int	71	None	replace
450	[BUG]  [BUGGY]  v  =  externsScope.getVar(name),  v  /  1;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name),  v  /  1;  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name),  v  /  1;	  v    =    externsScope.getVar(name)/    1;    	non-compiled	[CE]  ';'  expected	32	None	replace
451	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.getType()!=  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.getType()!=  Token.GETPROP);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=  null  &&  v.getType()!=  Token.GETPROP);	  Preconditions.checkArgument(v.getType()!=    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	106	None	replace
452	[BUG]  [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getVar(name);  Preconditions.checkArgument(v.isGlobal());  [CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getVar(name);  Preconditions.checkArgument(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkArgument(v.isGlobal());    Node  v  =  externsScope.getVar(name);  Preconditions.checkArgument(v.isGlobal());	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)	98	None	add
453	[BUG]  [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getNode(name);  Preconditions.checkArgument(v.isGlobal());  [CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getNode(name);  Preconditions.checkArgument(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkArgument(v.isGlobal());    Node  v  =  externsScope.getNode(name);  Preconditions.checkArgument(v.isGlobal());	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)	98	None	add
454	[BUG]  [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getNode(n);  Preconditions.checkArgument(v.isGlobal());  [CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getNode(n);  Preconditions.checkArgument(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkArgument(v.isGlobal());    Node  v  =  externsScope.getNode(n);  Preconditions.checkArgument(v.isGlobal());	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)	98	None	add
455	[BUG]  [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getNode(null);  Preconditions.checkArgument(v.isGlobal());  [CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getNode(null);  Preconditions.checkArgument(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkArgument(v.isGlobal());    Node  v  =  externsScope.getNode(null);  Preconditions.checkArgument(v.isGlobal());	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)	98	None	add
456	[BUG]  [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getNode(name,  false);  Preconditions.checkArgument(v.isGlobal());  [CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)  [FE]            RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getNode(name,  false);  Preconditions.checkArgument(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkArgument(v.isGlobal());    Node  v  =  externsScope.getNode(name,  false);  Preconditions.checkArgument(v.isGlobal());	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)	98	None	add
457	[BUG]  [BUGGY]  VAR  v  =  externsScope.getVar(name).reference();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  VAR  v  =  externsScope.getVar(name).reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	VAR  v  =  externsScope.getVar(name).reference();	  v    =    s.getVar(name).reference();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
458	[BUG]  [BUGGY]  V  v  =  externsScope.getVar(name).reference();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  V  v  =  externsScope.getVar(name).reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	V  v  =  externsScope.getVar(name).reference();	  v    =    s.getVar(name).reference();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
459	[BUG]  [BUGGY]  Var  v  =  externsScope.getVar(name).reference();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Var  v  =  externsScope.getVar(name).reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Var  v  =  externsScope.getVar(name).reference();	  v    =    s.getVar(name).reference();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
460	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v!=  externsScope.getType());  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v!=  externsScope.getType());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v!=  externsScope.getType());	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	111	None	replace
461	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v  >>  null  &&  externsScope!=  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  Preconditions.checkState(v  >>  null  &&  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&    externsScope!=    null);    Preconditions.checkState(v  >>  null  &&  externsScope!=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	102	None	add
462	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(externsScope!=  null  &&!v.isGlobal());	  Preconditions.checkState(v!=    null    &&!v.isGlobal());    	compilable	  [FE]  RuntimeException  	67	13	replace
463	[BUG]  [BUGGY]  Preconditions.checkState(externsScope!=  null  &&!v.isGlobal());  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope!=  null  &&!v.isGlobal());	  Preconditions.checkState(v!=    null    &&!v.isGlobal());    	compilable	  [FE]  RuntimeException  	67	13	replace
464	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(extrasScope);  [CE]  cannot  find  symbol  extrasScope  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(extrasScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(extrasScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrasScope);    	non-compiled	[CE]  cannot  find  symbol  extrasScope	42	None	replace
465	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkNotNull(extternsScope);  Preconditions.checkArgument(externsScope!=  null);  [CE]  cannot  find  symbol  extternsScope  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkNotNull(extternsScope);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkNotNull(extternsScope);  Preconditions.checkArgument(externsScope!=  null);	  	non-compiled	[CE]  cannot  find  symbol  extternsScope	90	None	add
466	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null);  preconditions.checkState(v  ==  null);  [CE]  cannot  find  symbol  preconditions  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null);  preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v    ==    null);    preconditions.checkState(v  ==  null);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	11	None	add
467	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externsScope,  new  BuildGlobalNamespace());  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Scope,GlobalNamespace.BuildGlobalNamespace)  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externsScope,  new  BuildGlobalNamespace());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	NodeTraversal.traverse(compiler,  externsScope,  new  BuildGlobalNamespace());	          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=    null);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Scope,GlobalNamespace.BuildGlobalNamespace)	41	None	replace
468	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1,  v,  inExterns);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  1,  v,  inExterns);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  1,  v,  inExterns);	  v    =    externsScope.getVar(name    +    1,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	83	None	replace
469	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1,  v,  sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  1,  v,  sourceName);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  1,  v,  sourceName);	  v    =    externsScope.getVar(name    +    1,    v);    	non-compiled	[CE]  cannot  find  symbol  sourceName	83	None	replace
470	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  v);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  v);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  v);	  v    =    externsScope.getVar(name,    v,    sourceName);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	74	None	replace
471	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  ||  v.getType()  ==  Token.GETELEM);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  ||  v.getType()  ==  Token.GETELEM);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  ||  v.getType()  ==  Token.GETELEM);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP    ||    v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	26	None	replace
472	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s).reference(v);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s).reference(v);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s).reference(v);	  v    =    externsScope.getVar(name,    s).reference();    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	46	None	replace
473	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s),  v.reference();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s),  v.reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s),  v.reference();	  v    =    externsScope.getVar(name,    s).reference();    	non-compiled	[CE]  ';'  expected	46	None	replace
474	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.name,  externsScope);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.name,  externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.name,  externsScope);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	49	None	replace
475	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v.name);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v.name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  v.name);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.name);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
476	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.VAR);	  Preconditions.checkState(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	108	None	replace
477	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&!v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v!=  null  &&!v.isGlobal());	          Preconditions.checkArgument(v.isGlobal());    	compilable	  [FE]  RuntimeException  	99	13	replace
478	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null  &&!v.isGlobal());  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&!v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=  null  &&!v.isGlobal());	          Preconditions.checkArgument(v.isGlobal());    	compilable	  [FE]  RuntimeException  	99	13	replace
479	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v!=  null  &&  v.isGlobal());	          Preconditions.checkArgument(v.isGlobal());    	compilable	  [FE]  RuntimeException  	99	13	replace
480	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.isGlobal());  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=  null  &&  v.isGlobal());	          Preconditions.checkArgument(v.isGlobal());    	compilable	  [FE]  RuntimeException  	99	13	replace
481	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v!=  null  ||  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v!=  null  ||  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v!=  null  ||  v.getType()  ==  Token.VAR);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	110	None	replace
482	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null,  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v  ==  null,  externsScope.getVar(name));	  Preconditions.checkState(v!=    null,    externsScope.getVar(name));    	compilable	  [FE]  AssertionFailedError  	101	4	replace
483	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null,  externsScope.getVar(name));  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  null,  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null,  externsScope.getVar(name));	  Preconditions.checkState(v!=    null,    externsScope.getVar(name));    	compilable	  [FE]  AssertionFailedError  	101	4	replace
484	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name),  v);  [CE]  no  suitable  method  found  for  checkState(boolean,Var,Var)  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name),  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null,  externsScope.getVar(name),  v);	  Preconditions.checkState(v!=    null,    externsScope.getVar(name));    	non-compiled	[CE]  no  suitable  method  found  for  checkState(boolean,Var,Var)	101	None	replace
485	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()  ==  Token.VAR);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	60	None	replace
486	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.VAR  &&  v.getType()  ==  Token.VAR);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	60	None	replace
487	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1);  inExterns  =  externsScope.getVar(v.name  +  1);  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  1);  inExterns  =  externsScope.getVar(v.name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  1);  inExterns  =  externsScope.getVar(v.name  +  1);	  v    =    externsScope.getVar(name    +    1);    inExterns    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  incompatible  types	96	None	replace
488	[BUG]  [BUGGY]  Integer  v  =  externsScope.getVar(name  +  1);  inExterns  =  v.getVar(name  +  1);  [CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Integer  v  =  externsScope.getVar(name  +  1);  inExterns  =  v.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Integer  v  =  externsScope.getVar(name  +  1);  inExterns  =  v.getVar(name  +  1);	  v    =    externsScope.getVar(name    +    1);    inExterns    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)	96	None	replace
489	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1);  inExterns  =  externsScope.getVar(v,  name  +  1);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  1);  inExterns  =  externsScope.getVar(v,  name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  1);  inExterns  =  externsScope.getVar(v,  name  +  1);	  v    =    externsScope.getVar(name    +    1);    inExterns    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	96	None	replace
490	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null  &&  externsScope.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(externsScope!=  null  &&  externsScope.isGlobal());	          Preconditions.checkState(externsScope!=    null);    	compilable	  [FE]  AssertionFailedError  	2	4	replace
491	[BUG]  [BUGGY]  Preconditions.checkState(externsScope!=  null  &&  externsScope.isGlobal());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null  &&  externsScope.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope!=  null  &&  externsScope.isGlobal());	          Preconditions.checkState(externsScope!=    null);    	compilable	  [FE]  AssertionFailedError  	2	4	replace
492	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.getType()!=  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.getType()!=  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=  null  &&  v.getType()!=  Token.FUNCTION);	  Preconditions.checkArgument(v.getType()!=    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	79	None	replace
493	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  v);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  v);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s,  v,  v);	  v    =    externsScope.getVar(name,    s,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	55	None	replace
494	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  name,  externsScope);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  name,  externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR,  name,  externsScope);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	57	None	replace
495	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  name,  v.type);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  name,  v.type);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR,  name,  v.type);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	57	None	replace
496	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.getType()!=  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.getType()!=  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=  null  &&  v.getType()!=  Token.VAR);	  Preconditions.checkArgument(v.getType()!=    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	76	None	replace
497	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.getType()!=  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.getType()!=  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=  null  &&  v.getType()!=  Token.NAME);	  Preconditions.checkArgument(v.getType()!=    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	105	None	replace
498	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.length()  ==  0);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.length()  ==  0);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.length()  ==  0);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    name.length()    ==    0);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	18	None	replace
499	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  name,  externsScope);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  name,  externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR,  name,  externsScope);	  Preconditions.checkState(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	36	None	replace
500	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  name,  v);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  name,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR,  name,  v);	  Preconditions.checkState(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	36	None	replace
501	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  DEFLATED_TYPE,  null);  [CE]  cannot  find  symbol  DEFLATED_TYPE  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  DEFLATED_TYPE,  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  DEFLATED_TYPE,  null);	  v    =    externsScope.getVar(name,    v,    null);    	non-compiled	[CE]  cannot  find  symbol  DEFLATED_TYPE	73	None	replace
502	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkNonNull(externsScope);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkNonNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null);  Preconditions.checkNonNull(externsScope);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNonNull(externsScope);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
503	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null  &&  v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(externsScope!=  null  &&  v!=  null);	  Preconditions.checkState(v!=    null    &&    externsScope!=    null);    	compilable	  [FE]  RuntimeException  	103	13	replace
504	[BUG]  [BUGGY]  Preconditions.checkState(externsScope!=  null  &&  v!=  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null  &&  v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope!=  null  &&  v!=  null);	  Preconditions.checkState(v!=    null    &&    externsScope!=    null);    	compilable	  [FE]  RuntimeException  	103	13	replace
505	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null  &&  externsScope  ==  null);	  Preconditions.checkState(v!=    null    &&    externsScope!=    null);    	compilable	  [FE]  RuntimeException  	103	13	replace
506	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope  ==  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  &&  externsScope  ==  null);	  Preconditions.checkState(v!=    null    &&    externsScope!=    null);    	compilable	  [FE]  RuntimeException  	103	13	replace
507	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETELEM);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETELEM);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.GETELEM);	  Preconditions.checkArgument(v.getType()    ==    Token.GETELEM);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
508	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&  externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v!=  null  &&  externsScope.getVar(name)!=  null);	  Preconditions.checkArgument(v!=    null);    	compilable	  [FE]  RuntimeException  	14	13	replace
509	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null  &&  externsScope.getVar(name)!=  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&  externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=  null  &&  externsScope.getVar(name)!=  null);	  Preconditions.checkArgument(v!=    null);    	compilable	  [FE]  RuntimeException  	14	13	replace
510	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  if(externsScope  ==  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	if(externsScope  ==  null)  {  return  false;  }	          if(externsScope!=    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	81	4	replace
511	[BUG]  [BUGGY]  if(externsScope  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  if(externsScope  ==  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	if(externsScope  ==  null)  {  return  false;  }	          if(externsScope!=    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	81	4	replace
512	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.isGlobalVarReference());  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.isGlobalVarReference());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null,  externsScope.isGlobalVarReference());	          Preconditions.checkState(v!=    null);    Preconditions.checkState(v    >>    null);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
513	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.NAME,  name);  [CE]  incomparable  types:  JSType  and  int  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.NAME,  name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.NAME,  name);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    sourceName);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	50	None	replace
514	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v!=  null  ||  v.isGlobal());  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v!=  null  ||  v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v!=  null  ||  v.isGlobal());	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.isGlobal());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	78	None	replace
515	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  externsScope.isGlobal());  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  externsScope.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  externsScope.isGlobal());	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.isGlobal());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	78	None	replace
516	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  v);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  v);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  s,  v);	  v    =    externsScope.getVar(name,    v,    s);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	53	None	replace
517	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  inExterns);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  inExterns);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  s,  inExterns);	  v    =    externsScope.getVar(name,    v,    s);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	53	None	replace
518	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  ||  name.length()  >  0);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  ||  name.length()  >  0);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.FUNCTION  ||  name.length()  >  0);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    &&    name.length()    >    0);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
519	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name,  externsScope);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name,  externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name,  externsScope);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	47	None	replace
520	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  v.getType()!=  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  v.getType()!=  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  &&  v.getType()!=  Token.VAR);	  Preconditions.checkState(v.getType()!=    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	35	None	replace
521	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name,  v);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name,  v);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
522	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name,  v.type);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name,  v.type);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name,  v.type);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
523	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(extternsScope);  Preconditions.checkState(externsScope  ==  null);  [CE]  cannot  find  symbol  extternsScope  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkNotNull(extternsScope);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkNotNull(extternsScope);  Preconditions.checkState(externsScope  ==  null);	  	non-compiled	[CE]  cannot  find  symbol  extternsScope	112	None	add
524	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotEmpty(externsScope);  Preconditions.checkNotNull(externsScope);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkNotEmpty(externsScope);  Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotEmpty(externsScope);  Preconditions.checkNotNull(externsScope);	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
525	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  [CE]  cannot  find  symbol  preconditions  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v    ==    null);    preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	5	None	add
526	[BUG]  [BUGGY]  s  =  externsScope.getVar(name,  false);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  s  =  externsScope.getVar(name,  false);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	s  =  externsScope.getVar(name,  false);	          s    =    externsScope.getVar(name);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	97	None	replace
527	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()!=  Token.GETPROP,  v);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()!=  Token.GETPROP,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()!=  Token.GETPROP,  v);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
528	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.getName(),  externsScope.getVar(name));  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.getName(),  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.getName(),  externsScope.getVar(name));	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	107	None	replace
529	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.getName(),  externsScope);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.getName(),  externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.getName(),  externsScope);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	107	None	replace
530	[BUG]  [BUGGY]  JSModule  module  =  externsScope.getModule(v);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  JSModule  module  =  externsScope.getModule(v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	JSModule  module  =  externsScope.getModule(v);	  JSModule    module    =    externsScope.getModule();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
531	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(externsScope,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(externsScope,  v);	  Preconditions.checkNotNull(v);    	compilable	  [FE]  AssertionFailedError  	29	4	replace
532	[BUG]  [BUGGY]  Preconditions.checkNotNull(externsScope,  v);  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(externsScope,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(externsScope,  v);	  Preconditions.checkNotNull(v);    	compilable	  [FE]  AssertionFailedError  	29	4	replace
533	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(externsRoot);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(externsRoot);	  Preconditions.checkNotNull(v);    	compilable	  [FE]  AssertionFailedError  	29	4	replace
534	[BUG]  [BUGGY]  Preconditions.checkNotNull(externsRoot);  [FE]  AssertionFailedError  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(externsRoot);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(externsRoot);	  Preconditions.checkNotNull(v);    	compilable	  [FE]  AssertionFailedError  	29	4	replace
535	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.CALL);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.CALL);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.CALL);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR,    v);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	77	None	replace
536	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  externsRoot);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  externsRoot);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME,  externsRoot);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
537	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME  ||  externsRoot.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME  ||  externsRoot.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME  ||  externsRoot.getType()  ==  Token.VAR);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
538	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.isGlobalVarReference(name));  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.isGlobalVarReference(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null,  externsScope.isGlobalVarReference(name));	          Preconditions.checkState(v!=    null);    Preconditions.checkState(v    >>    null);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
539	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.check(v!=  null);  Preconditions.checkState(v!=  null);  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);  Preconditions.check(v!=  null);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v!=    null);    Preconditions.check(v!=  null);  Preconditions.checkState(v!=  null);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
540	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null  &&  v.isLocal());	          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=    null);    	compilable	  [FE]  RuntimeException  	4	13	replace
541	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  v.isLocal());  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  &&  v.isLocal());	          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=    null);    	compilable	  [FE]  RuntimeException  	4	13	replace
542	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null  &&  v.isGlobal());	          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=    null);    	compilable	  [FE]  RuntimeException  	4	13	replace
543	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  v.isGlobal());  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  &&  v.isGlobal());	          Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=    null);    	compilable	  [FE]  RuntimeException  	4	13	replace
544	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v.isLocal());	          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope    ==    null);    	compilable	  [FE]  RuntimeException  	113	13	replace
545	[BUG]  [BUGGY]  Preconditions.checkArgument(v.isLocal());  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.isLocal());	          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope    ==    null);    	compilable	  [FE]  RuntimeException  	113	13	replace
546	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1);  V  =  v.getVar(name  +  1);  [CE]  cannot  find  symbol  V  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  1);  V  =  v.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  1);  V  =  v.getVar(name  +  1);	  v    =    externsScope.getVar(name    +    1);    V    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  cannot  find  symbol  V	23	None	replace
547	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR,  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	57	None	replace
548	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.NAME,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.NAME,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.NAME,  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	111	None	replace
549	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.toString());  [CE]  incomparable  types:  JSType  and  int  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.toString());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.toString());	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    sourceName);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	50	None	replace
550	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	90	1	add
551	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkState(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	90	1	add
552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkArgument(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	90	1	add
553	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkArgument(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	90	1	add
554	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope  ==  null);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkArgument(externsScope  ==  null);  Preconditions.checkArgument(externsScope!=  null);	  	compilable	  [FE]  RuntimeException  	90	13	add
555	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope  ==  null);  Preconditions.checkArgument(externsScope!=  null);  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);  Preconditions.checkArgument(externsScope  ==  null);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope!=    null);    Preconditions.checkArgument(externsScope  ==  null);  Preconditions.checkArgument(externsScope!=  null);	  	compilable	  [FE]  RuntimeException  	90	13	add
556	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.GETPROP  &&  externsScope.getVar(name)!=  null);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.GETPROP  &&  externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.GETPROP  &&  externsScope.getVar(name)!=  null);	  Preconditions.checkArgument(v.getType()!=    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	106	None	replace
557	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.GETPROP  &&  externsScope.hasVar(name));  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.GETPROP  &&  externsScope.hasVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.GETPROP  &&  externsScope.hasVar(name));	  Preconditions.checkArgument(v.getType()!=    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	106	None	replace
558	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.NAME,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.NAME,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.NAME,  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	104	None	replace
559	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.getName()  ||  v.isGlobal());  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.getName()  ||  v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.getName()  ||  v.isGlobal());	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	104	None	replace
560	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  externsRoot);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  externsRoot);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP,  externsRoot);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
561	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  s,  v.type);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  s,  v.type);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  s,  v.type);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    s);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	27	None	replace
562	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getVar(name).getType()  ==  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getVar(name).getType()  ==  Token.NAME);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getVar(name).getType()  ==  Token.NAME);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    externsScope.getVar(name));    	non-compiled	[CE]  incomparable  types:  JSType  and  int	86	None	replace
563	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  v.type);  [CE]  type  has  private  access  in  Var  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  v.type);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  s,  v.type);	  v    =    externsScope.getVar(name,    v,    s);    	non-compiled	[CE]  type  has  private  access  in  Var	53	None	replace
564	[BUG]  [BUGGY]  v  =  externsRoot.getVar(name).reference();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsRoot.getVar(name).reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsRoot.getVar(name).reference();	  v    =    s.getVar(name).reference();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
565	[BUG]  [BUGGY]  v  =  externsScope.getVar(name)-  2;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name)-  2;  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name)-  2;	  v    =    externsScope.getVar(name)+    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	30	None	replace
566	[BUG]  [BUGGY]          Preconditions.checkState(externsScope!=  null);  Context.checkState(externsScope!=  null);  [CE]  cannot  find  symbol  Context  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(externsScope!=  null);  Context.checkState(externsScope!=  null);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(externsScope!=    null);    Context.checkState(externsScope!=  null);	  	non-compiled	[CE]  cannot  find  symbol  Context	1	None	add
567	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null  &&!v.isLocal());	  Preconditions.checkState(v!=    null    &&!v.isGlobal());    	compilable	  [FE]  RuntimeException  	67	13	replace
568	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isLocal());  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  &&!v.isLocal());	  Preconditions.checkState(v!=    null    &&!v.isGlobal());    	compilable	  [FE]  RuntimeException  	67	13	replace
569	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.GETPROP,  externsScope);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.GETPROP,  externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.GETPROP,  externsScope);	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	117	None	replace
570	[BUG]  [BUGGY]  v  =  externsScope.getVar(name),  v.cloneTree();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name),  v.cloneTree();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name),  v.cloneTree();	  v    =    externsScope.getVar(name),    v.reference();    	non-compiled	[CE]  ';'  expected	69	None	replace
571	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(extternsScope);  Preconditions.checkState(externsScope!=  null);  [CE]  cannot  find  symbol  extternsScope  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);  Preconditions.checkNotNull(extternsScope);  Preconditions.checkState(externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope!=    null);    Preconditions.checkNotNull(extternsScope);  Preconditions.checkState(externsScope!=  null);	  	non-compiled	[CE]  cannot  find  symbol  extternsScope	40	None	add
572	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.NAME,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.NAME,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.NAME,  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.VAR    ||    v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	59	None	replace
573	[BUG]  [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getRootNode();  Preconditions.checkArgument(v.isGlobal());  [CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getRootNode();  Preconditions.checkArgument(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkArgument(v.isGlobal());    Node  v  =  externsScope.getRootNode();  Preconditions.checkArgument(v.isGlobal());	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)	98	None	add
574	[BUG]  [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Name  v  =  externsScope.getVar(name);  Preconditions.checkArgument(v.isGlobal());  [CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Name  v  =  externsScope.getVar(name);  Preconditions.checkArgument(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkArgument(v.isGlobal());    Name  v  =  externsScope.getVar(name);  Preconditions.checkArgument(v.isGlobal());	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)	98	None	add
575	[BUG]  [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getRootNode(name);  Preconditions.checkArgument(v.isGlobal());  [CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkArgument(v.isGlobal());  Node  v  =  externsScope.getRootNode(name);  Preconditions.checkArgument(v.isGlobal());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkArgument(v.isGlobal());    Node  v  =  externsScope.getRootNode(name);  Preconditions.checkArgument(v.isGlobal());	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)	98	None	add
576	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v  +  1,  s.toString());  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v  +  1,  s.toString());  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v  +  1,  s.toString());	  v    =    externsScope.getVar(name,    v    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	65	None	replace
577	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [CE]  no  suitable  method  found  for  checkArgument(Scope)  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);	  	non-compiled	[CE]  no  suitable  method  found  for  checkArgument(Scope)	87	None	add
578	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [CE]  no  suitable  method  found  for  checkState(Scope)  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(Scope)	87	None	add
579	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkEquals(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  Preconditions.checkEquals(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);    Preconditions.checkEquals(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
580	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  false).reference();  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  false).reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  false).reference();	  v    =    externsScope.getVar(name,    v).reference();    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	68	None	replace
581	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v).reference(s);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v).reference(s);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v).reference(s);	  v    =    externsScope.getVar(name,    v).reference();    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	68	None	replace
582	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  true);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  s,  v,  true);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s,  v,  true);	  v    =    externsScope.getVar(name,    s,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	55	None	replace
583	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v!=  null,  externesScope.getVar(name));  [CE]  cannot  find  symbol  externesScope  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  Preconditions.checkState(v!=  null,  externesScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null,    externsScope.getVar(name));    Preconditions.checkState(v!=  null,  externesScope.getVar(name));	  	non-compiled	[CE]  cannot  find  symbol  externesScope	100	None	add
584	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  *  3);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  *  3);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  *  3);	  v    =    externsScope.getVar(name    +    3);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	64	None	replace
585	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  *  2);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  *  2);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  *  2);	  v    =    externsScope.getVar(name    +    2);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	62	None	replace
586	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);    Preconditions.checkArgument(v  ==  null);	  	compilable	  [FE]  RuntimeException  	28	13	add
587	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v  ==  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);    Preconditions.checkArgument(v  ==  null);	  	compilable	  [FE]  RuntimeException  	28	13	add
588	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);    Preconditions.checkArgument(v.isLocal());	  	compilable	  [FE]  RuntimeException  	28	13	add
589	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v.isLocal());  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNotNull(v);  Preconditions.checkArgument(v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);    Preconditions.checkArgument(v.isLocal());	  	compilable	  [FE]  RuntimeException  	28	13	add
590	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  v.type);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  v.type);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR,  v.type);	  Preconditions.checkState(v.getType()    ==    Token.VAR,    v);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	95	None	replace
591	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  p,  s);  [CE]  cannot  find  symbol  p  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  p,  s);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  p,  s);	  v    =    externsScope.getVar(name,    s);    	non-compiled	[CE]  cannot  find  symbol  p	54	None	replace
592	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);Preconditions.checkArgument(externsScope.getVar(name)!=  null);	  	compilable	  [FE]  RuntimeException  	92	4	add
593	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);Preconditions.checkArgument(externsScope.getVar(name)!=  null);	  	compilable	  [FE]  RuntimeException  	92	4	add
594	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  preconditions.checkArgument(externsScope.getVar(name)!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  preconditions.checkArgument(externsScope.getVar(name)!=  null);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	92	None	add
595	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkState(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkState(externsScope.getVar(name)!=  null);	  	compilable	  [FE]  RuntimeException  	92	4	add
596	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkState(externsScope.getVar(name)!=  null);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);  Preconditions.checkState(externsScope.getVar(name)!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkArgument(externsScope.getVar(name)!=    null);    Preconditions.checkState(externsScope.getVar(name)!=  null);	  	compilable	  [FE]  RuntimeException  	92	4	add
597	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.toString());  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.toString());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.toString());	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	25	None	replace
598	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.NAME  ||  v.getType()!=  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.NAME  ||  v.getType()!=  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.NAME  ||  v.getType()!=  Token.VAR);	  Preconditions.checkArgument(v.getType()!=    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	105	None	replace
599	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1);  inExterns  =  v.getVar(name  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  1);  inExterns  =  v.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  1);  inExterns  =  v.getVar(name  +  1);	  v    =    externsScope.getVar(name    +    1);    inExterns    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
600	[BUG]  [BUGGY]  Integer  v  =  externsScope.getVar(name  +  1);  inExterns  =  v!=  null?  externsScope.getVar(name  +  1):  null;  [CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Integer  v  =  externsScope.getVar(name  +  1);  inExterns  =  v!=  null?  externsScope.getVar(name  +  1):  null;  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Integer  v  =  externsScope.getVar(name  +  1);  inExterns  =  v!=  null?  externsScope.getVar(name  +  1):  null;	  v    =    externsScope.getVar(name    +    1);    inExterns    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)	96	None	replace
601	[BUG]  [BUGGY]  v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);  Var  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);  Var  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v        =        externsScope.getVar(name        +        1);        v    =    externsScope.getVar(name    +    1);    Var  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
602	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
603	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
604	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  v.toString());  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  v.toString());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  v.toString());	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
605	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  v.name);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  v.name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  v.name);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
606	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  val);  [CE]  cannot  find  symbol  val  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  val);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  val);	  v    =    externsScope.getVar(name,    v,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  val	74	None	replace
607	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkState(v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null);  Preconditions.checkState(v.isGlobal());	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);    preconditions.checkNotNull(externsScope);    	compilable	  [FE]  RuntimeException  	89	13	replace
608	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkState(v.isGlobal());  [FE]  RuntimeException  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkState(v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null);  Preconditions.checkState(v.isGlobal());	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);    preconditions.checkNotNull(externsScope);    	compilable	  [FE]  RuntimeException  	89	13	replace
609	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkArgument(externsScope.getVar(name)  ==  null);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkArgument(externsScope.getVar(name)  ==  null);  Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	112	13	add
610	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkArgument(externsScope.getVar(name)  ==  null);  Preconditions.checkState(externsScope  ==  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);  Preconditions.checkArgument(externsScope.getVar(name)  ==  null);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkState(externsScope    ==    null);    Preconditions.checkArgument(externsScope.getVar(name)  ==  null);  Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	112	13	add
611	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null);  Node  v  =  externsScope.getVar(name);  Preconditions.checkArgument(v!=  null);  [CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Node  v  =  externsScope.getVar(name);  Preconditions.checkArgument(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=    null);    Node  v  =  externsScope.getVar(name);  Preconditions.checkArgument(v!=  null);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)	13	None	add
612	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v!=  null);Preconditions.checkArgument(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v!=    null);    Preconditions.checkArgument(v!=  null);Preconditions.checkArgument(v!=  null);	  	compilable	  [FE]  RuntimeException  	13	13	add
613	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v!=  null);Preconditions.checkArgument(v!=  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v!=  null);Preconditions.checkArgument(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=    null);    Preconditions.checkArgument(v!=  null);Preconditions.checkArgument(v!=  null);	  	compilable	  [FE]  RuntimeException  	13	13	add
614	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v!=  null);  v  =  externsScope.getVar(name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v!=    null);    Preconditions.checkArgument(v!=  null);  v  =  externsScope.getVar(name);	  	compilable	  [FE]  RuntimeException  	13	13	add
615	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v!=  null);  v  =  externsScope.getVar(name);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v!=  null);  v  =  externsScope.getVar(name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=    null);    Preconditions.checkArgument(v!=  null);  v  =  externsScope.getVar(name);	  	compilable	  [FE]  RuntimeException  	13	13	add
616	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null);  Node  v  =  externsScope.getVar(name);  preconditions.checkArgument(v!=  null);  [CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)  [FE]          RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Node  v  =  externsScope.getVar(name);  preconditions.checkArgument(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=    null);    Node  v  =  externsScope.getVar(name);  preconditions.checkArgument(v!=  null);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  isGlobalVarReference(String,Scope)	13	None	add
617	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  externsScope);  Preconditions.checkEquals(externsScope,  v);  [CE]  incomparable  types:  Var  and  Scope  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v  ==  externsScope);  Preconditions.checkEquals(externsScope,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  externsScope);  Preconditions.checkEquals(externsScope,  v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkEquals(externsScope,    v);    	non-compiled	[CE]  incomparable  types:  Var  and  Scope	114	None	replace
618	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkEquals(externsScope,  v);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null);  Preconditions.checkEquals(externsScope,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null);  Preconditions.checkEquals(externsScope,  v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkEquals(externsScope,    v);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
619	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkEquals(externsScope,  v);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null);  Preconditions.checkEquals(externsScope,  v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=  null);  Preconditions.checkEquals(externsScope,  v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkEquals(externsScope,    v);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
620	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v!=  null  &&  externsScope!=  null);	  Preconditions.checkState(v!=    null    &&    externsScope!=    null);    	compilable	  [FE]  RuntimeException  	103	13	replace
621	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null  &&  externsScope!=  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&  externsScope!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=  null  &&  externsScope!=  null);	  Preconditions.checkState(v!=    null    &&    externsScope!=    null);    	compilable	  [FE]  RuntimeException  	103	13	replace
622	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(v.isGlobal());  Preconditions.checkArgument(v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(v.isGlobal());  Preconditions.checkArgument(v.isLocal());	  	compilable	  [FE]  RuntimeException  	38	13	add
623	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(v.isGlobal());  Preconditions.checkArgument(v.isLocal());  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(v.isGlobal());  Preconditions.checkArgument(v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(v.isGlobal());  Preconditions.checkArgument(v.isLocal());	  	compilable	  [FE]  RuntimeException  	38	13	add
624	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v.isLocal());	  	compilable	  [FE]  RuntimeException  	38	13	add
625	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v.isLocal());  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v.isLocal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v.isLocal());	  	compilable	  [FE]  RuntimeException  	38	13	add
626	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v.isGlobal());	  	compilable	  [FE]  RuntimeException  	38	13	add
627	[BUG]  [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v.isGlobal());  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkNotNull(externsScope);        Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(v!=  null);  Preconditions.checkArgument(v.isGlobal());	  	compilable	  [FE]  RuntimeException  	38	13	add
628	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  4);  v  =  externalsScope.getVar(name  +  4);  [CE]  cannot  find  symbol  externalsScope  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  4);  v  =  externalsScope.getVar(name  +  4);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    4);    v  =  externalsScope.getVar(name  +  4);	  	non-compiled	[CE]  cannot  find  symbol  externalsScope	84	None	add
629	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  4);  ||  externsScope.getVar(name  +  4);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  4);  ||  externsScope.getVar(name  +  4);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    4);    ||  externsScope.getVar(name  +  4);	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
630	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.GETPROP,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.GETPROP,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.GETPROP,  v.getName());	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	107	None	replace
631	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.getName()  +  1);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.getName()  +  1);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.getName()  +  1);	  Preconditions.checkArgument(v.getType()    ==    Token.GETPROP,    v.getName());    	non-compiled	[CE]  incomparable  types:  JSType  and  int	107	None	replace
632	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1,  s,  v);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  1,  s,  v);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  1,  s,  v);	  v    =    externsScope.getVar(name    +    1,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	83	None	replace
633	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()!=  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()!=  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.VAR  ||  v.getType()!=  Token.FUNCTION);	  Preconditions.checkArgument(v.getType()!=    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	76	None	replace
634	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  &&  name.length()  >  0);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  &&  name.length()  >  0);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.FUNCTION  &&  name.length()  >  0);	  Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION    &&    name.length()    >    0);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	17	None	replace
635	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.check(v!=  null);  Preconditions.checkState(v  ==  null);  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.check(v!=  null);  Preconditions.checkState(v  ==  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v    ==    null);    Preconditions.check(v!=  null);  Preconditions.checkState(v  ==  null);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
636	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v    ==    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(v!=  null);	  	compilable	  [FE]  RuntimeException  	5	13	add
637	[BUG]  [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(v!=  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]          Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);  Preconditions.checkNotNull(externsScope);  Preconditions.checkState(v!=  null);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	                Preconditions.checkState(v!=        null);        Preconditions.checkState(v    ==    null);    Preconditions.checkNotNull(externsScope);  Preconditions.checkState(v!=  null);	  	compilable	  [FE]  RuntimeException  	5	13	add
638	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  3);  v  =  externalsScope.getVar(name  +  3);  [CE]  cannot  find  symbol  externalsScope  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  3);  v  =  externalsScope.getVar(name  +  3);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    3);    v  =  externalsScope.getVar(name  +  3);	  	non-compiled	[CE]  cannot  find  symbol  externalsScope	63	None	add
639	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  3);  ||  externsScope.getVar(name  +  3);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  3);  ||  externsScope.getVar(name  +  3);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    3);    ||  externsScope.getVar(name  +  3);	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
640	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope.getVar(name));  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  &&  externsScope.getVar(name));	  Preconditions.checkState(v!=    null,    externsScope.getVar(name));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	101	None	replace
641	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null  &&  v.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=  null  &&  v.getType()  ==  Token.VAR);	  Preconditions.checkState(v!=    null    &&    v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	94	None	replace
642	[BUG]  [BUGGY]  Preconditions.checkNonNull(v);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkNonNull(v);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNonNull(v);	          Preconditions.checkNotNull(externsScope);    Preconditions.checkNonNull(externsScope);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
643	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  v.getName());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR,  v.getName());	  Preconditions.checkState(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	36	None	replace
644	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  v.name);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  v.name);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR,  v.name);	  Preconditions.checkState(v.getType()    ==    Token.VAR,    name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	36	None	replace
645	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null,  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v!=  null,  externsScope.getVar(name));	  Preconditions.checkArgument(v!=    null);    	compilable	  [FE]  RuntimeException  	14	13	replace
646	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null,  externsScope.getVar(name));  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v!=  null,  externsScope.getVar(name));  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=  null,  externsScope.getVar(name));	  Preconditions.checkArgument(v!=    null);    	compilable	  [FE]  RuntimeException  	14	13	replace
647	[BUG]  [BUGGY]  Preconditions.checkState(externsScope!=  null  &&  externsScope.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope!=  null  &&  externsScope.getType()  ==  Token.VAR);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope!=  null  &&  externsScope.getType()  ==  Token.VAR);	  Preconditions.checkState(externsScope.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
648	[BUG]  [BUGGY]  Preconditions.checkState(externsScope.getType()  ==  Token.VAR  ||  externsScope.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(externsScope.getType()  ==  Token.VAR  ||  externsScope.getType()  ==  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope.getType()  ==  Token.VAR  ||  externsScope.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(externsScope.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
649	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  this);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name,  v,  s,  this);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  s,  this);	  v    =    externsScope.getVar(name,    v,    this);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	75	None	replace
650	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR  ||  externsScope.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR  ||  externsScope.getType()  ==  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR  ||  externsScope.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
651	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v!=  null  &&! "v.isGlobal());  [CE]  unclosed  string  literal  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Preconditions.checkState(v!=  null  &&! "v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&!v.isGlobal());    Preconditions.checkState(v!=  null  &&! "v.isGlobal());	  	non-compiled	[CE]  unclosed  string  literal	66	None	add
652	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Context.checkState(v!=  null  &&!v.isGlobal());  [CE]  cannot  find  symbol  Context  [FE]      RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  Context.checkState(v!=  null  &&!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=    null    &&!v.isGlobal());    Context.checkState(v!=  null  &&!v.isGlobal());	  	non-compiled	[CE]  cannot  find  symbol  Context	66	None	add
653	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  2);  ||  externsScope.getVar(name  +  2);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name  +  2);  ||  externsScope.getVar(name  +  2);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    2);    ||  externsScope.getVar(name  +  2);	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
654	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  if(v  ==  null  ||  externsScope!=  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	if(v  ==  null  ||  externsScope!=  null)  {  return  false;  }	          if(externsScope!=    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	81	4	replace
655	[BUG]  [BUGGY]  if(v  ==  null  ||  externsScope!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  if(v  ==  null  ||  externsScope!=  null)  {  return  false;  }  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	if(v  ==  null  ||  externsScope!=  null)  {  return  false;  }	          if(externsScope!=    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	81	4	replace
656	[BUG]  [BUGGY]  v  =  externsScope.getVar(name)&&  s.reference();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  v  =  externsScope.getVar(name)&&  s.reference();  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name)&&  s.reference();	  v    =    externsScope.getVar(name),    s.reference();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
657	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(!v.isGlobal());	  Preconditions.checkNotNull(v);    	compilable	  [FE]  RuntimeException  	29	13	replace
658	[BUG]  [BUGGY]  Preconditions.checkState(!v.isGlobal());  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkState(!v.isGlobal());  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(!v.isGlobal());	  Preconditions.checkNotNull(v);    	compilable	  [FE]  RuntimeException  	29	13	replace
659	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope!=  null  &&  externsScope.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(externsScope!=  null  &&  externsScope.getType()  ==  Token.FUNCTION);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope!=  null  &&  externsScope.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(externsScope.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
660	[BUG]  [BUGGY]  s  =  externsScope.getVar(name).replaceChild(n,  v);  [CE]  cannot  find  symbol  n  [FE]        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  s  =  externsScope.getVar(name).replaceChild(n,  v);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	s  =  externsScope.getVar(name).replaceChild(n,  v);	          s    =    externsScope.getVar(name);    	non-compiled	[CE]  cannot  find  symbol  n	97	None	replace
661	[BUG]  [BUGGY]  s  =  externsScope.findRootVar(name);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  s  =  externsScope.findRootVar(name);  [BUGGY]      }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	s  =  externsScope.findRootVar(name);	          s    =    externsScope.getVar(name);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
662	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.name,  v.type);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.name,  v.type);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.name,  v.type);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	49	None	replace
663	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.name,  v.inExterns);  [CE]  incomparable  types:  JSType  and  int  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {      [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.name,  v.inExterns);  [BUGGY]      v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.name,  v.inExterns);	  Preconditions.checkArgument(v.getType()    ==    Token.NAME,    v.name);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	49	None	replace
