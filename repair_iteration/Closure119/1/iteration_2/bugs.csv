bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkState(externsScope!=  null);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	        Preconditions.checkState(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
2	[BUG]  [BUGGY]      Preconditions.checkState(externsScope!=  null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkState(externsScope!=  null);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkState(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
3	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	        Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);	  	compilable	  [FE]  RuntimeException  	13	13	add
4	[BUG]  [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkState(v!=    null);    Preconditions.checkState(v!=  null);	  	compilable	  [FE]  RuntimeException  	13	13	add
5	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	        Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);	  	compilable	  [FE]  RuntimeException  	13	13	add
6	[BUG]  [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v  ==  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkState(v!=    null);    Preconditions.checkState(v  ==  null);	  	compilable	  [FE]  RuntimeException  	13	13	add
7	[BUG]  [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkState(v!=    null);    Preconditions.checkState(v  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	13	None	add
8	[BUG]  [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >>  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v  >>  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkState(v!=    null);    Preconditions.checkState(v  >>  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	13	None	add
9	[BUG]  [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v  [BUGGY]  null);  [CE]  ')'  expected  [FE]            RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v  [BUGGY]  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkState(v!=    null);    Preconditions.checkState(v  [BUGGY]  null);	  	non-compiled	[CE]  ')'  expected	13	None	add
10	[BUG]  [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v  [Delete]  null);  [CE]  ')'  expected  [FE]              RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkState(v!=  null);  Preconditions.checkState(v  [Delete]  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkState(v!=    null);    Preconditions.checkState(v  [Delete]  null);	  	non-compiled	[CE]  ')'  expected	13	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v  ==  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v  ==  null);	      Preconditions.checkState(v!=    null);    	compilable	  [FE]  AssertionFailedError  	14	4	replace
12	[BUG]  [BUGGY]  Preconditions.checkState(v  ==  null);  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v  ==  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v  ==  null);	      Preconditions.checkState(v!=    null);    	compilable	  [FE]  AssertionFailedError  	14	4	replace
13	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkArgument(v!=  null);	      Preconditions.checkState(v!=    null);    	compilable	  [FE]  RuntimeException  	14	13	replace
14	[BUG]  [BUGGY]  Preconditions.checkArgument(v!=  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v!=  null);	      Preconditions.checkState(v!=    null);    	compilable	  [FE]  RuntimeException  	14	13	replace
15	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name);  [CE]  incomparable  types:  JSType  and  int  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION,  name);	      Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	17	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.FUNCTION);	      Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  name.length()  >  0);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  name.length()  >  0);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  &&  name.length()  >  0);	      Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	17	None	replace
18	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  name.length()  ==  0);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  name.length()  ==  0);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  name.length()  ==  0);	      Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	17	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);	  	compilable	  [FE]  AssertionFailedError  	2	1	add
20	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1);	  	compilable	  [FE]  AssertionFailedError  	2	1	add
21	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1);  VAR  v  =  externsScope.getVar(name  +  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  1);  VAR  v  =  externsScope.getVar(name  +  1);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    1);    VAR  v  =  externsScope.getVar(name  +  1);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
22	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  1);  v  =  externsScope.getVar(name  +  1));  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    1);    v  =  externsScope.getVar(name  +  1));	  	non-compiled	[CE]  ';'  expected	2	None	add
23	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1);  V  =  externsScope.getVar(name  +  1);  [CE]  cannot  find  symbol  V  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  1);  V  =  externsScope.getVar(name  +  1);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    1);    V  =  externsScope.getVar(name  +  1);	  	non-compiled	[CE]  cannot  find  symbol  V	2	None	add
24	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.GETPROP);	      Preconditions.checkArgument(v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name);  [CE]  incomparable  types:  JSType  and  int  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  name);	      Preconditions.checkArgument(v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
26	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  ||  v.getType()  ==  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  ||  v.getType()  ==  Token.GETPROP);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP  ||  v.getType()  ==  Token.GETPROP);	      Preconditions.checkArgument(v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  s);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  s);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  s);	      Preconditions.checkArgument(v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
28	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkNotNull(v);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkNotNull(v);	      Preconditions.checkNotNull(externsScope);    	compilable	  [FE]  RuntimeException  	10	13	replace
29	[BUG]  [BUGGY]  Preconditions.checkNotNull(v);  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkNotNull(v);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkNotNull(v);	      Preconditions.checkNotNull(externsScope);    	compilable	  [FE]  RuntimeException  	10	13	replace
30	[BUG]  [BUGGY]  v  =  externsScope.getVar(name)+  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name)+  2;  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name)+  2;	  v    =    externsScope.getVar(name)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	4	None	replace
31	[BUG]  [BUGGY]  v  =  externsScope.getVar(name)+  3;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name)+  3;  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name)+  3;	  v    =    externsScope.getVar(name)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	4	None	replace
32	[BUG]  [BUGGY]  v  =  externsScope.getVar(name)/  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name)/  1;  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name)/  1;	  v    =    externsScope.getVar(name)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	4	None	replace
33	[BUG]  [BUGGY]  v  =  externsScope.getVar(name)+  4;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name)+  4;  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name)+  4;	  v    =    externsScope.getVar(name)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	4	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(externsScope.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(externsScope.getType()  ==  Token.VAR);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(externsScope.getType()  ==  Token.VAR);	      Preconditions.checkState(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()!=  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v.getType()!=  Token.VAR);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()!=  Token.VAR);	      Preconditions.checkState(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	16	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  name);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  name);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR,  name);	      Preconditions.checkState(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	16	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.NAME);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.NAME);	      Preconditions.checkState(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	16	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
39	[BUG]  [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	        Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
41	[BUG]  [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
42	[BUG]  [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(extrasScope);  [CE]  cannot  find  symbol  extrasScope  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(extrasScope);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrasScope);	  	non-compiled	[CE]  cannot  find  symbol  extrasScope	9	None	add
43	[BUG]  [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(extrsScope);  [CE]  cannot  find  symbol  extrsScope  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(extrsScope);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(extrsScope);	  	non-compiled	[CE]  cannot  find  symbol  extrsScope	9	None	add
44	[BUG]  [BUGGY]  v  =  s.getVar(name).reference();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  s.getVar(name).reference();  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  s.getVar(name).reference();	  v    =    externsScope.getVar(name).reference();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
45	[BUG]  [BUGGY]  v  =  externsScope.getVar(name),  s.reference();  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name),  s.reference();  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name),  s.reference();	  v    =    externsScope.getVar(name).reference();    	non-compiled	[CE]  ';'  expected	5	None	replace
46	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s).reference();  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name,  s).reference();  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s).reference();	  v    =    externsScope.getVar(name).reference();    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	5	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  name);	      Preconditions.checkArgument(v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	12	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.NAME);	      Preconditions.checkArgument(v.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.name);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.name);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.name);	      Preconditions.checkArgument(v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	12	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  sourceName);  [CE]  incomparable  types:  JSType  and  int  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  sourceName);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  sourceName);	      Preconditions.checkArgument(v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	12	None	replace
51	[BUG]  [BUGGY]  JSModule  module  =  scope.getModule();  [CE]  cannot  find  symbol  scope  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  JSModule  module  =  scope.getModule();  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	JSModule  module  =  scope.getModule();	      JSModule    module    =    s.getModule();    	non-compiled	[CE]  cannot  find  symbol  scope	8	None	replace
52	[BUG]  [BUGGY]  JSModule  module  =  s,  scope.getModule();  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  JSModule  module  =  s,  scope.getModule();  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	JSModule  module  =  s,  scope.getModule();	      JSModule    module    =    s.getModule();    	non-compiled	[CE]  ';'  expected	8	None	replace
53	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  s);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name,  v,  s);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  s);	  v    =    externsScope.getVar(name,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	1	None	replace
54	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name,  s);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s);	  v    =    externsScope.getVar(name,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	1	None	replace
55	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  s,  v);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name,  s,  v);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  s,  v);	  v    =    externsScope.getVar(name,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	1	None	replace
56	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  false);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name,  v,  false);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  false);	  v    =    externsScope.getVar(name,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	1	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  name);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  name);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR,  name);	      Preconditions.checkArgument(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	11	None	replace
58	[BUG]  [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(externsScope.getType()  ==  Token.VAR);	      Preconditions.checkArgument(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
59	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.NAME);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.NAME);	      Preconditions.checkArgument(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	11	None	replace
60	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.VAR);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.VAR);	      Preconditions.checkArgument(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	11	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  2);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	v  =  externsScope.getVar(name  +  2);	  v    =    externsScope.getVar(name    +    1);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
62	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  2);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  2);	  v    =    externsScope.getVar(name    +    1);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  3);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	v  =  externsScope.getVar(name  +  3);	  v    =    externsScope.getVar(name    +    1);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
64	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  3);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  3);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  3);	  v    =    externsScope.getVar(name    +    1);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
65	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name,  v  +  1);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v  +  1);	  v    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	3	None	replace
66	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null  &&!v.isGlobal());	      Preconditions.checkState(v!=    null);    	compilable	  [FE]  RuntimeException  	14	13	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v!=  null  &&!v.isGlobal());  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  &&!v.isGlobal());	      Preconditions.checkState(v!=    null);    	compilable	  [FE]  RuntimeException  	14	13	replace
68	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v).reference();  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name,  v).reference();  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v).reference();	  v    =    externsScope.getVar(name).reference();    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	5	None	replace
69	[BUG]  [BUGGY]  v  =  externsScope.getVar(name),  v.reference();  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name),  v.reference();  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name),  v.reference();	  v    =    externsScope.getVar(name).reference();    	non-compiled	[CE]  ';'  expected	5	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETELEM);  [CE]  incomparable  types:  JSType  and  int  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETELEM);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETELEM);	      Preconditions.checkArgument(v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  externsScope.getVar(name));  [CE]  incomparable  types:  JSType  and  int  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  externsScope.getVar(name));  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  externsScope.getVar(name));	      Preconditions.checkArgument(v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
72	[BUG]  [BUGGY]  JSModule  module  =  externsScope.getModule();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  JSModule  module  =  externsScope.getModule();  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	JSModule  module  =  externsScope.getModule();	      JSModule    module    =    s.getModule();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
73	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  null);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name,  v,  null);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  null);	  v    =    externsScope.getVar(name,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	1	None	replace
74	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name,  v,  sourceName);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  sourceName);	  v    =    externsScope.getVar(name,    v);    	non-compiled	[CE]  cannot  find  symbol  sourceName	1	None	replace
75	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v,  this);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name,  v,  this);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v,  this);	  v    =    externsScope.getVar(name,    v);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	1	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.VAR);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.VAR);	      Preconditions.checkArgument(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	11	None	replace
77	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  v);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR,  v);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR,  v);	      Preconditions.checkArgument(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	11	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.isGlobal());  [CE]  incomparable  types:  JSType  and  int  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.isGlobal());  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.isGlobal());	      Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	17	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.FUNCTION);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.FUNCTION);	      Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	17	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      if(externsScope!=  null)  {  return  false;  }  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	        if(externsScope!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	4	add
81	[BUG]  [BUGGY]      if(externsScope!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      if(externsScope!=  null)  {  return  false;  }  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        if(externsScope!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	4	add
82	[BUG]  [BUGGY]      Preconditions.checkState(v!=  null);  preconditions.checkState(v!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]    RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkState(v!=  null);  preconditions.checkState(v!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkState(v!=    null);    preconditions.checkState(v!=  null);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	13	None	add
83	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1,  v);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  1,  v);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  1,  v);	  v    =    externsScope.getVar(name    +    1);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	3	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  4);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	v  =  externsScope.getVar(name  +  4);	  v    =    externsScope.getVar(name    +    1);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
85	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  4);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  4);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  4);	  v    =    externsScope.getVar(name    +    1);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
86	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  externsScope.getVar(name));  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  externsScope.getVar(name));  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  externsScope.getVar(name));	      Preconditions.checkArgument(v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	12	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
88	[BUG]  [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);Preconditions.checkNotNull(externsScope);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
89	[BUG]  [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  preconditions.checkNotNull(externsScope);  [CE]  cannot  find  symbol  preconditions  [FE]      AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNotNull(externsScope);  preconditions.checkNotNull(externsScope);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkNotNull(externsScope);    Preconditions.checkNotNull(externsScope);  preconditions.checkNotNull(externsScope);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	9	None	add
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	        Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
91	[BUG]  [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope!=  null);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope!=  null);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
92	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	        Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);	  	compilable	  [FE]  RuntimeException  	9	4	add
93	[BUG]  [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkArgument(externsScope.getVar(name)!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkNotNull(externsScope);    Preconditions.checkArgument(externsScope.getVar(name)!=  null);	  	compilable	  [FE]  RuntimeException  	9	4	add
94	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v!=  null  &&  v.getType()  ==  Token.VAR);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  &&  v.getType()  ==  Token.VAR);	      Preconditions.checkState(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	16	None	replace
95	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  v);  [CE]  incomparable  types:  JSType  and  int  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR,  v);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR,  v);	      Preconditions.checkState(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	16	None	replace
96	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1);  inExterns  =  externsScope.getVar(name  +  1);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  v  =  externsScope.getVar(name  +  1);  inExterns  =  externsScope.getVar(name  +  1);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v    =    externsScope.getVar(name    +    1);    inExterns  =  externsScope.getVar(name  +  1);	  	non-compiled	[CE]  incompatible  types	2	None	add
97	[BUG]  [BUGGY]      s  =  externsScope.getVar(name);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      s  =  externsScope.getVar(name);  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        s  =  externsScope.getVar(name);	  	non-compiled	[CE]  incompatible  types	6	None	add
98	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkArgument(v.isGlobal());  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	        Preconditions.checkArgument(v.isGlobal());	  	compilable	  [FE]  RuntimeException  	6	13	add
99	[BUG]  [BUGGY]      Preconditions.checkArgument(v.isGlobal());  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkArgument(v.isGlobal());  [BUGGY]    }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkArgument(v.isGlobal());	  	compilable	  [FE]  RuntimeException  	6	13	add
100	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null,  externsScope.getVar(name));	      Preconditions.checkState(v!=    null);    	compilable	  [FE]  RuntimeException  	14	13	replace
101	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v!=  null,  externsScope.getVar(name));  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null,  externsScope.getVar(name));	      Preconditions.checkState(v!=    null);    	compilable	  [FE]  RuntimeException  	14	13	replace
102	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	Preconditions.checkState(v!=  null  &&  externsScope!=  null);	      Preconditions.checkState(v!=    null);    	compilable	  [FE]  RuntimeException  	14	13	replace
103	[BUG]  [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v!=  null  &&  externsScope!=  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v!=  null  &&  externsScope!=  null);	      Preconditions.checkState(v!=    null);    	compilable	  [FE]  RuntimeException  	14	13	replace
104	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.getName());  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.NAME,  v.getName());	      Preconditions.checkArgument(v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	12	None	replace
105	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.NAME);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.NAME);	      Preconditions.checkArgument(v.getType()    ==    Token.NAME);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	12	None	replace
106	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()!=  Token.GETPROP);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()!=  Token.GETPROP);	      Preconditions.checkArgument(v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
107	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.getName());  [CE]  incomparable  types:  JSType  and  int  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.getName());  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.GETPROP,  v.getName());	      Preconditions.checkArgument(v.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	15	None	replace
108	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.VAR);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.VAR);	      Preconditions.checkState(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	16	None	replace
109	[BUG]  [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.FUNCTION);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkState(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.FUNCTION);	      Preconditions.checkState(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	16	None	replace
110	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.VAR);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.VAR);	      Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	17	None	replace
111	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.NAME);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION  ||  v.getType()  ==  Token.NAME);	      Preconditions.checkArgument(v.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	17	None	replace
112	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	        Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	9	13	add
113	[BUG]  [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkState(externsScope  ==  null);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkNotNull(externsScope);    Preconditions.checkState(externsScope  ==  null);	  	compilable	  [FE]  RuntimeException  	9	13	add
114	[BUG]  [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkEquals(externsScope,  v);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkEquals(externsScope,  v);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkNotNull(externsScope);    Preconditions.checkEquals(externsScope,  v);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
115	[BUG]  [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNonNull(externsScope);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]      Preconditions.checkNotNull(externsScope);  Preconditions.checkNonNull(externsScope);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	        Preconditions.checkNotNull(externsScope);    Preconditions.checkNonNull(externsScope);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
116	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.FUNCTION);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.FUNCTION);	      Preconditions.checkArgument(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	11	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {    [BUGGY]  Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.GETPROP);  [BUGGY]    v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	Preconditions.checkArgument(v.getType()  ==  Token.VAR  ||  v.getType()  ==  Token.GETPROP);	      Preconditions.checkArgument(v.getType()    ==    Token.VAR);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	11	None	replace
