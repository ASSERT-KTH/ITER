bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  v  =  externsScope.getVar(name,  v);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]  v  =  externsScope.getVar(name,  v);  [BUGGY]  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name,  v);	v  =  externsScope.getVar(name);  	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	1	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]  v  =  externsScope.getVar(name  +  1);  [BUGGY]  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	v  =  externsScope.getVar(name  +  1);	v  =  externsScope.getVar(name);  	compilable	  [FE]  AssertionFailedError  	1	4	replace
3	[BUG]  [BUGGY]  v  =  externsScope.getVar(name  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]  v  =  externsScope.getVar(name  +  1);  [BUGGY]  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name  +  1);	v  =  externsScope.getVar(name);  	compilable	  [FE]  AssertionFailedError  	1	4	replace
4	[BUG]  [BUGGY]  v  =  externsScope.getVar(name)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]  v  =  externsScope.getVar(name)+  1;  [BUGGY]  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name)+  1;	v  =  externsScope.getVar(name);  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
5	[BUG]  [BUGGY]  v  =  externsScope.getVar(name).reference();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]  v  =  externsScope.getVar(name).reference();  [BUGGY]  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	v  =  externsScope.getVar(name).reference();	v  =  externsScope.getVar(name);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]    [BUGGY]  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	  	v  =  externsScope.getVar(name);  	compilable	  [FE]  AssertionFailedError  	1	4	replace
7	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]    [BUGGY]  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	  	v  =  externsScope.getVar(name);  	compilable	  [FE]  AssertionFailedError  	1	4	replace
8	[BUG]  [BUGGY]    JSModule  module  =  s.getModule();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]    JSModule  module  =  s.getModule();  [BUGGY]  v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	    JSModule  module  =  s.getModule();		non-compiled	[CE]  cannot  find  symbol	2	None	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]    Preconditions.checkNotNull(externsScope);  [BUGGY]  v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	    Preconditions.checkNotNull(externsScope);		compilable	  [FE]  AssertionFailedError  	2	1	add
10	[BUG]  [BUGGY]    Preconditions.checkNotNull(externsScope);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]    Preconditions.checkNotNull(externsScope);  [BUGGY]  v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	    Preconditions.checkNotNull(externsScope);		compilable	  [FE]  AssertionFailedError  	2	1	add
11	[BUG]  [BUGGY]    Preconditions.checkArgument(v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]        AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]    Preconditions.checkArgument(v.getType()  ==  Token.VAR);  [BUGGY]  v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	    Preconditions.checkArgument(v.getType()  ==  Token.VAR);		non-compiled	[CE]  incomparable  types:  JSType  and  int	2	None	add
12	[BUG]  [BUGGY]    Preconditions.checkArgument(v.getType()  ==  Token.NAME);  [CE]  incomparable  types:  JSType  and  int  [FE]          AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]    Preconditions.checkArgument(v.getType()  ==  Token.NAME);  [BUGGY]  v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	    Preconditions.checkArgument(v.getType()  ==  Token.NAME);		non-compiled	[CE]  incomparable  types:  JSType  and  int	2	None	add
13	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]    Preconditions.checkState(v!=  null);  [BUGGY]  v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	add	    Preconditions.checkState(v!=  null);		compilable	  [FE]  RuntimeException  	2	13	add
14	[BUG]  [BUGGY]    Preconditions.checkState(v!=  null);  [FE]  RuntimeException  [FE]            AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]    Preconditions.checkState(v!=  null);  [BUGGY]  v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	    Preconditions.checkState(v!=  null);		compilable	  [FE]  RuntimeException  	2	13	add
15	[BUG]  [BUGGY]    Preconditions.checkArgument(v.getType()  ==  Token.GETPROP);  [CE]  incomparable  types:  JSType  and  int  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]    Preconditions.checkArgument(v.getType()  ==  Token.GETPROP);  [BUGGY]  v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	    Preconditions.checkArgument(v.getType()  ==  Token.GETPROP);		non-compiled	[CE]  incomparable  types:  JSType  and  int	2	None	add
16	[BUG]  [BUGGY]    Preconditions.checkState(v.getType()  ==  Token.VAR);  [CE]  incomparable  types:  JSType  and  int  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]    Preconditions.checkState(v.getType()  ==  Token.VAR);  [BUGGY]  v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	    Preconditions.checkState(v.getType()  ==  Token.VAR);		non-compiled	[CE]  incomparable  types:  JSType  and  int	2	None	add
17	[BUG]  [BUGGY]    Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION);  [CE]  incomparable  types:  JSType  and  int  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  isGlobalVarReference(String  name,  Scope  s)  {  Scope.Var  v  =  s.getVar(name);  if  (v  ==  null  &&  externsScope  !=  null)  {  [BUGGY]    Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION);  [BUGGY]  v  =  externsScope.getVar(name);  }  return  v  !=  null  &&  !v.isLocal();  }  [CLASS]  GlobalNamespace  AstChange  BuildGlobalNamespace  Name  Type  Ref  Type  Tracker  [METHOD]  isGlobalVarReference  [RETURN_TYPE]  boolean  String  name  Scope  s  [VARIABLES]  PrintStream  stream  Set  previousSymbolsInTree  Var  v  Node  externsRoot  n  node  root  String  baseName  name  topVarName  JSDocInfo  docInfo  int  aliasingGets  callGets  currentPreOrderIndex  deleteProps  firstDotIndex  globalSets  index  localSets  preOrderIndex  totalGets  Name  name  parent  slot  Predicate  isInterestingSymbol  AbstractCompiler  compiler  Type  ALIASING_GET  CALL_GET  DELETE_PROP  DIRECT_GET  FUNCTION  GET  OBJECTLIT  OTHER  PROTOTYPE_GET  SET  SET_FROM_GLOBAL  SET_FROM_LOCAL  type  Ref  declaration  original  twin  boolean  declaredType  generated  hasDeclaredTypeDescendant  inExterns  Scope  externsScope  s  scope  JSModule  module  List  globalNames  newNodes  props  refs  StaticSourceFile  source  Map  nameMap  	projects/Closure119/src/com/google/javascript/jscomp/GlobalNamespace.java	0.2773500981126146	264	264	1	replace	    Preconditions.checkArgument(v.getType()  ==  Token.FUNCTION);		non-compiled	[CE]  incomparable  types:  JSType  and  int	2	None	add
