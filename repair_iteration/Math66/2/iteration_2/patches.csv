bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  tol1;	  u    =    d    +    tol1;    	compilable	  [FE]  AssertionError  	153	5	replace
2	[BUG]  [BUGGY]  u  =  d  *  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  tol1;	  u    =    d    +    tol1;    	compilable	  [FE]  AssertionError  	153	5	replace
3	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  d  +  x);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  +  x);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  x;  u  =  d  +  x);	  u    =    d    +    x;    u    =    d    +    x);    	non-compiled	[CE]  ';'  expected	18	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  1;  u  =  d  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  1;  u  =  d  +  1;	  u    =    d    +    x;    u    =    d    +    x);    	compilable	  [FE]  AssertionError  	18	5	replace
5	[BUG]  [BUGGY]  u  =  d  +  1;  u  =  d  +  1;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  1;  u  =  d  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  1;  u  =  d  +  1;	  u    =    d    +    x;    u    =    d    +    x);    	compilable	  [FE]  AssertionError  	18	5	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  m  +  a;	          d    =    p    /    m;    d    =    p    /    m    +    a;    	compilable	  [FE]  AssertionError  	9	5	replace
7	[BUG]  [BUGGY]  d  =  p  /  m  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  m  +  a;	          d    =    p    /    m;    d    =    p    /    m    +    a;    	compilable	  [FE]  AssertionError  	9	5	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  /  q  +  1;	          d    =    m    /    q;    d    =    m    /    q;    	compilable	  [FE]  AssertionError  	122	5	replace
9	[BUG]  [BUGGY]  d  =  m  /  q  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  /  q  +  1;	          d    =    m    /    q;    d    =    m    /    q;    	compilable	  [FE]  AssertionError  	122	5	replace
10	[BUG]  [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol1)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
11	[BUG]  [BUGGY]  if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol1)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
12	[BUG]  [BUGGY]  if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  }  else  {  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  }  else  {  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  }  else  {  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol1)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  /  q;  d  =  p  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    1;    d  =  p  /  q;  d  =  p  /  q  +  1;	  	compilable	  [FE]  AssertionError  	239	5	add
14	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  /  q;  d  =  p  /  q  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  /  q;  d  =  p  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    1;    d  =  p  /  q;  d  =  p  /  q  +  1;	  	compilable	  [FE]  AssertionError  	239	5	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  %  q;  d  =  p  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    1;    d  =  p  %  q;  d  =  p  /  q  +  1;	  	compilable	  [FE]  AssertionError  	239	5	add
16	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  %  q;  d  =  p  /  q  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  %  q;  d  =  p  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    1;    d  =  p  %  q;  d  =  p  /  q  +  1;	  	compilable	  [FE]  AssertionError  	239	5	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  /  q;  d  =  p  /  q  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    1;    d  =  p  /  q;  d  =  p  /  q  +  2;	  	compilable	  [FE]  AssertionError  	239	5	add
18	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  /  q;  d  =  p  /  q  +  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  /  q;  d  =  p  /  q  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    1;    d  =  p  /  q;  d  =  p  /  q  +  2;	  	compilable	  [FE]  AssertionError  	239	5	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  /  q;  d  =  p  %  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    1;    d  =  p  /  q;  d  =  p  %  q  +  1;	  	compilable	  [FE]  AssertionError  	239	5	add
20	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  /  q;  d  =  p  %  q  +  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  /  q;  d  =  p  %  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    1;    d  =  p  /  q;  d  =  p  %  q  +  1;	  	compilable	  [FE]  AssertionError  	239	5	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  *  q;  d  =  p  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    1;    d  =  p  *  q;  d  =  p  /  q  +  1;	  	compilable	  [FE]  AssertionError  	239	5	add
22	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  *  q;  d  =  p  /  q  +  1;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  *  q;  d  =  p  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    1;    d  =  p  *  q;  d  =  p  /  q  +  1;	  	compilable	  [FE]  AssertionError  	239	5	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  r  +  q;	  d    =    p    *    q    +    r;    	compilable	  [FE]  AssertionError  	179	5	replace
24	[BUG]  [BUGGY]  d  =  p  *  r  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  r  +  q;	  d    =    p    *    q    +    r;    	compilable	  [FE]  AssertionError  	179	5	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  *  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  q  *  r  +  1;	  d    =    p    *    q    +    r;    	compilable	  [FE]  AssertionError  	179	5	replace
26	[BUG]  [BUGGY]  d  =  p  *  q  *  r  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  *  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  *  r  +  1;	  d    =    p    *    q    +    r;    	compilable	  [FE]  AssertionError  	179	5	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  +  r;	  d    =    p    *    q    +    r;    	compilable	  [FE]  AssertionError  	179	5	replace
28	[BUG]  [BUGGY]  d  =  p  /  q  +  r;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  +  r;	  d    =    p    *    q    +    r;    	compilable	  [FE]  AssertionError  	179	5	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  r  +  m;	  d    =    p    *    q    +    r;    	compilable	  [FE]  AssertionError  	179	5	replace
30	[BUG]  [BUGGY]  d  =  p  *  r  +  m;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  r  +  m;	  d    =    p    *    q    +    r;    	compilable	  [FE]  AssertionError  	179	5	replace
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
32	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  t))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  t))  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
34	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  t))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  t))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  t))  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  d))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  d))  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
36	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  d))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  d))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  d))  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
38	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  r;  u  =  p  +  d;	  u    =    a    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	88	5	replace
40	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  r;  u  =  p  +  d;	  u    =    a    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	88	5	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  u  =  p  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  d;  u  =  p  +  r;	  u    =    a    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	88	5	replace
42	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  p  +  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  u  =  p  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  d;  u  =  p  +  r;	  u    =    a    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	88	5	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  r  +  q;	  u    =    q    +    r;    	compilable	  [FE]  AssertionError  	226	5	replace
44	[BUG]  [BUGGY]  u  =  r  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  r  +  q;	  u    =    q    +    r;    	compilable	  [FE]  AssertionError  	226	5	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  q  *  r;	  u    =    q    +    r;    	compilable	  [FE]  AssertionError  	226	5	replace
46	[BUG]  [BUGGY]  u  =  q  *  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  q  *  r;	  u    =    q    +    r;    	compilable	  [FE]  AssertionError  	226	5	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  r;	  u    =    q    +    r;    	compilable	  [FE]  AssertionError  	226	5	replace
48	[BUG]  [BUGGY]  u  =  m  +  r;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  r;	  u    =    q    +    r;    	compilable	  [FE]  AssertionError  	226	5	replace
49	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	175	None	replace
50	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMin  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMin  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMin	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  ';'  expected	175	None	replace
51	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  is  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  is  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  is	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  ';'  expected	175	None	replace
52	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinim  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinim  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinim	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  not  a  statement	175	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  q;  u  =  d  +  x;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    d    +    q;    u  =  d  +  x;  u  =  d  +  q;	  	compilable	  [FE]  AssertionError  	19	4	add
54	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  d  +  q;  u  =  d  +  x;  u  =  d  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  q;  u  =  d  +  x;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    d    +    q;    u  =  d  +  x;  u  =  d  +  q;	  	compilable	  [FE]  AssertionError  	19	4	add
55	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  d  +  q;  U  =  d  +  x;  u  =  d  +  q;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  q;  U  =  d  +  x;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    d    +    q;    U  =  d  +  x;  u  =  d  +  q;	  	non-compiled	[CE]  cannot  find  symbol  U	19	None	add
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  q;  u  =  a  +  x;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    d    +    q;    u  =  a  +  x;  u  =  d  +  q;	  	compilable	  [FE]  AssertionError  	19	4	add
57	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  d  +  q;  u  =  a  +  x;  u  =  d  +  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  q;  u  =  a  +  x;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    d    +    q;    u  =  a  +  x;  u  =  d  +  q;	  	compilable	  [FE]  AssertionError  	19	4	add
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  q;  u  =  d  +  q;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    d    +    q;    u  =  d  +  q;  u  =  d  +  q;	  	compilable	  [FE]  AssertionError  	19	4	add
59	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  d  +  q;  u  =  d  +  q;  u  =  d  +  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  q;  u  =  d  +  q;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    d    +    q;    u  =  d  +  q;  u  =  d  +  q;	  	compilable	  [FE]  AssertionError  	19	4	add
60	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  1;  d  =  p  /  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    m    +    1;    d  =  p  /  m  +  1;	  	compilable	  [FE]  AssertionError  	49	5	add
61	[BUG]  [BUGGY]  d  =  p  /  m  +  1;  d  =  p  /  m  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  1;  d  =  p  /  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    m    +    1;    d  =  p  /  m  +  1;	  	compilable	  [FE]  AssertionError  	49	5	add
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  1;  d  =  p  %  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    m    +    1;    d  =  p  %  m  +  1;	  	compilable	  [FE]  AssertionError  	49	5	add
63	[BUG]  [BUGGY]  d  =  p  /  m  +  1;  d  =  p  %  m  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  1;  d  =  p  %  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    m    +    1;    d  =  p  %  m  +  1;	  	compilable	  [FE]  AssertionError  	49	5	add
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  1;  d  =  p  /  m  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    m    +    1;    d  =  p  /  m  +  2;	  	compilable	  [FE]  AssertionError  	49	5	add
65	[BUG]  [BUGGY]  d  =  p  /  m  +  1;  d  =  p  /  m  +  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  1;  d  =  p  /  m  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    m    +    1;    d  =  p  /  m  +  2;	  	compilable	  [FE]  AssertionError  	49	5	add
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  1;  d  =  p  *  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    m    +    1;    d  =  p  *  m  +  1;	  	compilable	  [FE]  AssertionError  	49	5	add
67	[BUG]  [BUGGY]  d  =  p  /  m  +  1;  d  =  p  *  m  +  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  1;  d  =  p  *  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    m    +    1;    d  =  p  *  m  +  1;	  	compilable	  [FE]  AssertionError  	49	5	add
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  1;  u  =  u  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  u  +  1;  u  =  u  +  1;	  u    =    u    +    d;    u    =    u    +    d;    	compilable	  [FE]  AssertionError  	106	5	replace
69	[BUG]  [BUGGY]  u  =  u  +  1;  u  =  u  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  1;  u  =  u  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  u  +  1;  u  =  u  +  1;	  u    =    u    +    d;    u    =    u    +    d;    	compilable	  [FE]  AssertionError  	106	5	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  3;  u  =  u  +  3;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  u  +  3;  u  =  u  +  3;	  u    =    u    +    d;    u    =    u    +    d;    	compilable	  [FE]  AssertionError  	106	5	replace
71	[BUG]  [BUGGY]  u  =  u  +  3;  u  =  u  +  3;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  3;  u  =  u  +  3;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  u  +  3;  u  =  u  +  3;	  u    =    u    +    d;    u    =    u    +    d;    	compilable	  [FE]  AssertionError  	106	5	replace
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  3;  u  =  u  +  4;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  u  +  3;  u  =  u  +  4;	  u    =    u    +    d;    u    =    u    +    d;    	compilable	  [FE]  AssertionError  	106	5	replace
73	[BUG]  [BUGGY]  u  =  u  +  3;  u  =  u  +  4;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  3;  u  =  u  +  4;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  u  +  3;  u  =  u  +  4;	  u    =    u    +    d;    u    =    u    +    d;    	compilable	  [FE]  AssertionError  	106	5	replace
74	[BUG]  [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(r    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  reached  end  of  file  while  parsing	32	None	replace
75	[BUG]  [BUGGY]  if(r  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(r    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  r  +  1;	  d    =    p    *    r;    	compilable	  [FE]  AssertionError  	52	5	replace
77	[BUG]  [BUGGY]  d  =  p  *  r  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  r  +  1;	  d    =    p    *    r;    	compilable	  [FE]  AssertionError  	52	5	replace
78	[BUG]  [BUGGY]  d  =  p  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	234	None	replace
79	[BUG]  [BUGGY]  d  =  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	234	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  a;	  	compilable	  [FE]  AssertionError  	59	5	add
81	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  a;	  	compilable	  [FE]  AssertionError  	59	5	add
82	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  a);	  	non-compiled	[CE]  ';'  expected	59	None	add
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  b;	  	compilable	  [FE]  AssertionError  	59	5	add
84	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  b;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  b;	  	compilable	  [FE]  AssertionError  	59	5	add
85	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  a  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  a	  	non-compiled	[CE]  ';'  expected	59	None	add
86	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  p;	  u    =    p    *    d;    	compilable	  [FE]  AssertionError  	157	5	replace
87	[BUG]  [BUGGY]  u  =  d  *  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  p;	  u    =    p    *    d;    	compilable	  [FE]  AssertionError  	157	5	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  *  r;	  u    =    p    *    d;    	compilable	  [FE]  AssertionError  	157	5	replace
89	[BUG]  [BUGGY]  u  =  p  *  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  *  r;	  u    =    p    *    d;    	compilable	  [FE]  AssertionError  	157	5	replace
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  /  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  /  d;	  u    =    p    *    d;    	compilable	  [FE]  AssertionError  	157	5	replace
91	[BUG]  [BUGGY]  u  =  p  /  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  /  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  /  d;	  u    =    p    *    d;    	compilable	  [FE]  AssertionError  	157	5	replace
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  *  d  +  1;	  u    =    p    *    d;    	compilable	  [FE]  AssertionError  	157	5	replace
93	[BUG]  [BUGGY]  u  =  p  *  d  +  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  *  d  +  1;	  u    =    p    *    d;    	compilable	  [FE]  AssertionError  	157	5	replace
94	[BUG]  [BUGGY]  d  =  p  *  l;  [CE]  cannot  find  symbol  l  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  l;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  l;	          d    =    p    *    q;    d    =    p    *    qua;    	non-compiled	[CE]  cannot  find  symbol  l	193	None	replace
95	[BUG]  [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
96	[BUG]  [BUGGY]  if(r  >  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  >  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    p    *    d;    u  =  p  *  d;	  	compilable	  [FE]  AssertionError  	156	4	add
98	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    *    d;    u  =  p  *  d;	  	compilable	  [FE]  AssertionError  	156	4	add
99	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim  &&  isMinim?  a  :  p  *  d;  [CE]  cannot  find  symbol  isMinimum  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim  &&  isMinim?  a  :  p  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    *    d;    u  =  p  *  d;  this.isMinimum  =  isMinim  &&  isMinim?  a  :  p  *  d;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	156	None	add
100	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  a  :  p  *  d;  [CE]  cannot  find  symbol  isMinimum  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  a  :  p  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    *    d;    u  =  p  *  d;  this.isMinimum  =  isMinim?  a  :  p  *  d;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	156	None	add
101	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  1  :  p  *  d;  [CE]  cannot  find  symbol  isMinimum  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  1  :  p  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    *    d;    u  =  p  *  d;  this.isMinimum  =  isMinim?  1  :  p  *  d;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	156	None	add
102	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [CE]  cannot  find  symbol  isMinimum  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    *    d;    u  =  p  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	156	None	add
103	[BUG]  [BUGGY]  d  =  m  +  d.;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  d.;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  +  d.;	          d    =    m    +    d;    d    =    m    +    d.;    	non-compiled	[CE]  <identifier>  expected	254	None	replace
104	[BUG]  [BUGGY]  d  =  m  *  d.;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d.;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  *  d.;	          d    =    m    +    d;    d    =    m    +    d.;    	non-compiled	[CE]  <identifier>  expected	254	None	replace
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  +  tol1;	          d    =    m    +    d;    d    =    m    +    d;    	compilable	  [FE]  AssertionError  	74	5	replace
106	[BUG]  [BUGGY]  d  =  m  +  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  +  tol1;	          d    =    m    +    d;    d    =    m    +    d;    	compilable	  [FE]  AssertionError  	74	5	replace
107	[BUG]  [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  r  <  =  GOLDEN_SECTION)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  r  <  =  GOLDEN_SECTION)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  r  <  =  GOLDEN_SECTION)  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
108	[BUG]  [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	79	None	replace
109	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  p  <  q  *  r)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  p  <  q  *  r)  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	79	5	replace
110	[BUG]  [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  p  <  q  *  r)  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  p  <  q  *  r)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  p  <  q  *  r)  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	79	5	replace
111	[BUG]  [BUGGY]  u  =  d  +  u;  U  =  u  +  d;  [CE]  cannot  find  symbol  U  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  U  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  u;  U  =  u  +  d;	  u    =    u    +    d;    U    =    u    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	110	None	replace
112	[BUG]  [BUGGY]  u  =  p  +  d;  U  =  u  +  d;  [CE]  cannot  find  symbol  U  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  U  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d;  U  =  u  +  d;	  u    =    u    +    d;    U    =    u    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	110	None	replace
113	[BUG]  [BUGGY]  u  =  a  +  d;  U  =  u  +  d;  [CE]  cannot  find  symbol  U  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  U  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  d;  U  =  u  +  d;	  u    =    u    +    d;    U    =    u    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	110	None	replace
114	[BUG]  [BUGGY]  U  =  u  +  d;  [CE]  cannot  find  symbol  U  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  U  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	U  =  u  +  d;	  u    =    u    +    d;    U    =    u    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	110	None	replace
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  u  =  d  +  x;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    r    +    x;    u  =  d  +  x;  u  =  r  +  x;	  	compilable	  [FE]  AssertionError  	21	4	add
116	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  u  =  d  +  x;  u  =  r  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  u  =  d  +  x;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    r    +    x;    u  =  d  +  x;  u  =  r  +  x;	  	compilable	  [FE]  AssertionError  	21	4	add
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  u  =  d  +  x;  u  =  r  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    r    +    x;    u  =  d  +  x;  u  =  r  +  q;	  	compilable	  [FE]  AssertionError  	21	4	add
118	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  u  =  d  +  x;  u  =  r  +  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  u  =  d  +  x;  u  =  r  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    r    +    x;    u  =  d  +  x;  u  =  r  +  q;	  	compilable	  [FE]  AssertionError  	21	4	add
119	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  U  =  d  +  x;  u  =  r  +  x;  [CE]  cannot  find  symbol  U  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  U  =  d  +  x;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    r    +    x;    U  =  d  +  x;  u  =  r  +  x;	  	non-compiled	[CE]  cannot  find  symbol  U	21	None	add
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  u  =  a  +  x;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    r    +    x;    u  =  a  +  x;  u  =  r  +  x;	  	compilable	  [FE]  AssertionError  	21	4	add
121	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  u  =  a  +  x;  u  =  r  +  x;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  u  =  a  +  x;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    r    +    x;    u  =  a  +  x;  u  =  r  +  x;	  	compilable	  [FE]  AssertionError  	21	4	add
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  u  =  m  +  d;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        m        +        d;        u    =    tol1    +    d;    u  =  m  +  d;  u  =  tol1  +  d;	  	compilable	  [FE]  AssertionError  	185	4	add
123	[BUG]  [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  u  =  m  +  d;  u  =  tol1  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  u  =  m  +  d;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        u    =    tol1    +    d;    u  =  m  +  d;  u  =  tol1  +  d;	  	compilable	  [FE]  AssertionError  	185	4	add
124	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  u  =  m  +  d;  u  =  tol2  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        m        +        d;        u    =    tol1    +    d;    u  =  m  +  d;  u  =  tol2  +  d;	  	compilable	  [FE]  AssertionError  	185	4	add
125	[BUG]  [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  u  =  m  +  d;  u  =  tol2  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  u  =  m  +  d;  u  =  tol2  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        u    =    tol1    +    d;    u  =  m  +  d;  u  =  tol2  +  d;	  	compilable	  [FE]  AssertionError  	185	4	add
126	[BUG]  [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  U  =  m  +  d;  u  =  tol1  +  d;  [CE]  cannot  find  symbol  U  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  U  =  m  +  d;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        u    =    tol1    +    d;    U  =  m  +  d;  u  =  tol1  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	185	None	add
127	[BUG]  [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  u  =  m  +  d;  u  =  tol3  +  d;  [CE]  cannot  find  symbol  tol3  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  u  =  m  +  d;  u  =  tol3  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        u    =    tol1    +    d;    u  =  m  +  d;  u  =  tol3  +  d;	  	non-compiled	[CE]  cannot  find  symbol  tol3	185	None	add
128	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  q;	  u    =    d    +    q;    	compilable	  [FE]  AssertionError  	24	5	replace
129	[BUG]  [BUGGY]  u  =  d  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  q;	  u    =    d    +    q;    	compilable	  [FE]  AssertionError  	24	5	replace
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  x;  u  =  d  +  q;	  u    =    d    +    x;    u    =    d    +    q;    	compilable	  [FE]  AssertionError  	20	5	replace
131	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  d  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  x;  u  =  d  +  q;	  u    =    d    +    x;    u    =    d    +    q;    	compilable	  [FE]  AssertionError  	20	5	replace
132	[BUG]  [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;  u  =  a  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    a    +    x;    u  =  d  +  x;  u  =  a  +  x;	  	compilable	  [FE]  AssertionError  	16	4	add
134	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;  u  =  a  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;  u  =  a  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    a    +    x;    u  =  d  +  x;  u  =  a  +  x;	  	compilable	  [FE]  AssertionError  	16	4	add
135	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  a  +  x;  u  =  a  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    a    +    x;    u  =  a  +  x;  u  =  a  +  x;	  	compilable	  [FE]  AssertionError  	16	4	add
136	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  a  +  x;  u  =  a  +  x;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  a  +  x;  u  =  a  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    a    +    x;    u  =  a  +  x;  u  =  a  +  x;	  	compilable	  [FE]  AssertionError  	16	4	add
137	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  U  =  d  +  x;  u  =  a  +  x;  [CE]  cannot  find  symbol  U  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  U  =  d  +  x;  u  =  a  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    a    +    x;    U  =  d  +  x;  u  =  a  +  x;	  	non-compiled	[CE]  cannot  find  symbol  U	16	None	add
138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;  u  =  a  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    a    +    x;    u  =  d  +  x;  u  =  a  +  q;	  	compilable	  [FE]  AssertionError  	16	4	add
139	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;  u  =  a  +  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;  u  =  a  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    a    +    x;    u  =  d  +  x;  u  =  a  +  q;	  	compilable	  [FE]  AssertionError  	16	4	add
140	[BUG]  [BUGGY]  if(d  ==  0.0)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  ==  0.0)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  ==  0.0)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	243	None	replace
141	[BUG]  [BUGGY]  if(r  ==  0)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  ==  0)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  ==  0)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	243	None	replace
142	[BUG]  [BUGGY]  if(r  ==  0)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  ==  0)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  ==  0)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	243	None	replace
143	[BUG]  [BUGGY]  if(r  ==  0)  {  u  =  a  +  d;  u  =  a  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  ==  0)  {  u  =  a  +  d;  u  =  a  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  ==  0)  {  u  =  a  +  d;  u  =  a  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	243	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  m  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	m  =  m  +  d;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
145	[BUG]  [BUGGY]  m  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  m  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	m  =  m  +  d;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  m  =  m  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  *  d;  m  =  m  *  d;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
147	[BUG]  [BUGGY]  u  =  m  *  d;  m  =  m  *  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  m  =  m  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  *  d;  m  =  m  *  d;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  1;  m  =  m  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  1;  m  =  m  +  1;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
149	[BUG]  [BUGGY]  u  =  m  +  1;  m  =  m  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  1;  m  =  m  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  1;  m  =  m  +  1;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
150	[BUG]  [BUGGY]  if(m)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
151	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
152	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
153	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	177	None	replace
154	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ';'  expected	177	None	replace
155	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
156	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
157	[BUG]  [BUGGY]  if(x  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(x    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  /  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  /  m;  d  =  p  /  m  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
159	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  /  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  /  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  /  m;  d  =  p  /  m  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  %  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  /  m;  d  =  p  %  m  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
161	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  %  m  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  %  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  /  m;  d  =  p  %  m  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
162	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  /  m  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  /  m  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  /  m;  d  =  p  /  m  +  d);	  	non-compiled	[CE]  ';'  expected	3	None	add
163	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  %  m;  d  =  p  /  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  %  m;  d  =  p  /  m  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
164	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  %  m;  d  =  p  /  m  +  d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  %  m;  d  =  p  /  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  %  m;  d  =  p  /  m  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
165	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  *  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  /  m;  d  =  p  *  m  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
166	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  *  m  +  d;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  *  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  /  m;  d  =  p  *  m  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
167	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        *        q;        d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	55	5	add
168	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	55	5	add
169	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  line  =  p  *  q;  [CE]  cannot  find  symbol  line  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  line  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  line  =  p  *  q;	  	non-compiled	[CE]  cannot  find  symbol  line	55	None	add
170	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  this.isMinimum  =  true;  [CE]  cannot  find  symbol  isMinimum  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  this.isMinimum  =  true;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  this.isMinimum  =  true;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	55	None	add
171	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  this.isMinimum  =  isMinim;  [CE]  cannot  find  symbol  isMinimum  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  this.isMinimum  =  isMinim;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  this.isMinimum  =  isMinim;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	55	None	add
172	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  this.isMinimum  =  false;  [CE]  cannot  find  symbol  isMinimum  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  d  =  p  *  q;  this.isMinimum  =  false;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  q;  this.isMinimum  =  false;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	55	None	add
173	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  >  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  >  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  b  >  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
174	[BUG]  [BUGGY]  if(p  <  a  ||  p  <  a  ||  b  <  a  ||  r  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  ||  p  <  a  ||  b  <  a  ||  r  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  ||  p  <  a  ||  b  <  a  ||  r  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
175	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  ';'  expected	263	None	replace
176	[BUG]  [BUGGY]  if(x  <  =  m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  =  m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	263	None	replace
177	[BUG]  [BUGGY]  if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  ';'  expected	263	None	replace
178	[BUG]  [BUGGY]  if(x  <  =  m)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  m)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  =  m)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	263	None	replace
179	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  tol1  +  d;	  u    =    u    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	198	5	replace
180	[BUG]  [BUGGY]  u  =  tol1  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  tol1  +  d;	  u    =    u    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	198	5	replace
181	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  u  +  tol2;  u  =  tol1  +  d;	  u    =    u    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	198	5	replace
182	[BUG]  [BUGGY]  u  =  u  +  tol2;  u  =  tol1  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  u  +  tol2;  u  =  tol1  +  d;	  u    =    u    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	198	5	replace
183	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  tol2  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  tol2  +  d;	  u    =    u    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	198	5	replace
184	[BUG]  [BUGGY]  u  =  tol2  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  tol2  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  tol2  +  d;	  u    =    u    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	198	5	replace
185	[BUG]  [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	128	None	replace
186	[BUG]  [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	128	None	replace
187	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	69	5	replace
188	[BUG]  [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	69	5	replace
189	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  b  *  (b  -  x)&&  p  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  a  *  (a  -  x)&&  p  <  b  *  (b  -  x)&&  p  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	69	5	replace
190	[BUG]  [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  b  *  (b  -  x)&&  p  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  b  *  (b  -  x)&&  p  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *  (a  -  x)&&  p  <  b  *  (b  -  x)&&  p  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	69	5	replace
191	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  p  <  q  *  (b  -  x))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  p  <  q  *  (b  -  x))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	69	5	replace
192	[BUG]  [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  p  <  q  *  (b  -  x))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  p  <  q  *  (b  -  x))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  p  <  q  *  (b  -  x))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	69	5	replace
193	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	176	None	replace
194	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMin  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMin  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMin	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  ';'  expected	176	None	replace
195	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  is  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  is  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  is	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  ';'  expected	176	None	replace
196	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	176	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	247	5	replace
198	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	247	5	replace
199	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	247	5	replace
200	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	247	5	replace
201	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	247	5	replace
202	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	247	5	replace
203	[BUG]  [BUGGY]  if(d  <  =  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  =  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  =  a)  {  u  =  q  +  d;  u  =  q  +  d;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	247	None	replace
204	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    p    +    q;    u  =  p  +  q;	  	compilable	  [FE]  AssertionError  	162	4	add
205	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    q;    u  =  p  +  q;	  	compilable	  [FE]  AssertionError  	162	4	add
206	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    q;    u  =  p  +  q;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  	non-compiled	[CE]  not  a  statement	162	None	add
207	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    q;    u  =  p  +  q;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  not  a  statement	162	None	add
208	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    q;    u  =  p  +  q;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  	non-compiled	[CE]  not  a  statement	162	None	add
209	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    q;    u  =  p  +  q;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  	non-compiled	[CE]  not  a  statement	162	None	add
210	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
211	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q  +  d;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
212	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    *    q;    }    	non-compiled	[CE]  illegal  start  of  expression	268	None	replace
213	[BUG]  [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    *    q;    }    	non-compiled	[CE]  illegal  start  of  expression	268	None	replace
214	[BUG]  [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  *  q;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  *  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    *    q;    }    	non-compiled	[CE]  illegal  start  of  expression	268	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    m    /    r;    d  =  m  /  r;	  	compilable	  [FE]  AssertionError  	164	5	add
216	[BUG]  [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  r;  d  =  m  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    /    r;    d  =  m  /  r;	  	compilable	  [FE]  AssertionError  	164	5	add
217	[BUG]  [BUGGY]  d  =  m  /  r;  d  =  m  /  r);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  r;  d  =  m  /  r);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    /    r;    d  =  m  /  r);	  	non-compiled	[CE]  ';'  expected	164	None	add
218	[BUG]  [BUGGY]  d  =  m  /  r;  d  =  m  /  l;  [CE]  cannot  find  symbol  l  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  r;  d  =  m  /  l;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    /    r;    d  =  m  /  l;	  	non-compiled	[CE]  cannot  find  symbol  l	164	None	add
219	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  r;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    m    /    r;    d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	164	5	add
220	[BUG]  [BUGGY]  d  =  m  /  r;  d  =  m  /  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  r;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    /    r;    d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	164	5	add
221	[BUG]  [BUGGY]  if(x  <  =  m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  =  m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	242	None	replace
222	[BUG]  [BUGGY]  if(m  >  p)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  p)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  p)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
223	[BUG]  [BUGGY]  if(m  >  0.5)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  0.5)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  0.5)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
224	[BUG]  [BUGGY]  if(x  <  =  m)  {  u  =  a  +  d;  u  =  a  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  m)  {  u  =  a  +  d;  u  =  a  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  =  m)  {  u  =  a  +  d;  u  =  a  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	242	None	replace
225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  *  1;	  d    =    p    /    q    +    1;    	compilable	  [FE]  AssertionError  	30	5	replace
226	[BUG]  [BUGGY]  d  =  p  /  q  *  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  *  1;	  d    =    p    /    q    +    1;    	compilable	  [FE]  AssertionError  	30	5	replace
227	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  2  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  *  2  +  1;	  d    =    p    /    q    +    1;    	compilable	  [FE]  AssertionError  	30	5	replace
228	[BUG]  [BUGGY]  d  =  p  /  q  *  2  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  2  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  *  2  +  1;	  d    =    p    /    q    +    1;    	compilable	  [FE]  AssertionError  	30	5	replace
229	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  r  +  1;	  d    =    p    /    q    +    1;    	compilable	  [FE]  AssertionError  	30	5	replace
230	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  r  +  1;	  d    =    p    /    q    +    1;    	compilable	  [FE]  AssertionError  	30	5	replace
231	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  /  p;	          d    =    m    /    q;    d    =    m    /    q3;    	compilable	  [FE]  AssertionError  	238	5	replace
232	[BUG]  [BUGGY]  d  =  m  /  p;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  /  p;	          d    =    m    /    q;    d    =    m    /    q3;    	compilable	  [FE]  AssertionError  	238	5	replace
233	[BUG]  [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }	  if(x    <    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	216	None	replace
234	[BUG]  [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }	  if(x    <    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	216	None	replace
235	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    *    q;    d  =  m  /  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	126	5	add
236	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  m  /  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    *    q;    d  =  m  /  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	126	5	add
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  m  *  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    *    q;    d  =  m  *  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	126	5	add
238	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  m  *  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  m  *  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    *    q;    d  =  m  *  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	126	5	add
239	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  m  /  q;  d  =  m  *  q);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  m  /  q;  d  =  m  *  q);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    *    q;    d  =  m  /  q;  d  =  m  *  q);	  	non-compiled	[CE]  ';'  expected	126	None	add
240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  d  +  x;	  d    =    x    +    d;    	compilable	  [FE]  AssertionError  	233	5	replace
241	[BUG]  [BUGGY]  d  =  d  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  +  x;	  d    =    x    +    d;    	compilable	  [FE]  AssertionError  	233	5	replace
242	[BUG]  [BUGGY]  d  =  d  +  m;  dev  =  m  +  d;  [CE]  cannot  find  symbol  dev  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  dev  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  +  m;  dev  =  m  +  d;	          d    =    m    +    d;    dev    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  dev	206	None	replace
243	[BUG]  [BUGGY]  d  =  d  +  d;  dev  =  m  +  d;  [CE]  cannot  find  symbol  dev  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  d;  dev  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  +  d;  dev  =  m  +  d;	          d    =    m    +    d;    dev    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  dev	206	None	replace
244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  u  +  r;	  u    =    u    +    tol1;    	compilable	  [FE]  AssertionError  	181	5	replace
245	[BUG]  [BUGGY]  u  =  u  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  u  +  r;	  u    =    u    +    tol1;    	compilable	  [FE]  AssertionError  	181	5	replace
246	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  tol2  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  tol2  +  u;	  u    =    u    +    tol1;    	compilable	  [FE]  AssertionError  	181	5	replace
247	[BUG]  [BUGGY]  u  =  tol2  +  u;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  tol2  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  tol2  +  u;	  u    =    u    +    tol1;    	compilable	  [FE]  AssertionError  	181	5	replace
248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  u  +  m;	  u    =    u    +    tol1;    	compilable	  [FE]  AssertionError  	181	4	replace
249	[BUG]  [BUGGY]  u  =  u  +  m;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  u  +  m;	  u    =    u    +    tol1;    	compilable	  [FE]  AssertionError  	181	4	replace
250	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        m        +        d;        m    =    m    +    d;    u  =  m  +  d;  m  =  m  +  d;	  	compilable	  [FE]  AssertionError  	187	4	add
251	[BUG]  [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        m    =    m    +    d;    u  =  m  +  d;  m  =  m  +  d;	  	compilable	  [FE]  AssertionError  	187	4	add
252	[BUG]  [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [CE]  cannot  find  symbol  isMinimum  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        m    =    m    +    d;    u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	187	None	add
253	[BUG]  [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        m    =    m    +    d;    u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is	  	non-compiled	[CE]  ';'  expected	187	None	add
254	[BUG]  [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [CE]  cannot  find  symbol  isMinimum  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        m    =    m    +    d;    u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	187	None	add
255	[BUG]  [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        m    =    m    +    d;    u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is	  	non-compiled	[CE]  ';'  expected	187	None	add
256	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  u  =  u  +  d;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        u        +        d;        u    =    tol1    +    d;    u  =  u  +  d;  u  =  tol1  +  d;	  	compilable	  [FE]  AssertionError  	197	4	add
257	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  u  =  u  +  d;  u  =  tol1  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  u  =  u  +  d;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    tol1    +    d;    u  =  u  +  d;  u  =  tol1  +  d;	  	compilable	  [FE]  AssertionError  	197	4	add
258	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  u  =  u  +  d;  u  =  tol2  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        u        +        d;        u    =    tol1    +    d;    u  =  u  +  d;  u  =  tol2  +  d;	  	compilable	  [FE]  AssertionError  	197	4	add
259	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  u  =  u  +  d;  u  =  tol2  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  u  =  u  +  d;  u  =  tol2  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    tol1    +    d;    u  =  u  +  d;  u  =  tol2  +  d;	  	compilable	  [FE]  AssertionError  	197	4	add
260	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  U  =  u  +  d;  u  =  tol1  +  d;  [CE]  cannot  find  symbol  U  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  U  =  u  +  d;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    tol1    +    d;    U  =  u  +  d;  u  =  tol1  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	197	None	add
261	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  u  =  u  +  d;  u  =  tol3  +  d;  [CE]  cannot  find  symbol  tol3  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  u  =  u  +  d;  u  =  tol3  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    tol1    +    d;    u  =  u  +  d;  u  =  tol3  +  d;	  	non-compiled	[CE]  cannot  find  symbol  tol3	197	None	add
262	[BUG]  [BUGGY]  d  =  p  /  m.;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m.;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  m.;	          d    =    p    /    m;    d    =    p    /    m.;    	non-compiled	[CE]  <identifier>  expected	237	None	replace
263	[BUG]  [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  *  (lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(d    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	256	None	replace
264	[BUG]  [BUGGY]  if(x  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(d    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	256	None	replace
265	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  d;  u  =  m  +  d;	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &    	compilable	  [FE]  AssertionError  	146	4	replace
266	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  m  +  d;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d;  u  =  m  +  d;	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &    	compilable	  [FE]  AssertionError  	146	4	replace
267	[BUG]  [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  b  *  (lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  b  *  (lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *  (a  -  x)&&  p  <  b  *  (lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    *    (a    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	71	None	replace
268	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  d  *  m;	  d    =    m    *    d;    	compilable	  [FE]  AssertionError  	93	5	replace
269	[BUG]  [BUGGY]  d  =  d  *  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  *  m;	  d    =    m    *    d;    	compilable	  [FE]  AssertionError  	93	5	replace
270	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  d;	  d    =    m    *    d;    	compilable	timeout	93	1	replace
271	[BUG]  [BUGGY]  d  =  p  *  d;  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  d;	  d    =    m    *    d;    	compilable	timeout	93	1	replace
272	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  *  r;	  d    =    m    *    d;    	compilable	  [FE]  AssertionError  	93	5	replace
273	[BUG]  [BUGGY]  d  =  m  *  r;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  *  r;	  d    =    m    *    d;    	compilable	  [FE]  AssertionError  	93	5	replace
274	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  r  *  d;	  d    =    m    *    d;    	compilable	  [FE]  AssertionError  	93	5	replace
275	[BUG]  [BUGGY]  d  =  r  *  d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  r  *  d;	  d    =    m    *    d;    	compilable	  [FE]  AssertionError  	93	5	replace
276	[BUG]  [BUGGY]  if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	259	None	replace
277	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	259	None	replace
278	[BUG]  [BUGGY]  if(x  <  =  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if(x  <  =  a)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if(x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  =  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if(x  <  =  a)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	259	None	replace
279	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	259	None	replace
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  *  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    *    x;    u  =  d  *  x;	  	compilable	  [FE]  AssertionError  	148	4	add
281	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  d  *  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  *  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    *    x;    u  =  d  *  x;	  	compilable	  [FE]  AssertionError  	148	4	add
282	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    *    x;    u  =  d  *  q;	  	compilable	  [FE]  AssertionError  	148	4	add
283	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  d  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    *    x;    u  =  d  *  q;	  	compilable	  [FE]  AssertionError  	148	4	add
284	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  d  *  y;  [CE]  cannot  find  symbol  y  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  *  y;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    *    x;    u  =  d  *  y;	  	non-compiled	[CE]  cannot  find  symbol  y	148	None	add
285	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  d  *  x);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  *  x);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    *    x;    u  =  d  *  x);	  	non-compiled	[CE]  ';'  expected	148	None	add
286	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  d  *  xx;  [CE]  cannot  find  symbol  xx  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  *  xx;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    *    x;    u  =  d  *  xx;	  	non-compiled	[CE]  cannot  find  symbol  xx	148	None	add
287	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  d;	  d    =    p    +    d;    	compilable	  [FE]  AssertionError  	95	5	replace
288	[BUG]  [BUGGY]  d  =  p  /  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  d;	  d    =    p    +    d;    	compilable	  [FE]  AssertionError  	95	5	replace
289	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  +  r;	  d    =    p    +    d;    	compilable	  [FE]  AssertionError  	95	5	replace
290	[BUG]  [BUGGY]  d  =  p  +  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  +  r;	  d    =    p    +    d;    	compilable	  [FE]  AssertionError  	95	5	replace
291	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  +  q;	  d    =    p    +    d;    	compilable	timeout	95	1	replace
292	[BUG]  [BUGGY]  d  =  p  +  q;  timeout  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  +  q;	  d    =    p    +    d;    	compilable	timeout	95	1	replace
293	[BUG]  [BUGGY]  if(x  <  =  m)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if(x  <  =  m)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  m)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if(x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  =  m)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if(x  <  =  m)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    else    {    d    =    tol2;    }    	non-compiled	[CE]  illegal  start  of  expression	261	None	replace
294	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if(x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if(x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if(x  <  =  m)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    else    {    d    =    tol2;    }    	non-compiled	[CE]  ';'  expected	261	None	replace
295	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if(x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if(x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if(x  <  =  m)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    else    {    d    =    tol2;    }    	non-compiled	[CE]  ';'  expected	261	None	replace
296	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  d  =  d  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    d    +    m;    d  =  d  +  m;	  	compilable	  [FE]  AssertionError  	90	5	add
297	[BUG]  [BUGGY]  d  =  d  +  m;  d  =  d  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  d  =  d  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    d    +    m;    d  =  d  +  m;	  	compilable	  [FE]  AssertionError  	90	5	add
298	[BUG]  [BUGGY]  d  =  d  +  m;  d  =  d  +  m);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  d  =  d  +  m);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    d    +    m;    d  =  d  +  m);	  	non-compiled	[CE]  ';'  expected	90	None	add
299	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  d  =  m  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    d    +    m;    d  =  m  +  m;	  	compilable	  [FE]  AssertionError  	90	5	add
300	[BUG]  [BUGGY]  d  =  d  +  m;  d  =  m  +  m;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  d  =  m  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    d    +    m;    d  =  m  +  m;	  	compilable	  [FE]  AssertionError  	90	5	add
301	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  d  =  a  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    d    +    m;    d  =  a  +  m;	  	compilable	  [FE]  AssertionError  	90	5	add
302	[BUG]  [BUGGY]  d  =  d  +  m;  d  =  a  +  m;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  d  =  a  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    d    +    m;    d  =  a  +  m;	  	compilable	  [FE]  AssertionError  	90	5	add
303	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  d  =  r  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    d    +    m;    d  =  r  +  m;	  	compilable	  [FE]  AssertionError  	90	5	add
304	[BUG]  [BUGGY]  d  =  d  +  m;  d  =  r  +  m;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  d  =  r  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    d    +    m;    d  =  r  +  m;	  	compilable	  [FE]  AssertionError  	90	5	add
305	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  d  *  r;	  u    =    p    +    d    *    q;    	compilable	  [FE]  AssertionError  	173	5	replace
306	[BUG]  [BUGGY]  u  =  p  +  d  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d  *  r;	  u    =    p    +    d    *    q;    	compilable	  [FE]  AssertionError  	173	5	replace
307	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  *  d  *  q;	  u    =    p    +    d    *    q;    	compilable	  [FE]  AssertionError  	173	5	replace
308	[BUG]  [BUGGY]  u  =  p  *  d  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  *  d  *  q;	  u    =    p    +    d    *    q;    	compilable	  [FE]  AssertionError  	173	5	replace
309	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  u  +  d  *  q;	  u    =    p    +    d    *    q;    	compilable	  [FE]  AssertionError  	173	5	replace
310	[BUG]  [BUGGY]  u  =  u  +  d  *  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  u  +  d  *  q;	  u    =    p    +    d    *    q;    	compilable	  [FE]  AssertionError  	173	5	replace
311	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  r  *  q;	  u    =    p    +    d    *    q;    	compilable	  [FE]  AssertionError  	173	5	replace
312	[BUG]  [BUGGY]  u  =  p  +  r  *  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  r  *  q;	  u    =    p    +    d    *    q;    	compilable	  [FE]  AssertionError  	173	5	replace
313	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  r  *  d;	  u    =    q    *    d;    	compilable	  [FE]  AssertionError  	26	5	replace
314	[BUG]  [BUGGY]  u  =  r  *  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  r  *  d;	  u    =    q    *    d;    	compilable	  [FE]  AssertionError  	26	5	replace
315	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  d;  d  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        +        d;        d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  d;	  	compilable	  [FE]  AssertionError  	73	5	add
316	[BUG]  [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  d;  d  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  d;  d  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        +        d;        d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  d;	  	compilable	  [FE]  AssertionError  	73	5	add
317	[BUG]  [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  int  d  =  m  +  d;  d  =  m  +  d;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  int  d  =  m  +  d;  d  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        +        d;        d    =    m    +    d;    int  d  =  m  +  d;  d  =  m  +  d;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	73	None	add
318	[BUG]  [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  d;  d  =  m  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  d;  d  =  m  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        +        d;        d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  d);	  	non-compiled	[CE]  ';'  expected	73	None	add
319	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol1;  u  =  u  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    u    +    tol1;    u  =  u  +  tol1;	  	compilable	  [FE]  AssertionError  	180	4	add
320	[BUG]  [BUGGY]  u  =  u  +  tol1;  u  =  u  +  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol1;  u  =  u  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol1;    u  =  u  +  tol1;	  	compilable	  [FE]  AssertionError  	180	4	add
321	[BUG]  [BUGGY]  u  =  u  +  tol1;  u  =  u  +  tol1);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol1;  u  =  u  +  tol1);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol1;    u  =  u  +  tol1);	  	non-compiled	[CE]  ';'  expected	180	None	add
322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol1;  u  =  u  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    u    +    tol1;    u  =  u  +  tol2;	  	compilable	  [FE]  AssertionError  	180	4	add
323	[BUG]  [BUGGY]  u  =  u  +  tol1;  u  =  u  +  tol2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol1;  u  =  u  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol1;    u  =  u  +  tol2;	  	compilable	  [FE]  AssertionError  	180	4	add
324	[BUG]  [BUGGY]  u  =  u  +  tol1;  u  =  u  +  tol1.;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol1;  u  =  u  +  tol1.;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol1;    u  =  u  +  tol1.;	  	non-compiled	[CE]  <identifier>  expected	180	None	add
325	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol1;  u  =  a  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    u    +    tol1;    u  =  a  +  tol1;	  	compilable	  [FE]  AssertionError  	180	4	add
326	[BUG]  [BUGGY]  u  =  u  +  tol1;  u  =  a  +  tol1;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol1;  u  =  a  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol1;    u  =  a  +  tol1;	  	compilable	  [FE]  AssertionError  	180	4	add
327	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  r  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	r  =  m  +  d;	          d    =    m    +    d;    r    =    m    +    d;    	compilable	  [FE]  AssertionError  	205	5	replace
328	[BUG]  [BUGGY]  r  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  r  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	r  =  m  +  d;	          d    =    m    +    d;    r    =    m    +    d;    	compilable	  [FE]  AssertionError  	205	5	replace
329	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  r  =  m  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  *  d;  r  =  m  *  d;	          d    =    m    +    d;    r    =    m    +    d;    	compilable	  [FE]  AssertionError  	205	5	replace
330	[BUG]  [BUGGY]  d  =  m  *  d;  r  =  m  *  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  r  =  m  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  *  d;  r  =  m  *  d;	          d    =    m    +    d;    r    =    m    +    d;    	compilable	  [FE]  AssertionError  	205	5	replace
331	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  r  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  +  d;  r  =  m  +  d;	          d    =    m    +    d;    r    =    m    +    d;    	compilable	  [FE]  AssertionError  	205	5	replace
332	[BUG]  [BUGGY]  d  =  p  +  d;  r  =  m  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  r  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  +  d;  r  =  m  +  d;	          d    =    m    +    d;    r    =    m    +    d;    	compilable	  [FE]  AssertionError  	205	5	replace
333	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  r  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  *  d;  r  =  m  +  d;	          d    =    m    +    d;    r    =    m    +    d;    	compilable	  [FE]  AssertionError  	205	5	replace
334	[BUG]  [BUGGY]  d  =  m  *  d;  r  =  m  +  d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  r  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  *  d;  r  =  m  +  d;	          d    =    m    +    d;    r    =    m    +    d;    	compilable	  [FE]  AssertionError  	205	5	replace
335	[BUG]  [BUGGY]  u  =  a  +  r;  U  =  a  +  d;  [CE]  cannot  find  symbol  U  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  U  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  r;  U  =  a  +  d;	  u    =    a    +    d;    U    =    a    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	89	None	replace
336	[BUG]  [BUGGY]  u  =  a  +  d;  U  =  a  +  r;  [CE]  cannot  find  symbol  U  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  U  =  a  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  d;  U  =  a  +  r;	  u    =    a    +    d;    U    =    a    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	89	None	replace
337	[BUG]  [BUGGY]  u  =  d  +  a;  U  =  a  +  d;  [CE]  cannot  find  symbol  U  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  U  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  a;  U  =  a  +  d;	  u    =    a    +    d;    U    =    a    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	89	None	replace
338	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  *  r;	  u    =    a    +    r;    	compilable	  [FE]  AssertionError  	134	4	replace
339	[BUG]  [BUGGY]  u  =  a  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  *  r;	  u    =    a    +    r;    	compilable	  [FE]  AssertionError  	134	4	replace
340	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  r  +  1;	  u    =    a    +    r;    	compilable	  [FE]  AssertionError  	134	5	replace
341	[BUG]  [BUGGY]  u  =  a  +  r  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  r  +  1;	  u    =    a    +    r;    	compilable	  [FE]  AssertionError  	134	5	replace
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    0.5)    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	217	4	add
343	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    0.5)    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	217	4	add
344	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    0.5)    {    d    =    p    /    q;    }    if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	217	4	add
345	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    0.5)    {    d    =    p    /    q;    }    if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	217	4	add
346	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  If(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  If(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    0.5)    {    d    =    p    /    q;    }    If(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  ';'  expected	217	None	add
347	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  x;	  u    =    d    +    x;    u    =    m    +    x;    	compilable	  [FE]  AssertionError  	213	5	replace
348	[BUG]  [BUGGY]  u  =  m  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  x;	  u    =    d    +    x;    u    =    m    +    x;    	compilable	  [FE]  AssertionError  	213	5	replace
349	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  q;	  u    =    d    +    x;    u    =    m    +    x;    	compilable	  [FE]  AssertionError  	213	4	replace
350	[BUG]  [BUGGY]  u  =  m  +  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  q;	  u    =    d    +    x;    u    =    m    +    x;    	compilable	  [FE]  AssertionError  	213	4	replace
351	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    r    /    q;    d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	166	5	add
352	[BUG]  [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    r    /    q;    d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	166	5	add
353	[BUG]  [BUGGY]  d  =  r  /  q;  dev  d  =  r  /  q;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q;  dev  d  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    r    /    q;    dev  d  =  r  /  q;	  	non-compiled	[CE]  cannot  find  symbol	166	None	add
354	[BUG]  [BUGGY]  d  =  r  /  q;  d  =  r  /  q);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q;  d  =  r  /  q);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    r    /    q;    d  =  r  /  q);	  	non-compiled	[CE]  ';'  expected	166	None	add
355	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q;  d  =  r  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    r    /    q;    d  =  r  %  q;	  	compilable	  [FE]  AssertionError  	166	4	add
356	[BUG]  [BUGGY]  d  =  r  /  q;  d  =  r  %  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q;  d  =  r  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    r    /    q;    d  =  r  %  q;	  	compilable	  [FE]  AssertionError  	166	4	add
357	[BUG]  [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(1.0    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	228	None	replace
358	[BUG]  [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  p  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  p  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  p  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(1.0    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	228	None	replace
359	[BUG]  [BUGGY]  if(p  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(x    >=    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	257	None	replace
360	[BUG]  [BUGGY]  if(x  >=  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >=  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >=  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(x    >=    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	257	None	replace
361	[BUG]  [BUGGY]  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  m  +  d;  }  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  m  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  m  +  d;  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol1)    {    d    =    tol2;    }    	non-compiled	[CE]  cannot  find  symbol  i	78	None	replace
362	[BUG]  [BUGGY]  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  m  +  d;  }  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  m  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  m  +  d;  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol1)    {    d    =    tol2;    }    	non-compiled	[CE]  cannot  find  symbol  i	78	None	replace
363	[BUG]  [BUGGY]  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  tol2;  }  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  tol2;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  tol2;  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol1)    {    d    =    tol2;    }    	non-compiled	[CE]  cannot  find  symbol  i	78	None	replace
364	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  /  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  /  q;  d  =  p  /  q  +  m;	  	compilable	  [FE]  AssertionError  	117	5	add
365	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  /  q  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  /  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  /  q;  d  =  p  /  q  +  m;	  	compilable	  [FE]  AssertionError  	117	5	add
366	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  /  q  +  m);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  /  q  +  m);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  /  q;  d  =  p  /  q  +  m);	  	non-compiled	[CE]  ';'  expected	117	None	add
367	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  %  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  /  q;  d  =  p  %  q  +  m;	  	compilable	  [FE]  AssertionError  	117	5	add
368	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  %  q  +  m;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  %  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  /  q;  d  =  p  %  q  +  m;	  	compilable	  [FE]  AssertionError  	117	5	add
369	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  %  q;  d  =  p  /  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  %  q;  d  =  p  /  q  +  m;	  	compilable	  [FE]  AssertionError  	117	5	add
370	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  %  q;  d  =  p  /  q  +  m;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  %  q;  d  =  p  /  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  %  q;  d  =  p  /  q  +  m;	  	compilable	  [FE]  AssertionError  	117	5	add
371	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  /  q  +  m  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  /  q  +  m  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  /  q;  d  =  p  /  q  +  m	  	non-compiled	[CE]  ';'  expected	117	None	add
372	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  x;	  u    =    d    +    x;    u    =    a    +    x;    	compilable	  [FE]  AssertionError  	17	5	replace
373	[BUG]  [BUGGY]  u  =  a  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  x;	  u    =    d    +    x;    u    =    a    +    x;    	compilable	  [FE]  AssertionError  	17	5	replace
374	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  q;	  u    =    d    +    x;    u    =    a    +    x;    	compilable	  [FE]  AssertionError  	17	5	replace
375	[BUG]  [BUGGY]  u  =  a  +  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  q;	  u    =    d    +    x;    u    =    a    +    x;    	compilable	  [FE]  AssertionError  	17	5	replace
376	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	265	None	replace
377	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	265	None	replace
378	[BUG]  [BUGGY]  if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	265	None	replace
379	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	265	None	replace
380	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    q    /    m;    d  =  q  /  m;	  	compilable	  [FE]  AssertionError  	208	5	add
381	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    q    /    m;    d  =  q  /  m;	  	compilable	  [FE]  AssertionError  	208	5	add
382	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  /  m;  }  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  /  m;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    q    /    m;    d  =  q  /  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  /  m;  }	  	non-compiled	[CE]  'else'  without  'if'	208	None	add
383	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  /  m;  [CE]  cannot  find  symbol  i  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    q    /    m;    d  =  q  /  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  /  m;	  	non-compiled	[CE]  cannot  find  symbol  i	208	None	add
384	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1;  }  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    q    /    m;    d  =  q  /  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1;  }	  	non-compiled	[CE]  'else'  without  'if'	208	None	add
385	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1  +  d;  }  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  q  /  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    q    /    m;    d  =  q  /  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1  +  d;  }	  	non-compiled	[CE]  'else'  without  'if'	208	None	add
386	[BUG]  [BUGGY]  u  =  d  +  m;  U  =  m  +  d;  [CE]  cannot  find  symbol  U  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  U  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  m;  U  =  m  +  d;	  u    =    m    +    d;    U    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	190	None	replace
387	[BUG]  [BUGGY]  U  =  m  +  d;  [CE]  cannot  find  symbol  U  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  U  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	U  =  m  +  d;	  u    =    m    +    d;    U    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	190	None	replace
388	[BUG]  [BUGGY]  u  =  p  +  d;  U  =  m  +  d;  [CE]  cannot  find  symbol  U  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  U  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d;  U  =  m  +  d;	  u    =    m    +    d;    U    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	190	None	replace
389	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    p    +    d;    u  =  p  +  d;  u  =  p  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        p        +        d;        u    =    p    +    d;    u  =  p  +  d;  u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	99	4	add
390	[BUG]  [BUGGY]  u    =    p    +    d;    u  =  p  +  d;  u  =  p  +  d;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    p    +    d;    u  =  p  +  d;  u  =  p  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        p        +        d;        u    =    p    +    d;    u  =  p  +  d;  u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	99	4	add
391	[BUG]  [BUGGY]  u    =    p    +    d;    u  =  p  +  d;  U  =  p  +  d;  u  =  p  +  d;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    p    +    d;    u  =  p  +  d;  U  =  p  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        p        +        d;        u    =    p    +    d;    U  =  p  +  d;  u  =  p  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	99	None	add
392	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q;  d  =  b  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    b    /    q;    d  =  b  /  q;	  	compilable	  [FE]  AssertionError  	251	5	add
393	[BUG]  [BUGGY]  d  =  b  /  q;  d  =  b  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q;  d  =  b  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    b    /    q;    d  =  b  /  q;	  	compilable	  [FE]  AssertionError  	251	5	add
394	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q;  d  =  b  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    b    /    q;    d  =  b  %  q;	  	compilable	  [FE]  AssertionError  	251	5	add
395	[BUG]  [BUGGY]  d  =  b  /  q;  d  =  b  %  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q;  d  =  b  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    b    /    q;    d  =  b  %  q;	  	compilable	  [FE]  AssertionError  	251	5	add
396	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q;  d  =  a  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    b    /    q;    d  =  a  /  q;	  	compilable	  [FE]  AssertionError  	251	5	add
397	[BUG]  [BUGGY]  d  =  b  /  q;  d  =  a  /  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q;  d  =  a  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    b    /    q;    d  =  a  /  q;	  	compilable	  [FE]  AssertionError  	251	5	add
398	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q;  d  =  b  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    b    /    q;    d  =  b  *  q;	  	compilable	  [FE]  AssertionError  	251	5	add
399	[BUG]  [BUGGY]  d  =  b  /  q;  d  =  b  *  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q;  d  =  b  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    b    /    q;    d  =  b  *  q;	  	compilable	  [FE]  AssertionError  	251	5	add
400	[BUG]  [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	200	None	replace
401	[BUG]  [BUGGY]  if(r  ==  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  ==  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  ==  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	200	None	replace
402	[BUG]  [BUGGY]  if(t  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(t  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(t  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	200	None	replace
403	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  +  1;	          d    =    m    +    d;    d    =    m    +    d);    	compilable	  [FE]  AssertionError  	203	5	replace
404	[BUG]  [BUGGY]  d  =  m  +  1;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  +  1;	          d    =    m    +    d;    d    =    m    +    d);    	compilable	  [FE]  AssertionError  	203	5	replace
405	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  +  tol2;	          d    =    m    +    d;    d    =    m    +    d);    	compilable	  [FE]  AssertionError  	203	5	replace
406	[BUG]  [BUGGY]  d  =  m  +  tol2;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  +  tol2;	          d    =    m    +    d;    d    =    m    +    d);    	compilable	  [FE]  AssertionError  	203	5	replace
407	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q;  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q;  r  =  p  *  q;	          d    =    p    *    q;    r    =    p    *    q;    	compilable	  [FE]  AssertionError  	192	5	replace
408	[BUG]  [BUGGY]  d  =  p  /  q;  r  =  p  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q;  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q;  r  =  p  *  q;	          d    =    p    *    q;    r    =    p    *    q;    	compilable	  [FE]  AssertionError  	192	5	replace
409	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	r  =  p  *  q;	          d    =    p    *    q;    r    =    p    *    q;    	compilable	  [FE]  AssertionError  	192	5	replace
410	[BUG]  [BUGGY]  r  =  p  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	r  =  p  *  q;	          d    =    p    *    q;    r    =    p    *    q;    	compilable	  [FE]  AssertionError  	192	5	replace
411	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r;  r  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  r;  r  =  p  *  r;	          d    =    p    *    q;    r    =    p    *    q;    	compilable	  [FE]  AssertionError  	192	5	replace
412	[BUG]  [BUGGY]  d  =  p  *  r;  r  =  p  *  r;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r;  r  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  r;  r  =  p  *  r;	          d    =    p    *    q;    r    =    p    *    q;    	compilable	  [FE]  AssertionError  	192	5	replace
413	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  1;  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  q  +  1;  r  =  p  *  q;	          d    =    p    *    q;    r    =    p    *    q;    	compilable	timeout	192	1	replace
414	[BUG]  [BUGGY]  d  =  p  *  q  +  1;  r  =  p  *  q;  timeout  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  1;  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  +  1;  r  =  p  *  q;	          d    =    p    *    q;    r    =    p    *    q;    	compilable	timeout	192	1	replace
415	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    r  =  m  +  d;  d  =  m  +  d;  r  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        +        d;        r    =    m    +    d;    d  =  m  +  d;  r  =  m  +  d;	  	compilable	  [FE]  AssertionError  	204	5	add
416	[BUG]  [BUGGY]          d    =    m    +    d;    r  =  m  +  d;  d  =  m  +  d;  r  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    r  =  m  +  d;  d  =  m  +  d;  r  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        +        d;        r    =    m    +    d;    d  =  m  +  d;  r  =  m  +  d;	  	compilable	  [FE]  AssertionError  	204	5	add
417	[BUG]  [BUGGY]          d    =    m    +    d;    r  =  m  +  d;  d  =  m  +  d;  r  =  m  +  d);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    r  =  m  +  d;  d  =  m  +  d;  r  =  m  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        +        d;        r    =    m    +    d;    d  =  m  +  d;  r  =  m  +  d);	  	non-compiled	[CE]  ';'  expected	204	None	add
418	[BUG]  [BUGGY]          d    =    m    +    d;    r  =  m  +  d;  d  =  m  +  d;  l  =  m  +  d;  [CE]  cannot  find  symbol  l  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    r  =  m  +  d;  d  =  m  +  d;  l  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        +        d;        r    =    m    +    d;    d  =  m  +  d;  l  =  m  +  d;	  	non-compiled	[CE]  cannot  find  symbol  l	204	None	add
419	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  a;	  u    =    a    *    d;    	compilable	  [FE]  AssertionError  	136	5	replace
420	[BUG]  [BUGGY]  u  =  d  *  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  a;	  u    =    a    *    d;    	compilable	  [FE]  AssertionError  	136	5	replace
421	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  d  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  *  d  +  1;	  u    =    a    *    d;    	compilable	  [FE]  AssertionError  	136	5	replace
422	[BUG]  [BUGGY]  u  =  a  *  d  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  d  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  *  d  +  1;	  u    =    a    *    d;    	compilable	  [FE]  AssertionError  	136	5	replace
423	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  m;  d  =  p  *  q;  d  =  p  *  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        *        q;        d    =    p    *    q    +    m;    d  =  p  *  q;  d  =  p  *  q  +  m;	  	compilable	  [FE]  AssertionError  	62	5	add
424	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  m;  d  =  p  *  q;  d  =  p  *  q  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  m;  d  =  p  *  q;  d  =  p  *  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    m;    d  =  p  *  q;  d  =  p  *  q  +  m;	  	compilable	  [FE]  AssertionError  	62	5	add
425	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  m;  d  =  p  *  q;  d  =  p  *  q  +  m);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  m;  d  =  p  *  q;  d  =  p  *  q  +  m);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    m;    d  =  p  *  q;  d  =  p  *  q  +  m);	  	non-compiled	[CE]  ';'  expected	62	None	add
426	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  m;  d  =  p  *  q;  d  =  p  *  q  +  m  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  m;  d  =  p  *  q;  d  =  p  *  q  +  m  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    m;    d  =  p  *  q;  d  =  p  *  q  +  m	  	non-compiled	[CE]  ';'  expected	62	None	add
427	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	246	None	replace
428	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	246	None	replace
429	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	246	None	replace
430	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	246	None	replace
431	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    a    +    r;    u  =  a  +  r;	  	compilable	  [FE]  AssertionError  	133	4	add
432	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    r;    u  =  a  +  r;	  	compilable	  [FE]  AssertionError  	133	4	add
433	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    r;    u  =  a  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  not  a  statement	133	None	add
434	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    r;    u  =  a  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  	non-compiled	[CE]  not  a  statement	133	None	add
435	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    r;    u  =  a  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  not  a  statement	133	None	add
436	[BUG]  [BUGGY]  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  m  +  d;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  m  +  d;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  m  +  d;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol1)    {    d    =    tol1;    }    	non-compiled	[CE]  cannot  find  symbol  i	76	None	replace
437	[BUG]  [BUGGY]  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  m  +  d;  }  else  {  d  =  tol1;  }  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  m  +  d;  }  else  {  d  =  tol1;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  m  +  d;  }  else  {  d  =  tol1;  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol1)    {    d    =    tol1;    }    	non-compiled	[CE]  cannot  find  symbol  i	76	None	replace
438	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    m    *    q;    d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	168	5	add
439	[BUG]  [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    q;    d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	168	5	add
440	[BUG]  [BUGGY]  d  =  m  *  q;  d  =  de  m  *  q;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  q;  d  =  de  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    q;    d  =  de  m  *  q;	  	non-compiled	[CE]  ';'  expected	168	None	add
441	[BUG]  [BUGGY]  d  =  m  *  q;  d  =  m  *  q);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  q;  d  =  m  *  q);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    q;    d  =  m  *  q);	  	non-compiled	[CE]  ';'  expected	168	None	add
442	[BUG]  [BUGGY]  if(m  >  p)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  p)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  p)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  not  a  statement	230	None	replace
443	[BUG]  [BUGGY]  u  =  p  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  not  a  statement	230	None	replace
444	[BUG]  [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  not  a  statement	230	None	replace
445	[BUG]  [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  not  a  statement	230	None	replace
446	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  d  =  p  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    +    d;    d  =  p  +  d;	  	compilable	  [FE]  AssertionError  	94	4	add
447	[BUG]  [BUGGY]  d  =  p  +  d;  d  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  d  =  p  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    +    d;    d  =  p  +  d;	  	compilable	  [FE]  AssertionError  	94	4	add
448	[BUG]  [BUGGY]  d  =  p  +  d;  if  (p  +  d)  {  d  =  p  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  p  +  d;  }  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  if  (p  +  d)  {  d  =  p  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  p  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    +    d;    if  (p  +  d)  {  d  =  p  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  p  +  d;  }	  	non-compiled	[CE]  incompatible  types	94	None	add
449	[BUG]  [BUGGY]  d  =  p  +  d;  if  (p  +  d)  {  d  =  p  +  d;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  +  d;  }  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  if  (p  +  d)  {  d  =  p  +  d;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    +    d;    if  (p  +  d)  {  d  =  p  +  d;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  +  d;  }	  	non-compiled	[CE]  incompatible  types	94	None	add
450	[BUG]  [BUGGY]  d  =  p  +  d;  if  (p  +  d)  {  d  =  p  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  p  +  d;  }  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  if  (p  +  d)  {  d  =  p  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  p  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    +    d;    if  (p  +  d)  {  d  =  p  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  p  +  d;  }	  	non-compiled	[CE]  incompatible  types	94	None	add
451	[BUG]  [BUGGY]  d  =  p  +  d;  if  (p  +  d)  {  d  =  p  +  d;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1;  }  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  if  (p  +  d)  {  d  =  p  +  d;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    +    d;    if  (p  +  d)  {  d  =  p  +  d;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1;  }	  	non-compiled	[CE]  incompatible  types	94	None	add
452	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  m  <  =  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  m  <  =  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  m  <  =  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    m))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
453	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    m))    {    d    =    p    /    q    +    d;    }    	compilable	  [FE]  AssertionError  	141	5	replace
454	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    m))    {    d    =    p    /    q    +    d;    }    	compilable	  [FE]  AssertionError  	141	5	replace
455	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  +  m;	          d    =    p    /    q;    d    =    p    /    q    +    m;    	compilable	  [FE]  AssertionError  	118	5	replace
456	[BUG]  [BUGGY]  d  =  p  /  q  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  +  m;	          d    =    p    /    q;    d    =    p    /    q    +    m;    	compilable	  [FE]  AssertionError  	118	5	replace
457	[BUG]  [BUGGY]  if(x  <  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(m    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	65	None	replace
458	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  tol2;	  u    =    u    +    tol2;    	compilable	  [FE]  AssertionError  	183	4	replace
459	[BUG]  [BUGGY]  u  =  a  +  tol2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  tol2;	  u    =    u    +    tol2;    	compilable	  [FE]  AssertionError  	183	4	replace
460	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  tol1  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  tol1  +  u;	  u    =    u    +    tol2;    	compilable	  [FE]  AssertionError  	183	5	replace
461	[BUG]  [BUGGY]  u  =  tol1  +  u;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  tol1  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  tol1  +  u;	  u    =    u    +    tol2;    	compilable	  [FE]  AssertionError  	183	5	replace
462	[BUG]  [BUGGY]  if(p  <  a  &&  p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    q    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
463	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  >  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  >  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  b  >  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    q    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
464	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	non-compiled	[CE]  ';'  expected	102	None	replace
465	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	non-compiled	[CE]  ';'  expected	102	None	replace
466	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	non-compiled	[CE]  ';'  expected	102	None	replace
467	[BUG]  [BUGGY]  if(p  >  max)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  max)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  max)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	non-compiled	[CE]  ';'  expected	102	None	replace
468	[BUG]  [BUGGY]  d  =  m  +  tol1;  i  =  m  +  d;  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol1;  i  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  +  tol1;  i  =  m  +  d;	          d    =    m    +    d;    i    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  i	253	None	replace
469	[BUG]  [BUGGY]  d  =  p  +  d;  i  =  m  +  d;  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  i  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  +  d;  i  =  m  +  d;	          d    =    m    +    d;    i    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  i	253	None	replace
470	[BUG]  [BUGGY]  d  =  m  +  tol2;  i  =  m  +  d;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol2;  i  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  +  tol2;  i  =  m  +  d;	          d    =    m    +    d;    i    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  i	253	None	replace
471	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  b  /  r;	  d    =    b    /    q;    	compilable	  [FE]  AssertionError  	252	5	replace
472	[BUG]  [BUGGY]  d  =  b  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  b  /  r;	  d    =    b    /    q;    	compilable	  [FE]  AssertionError  	252	5	replace
473	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  b  /  q  +  1;	  d    =    b    /    q;    	compilable	  [FE]  AssertionError  	252	5	replace
474	[BUG]  [BUGGY]  d  =  b  /  q  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  b  /  q  +  1;	  d    =    b    /    q;    	compilable	  [FE]  AssertionError  	252	5	replace
475	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    a;    d  =  p  /  m;  d  =  p  /  m  +  a;	  	compilable	  [FE]  AssertionError  	8	5	add
476	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    a;    d  =  p  /  m;  d  =  p  /  m  +  a;	  	compilable	  [FE]  AssertionError  	8	5	add
477	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    a;    d  =  p  /  m;  d  =  p  /  m  +  b;	  	compilable	  [FE]  AssertionError  	8	5	add
478	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  b;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    a;    d  =  p  /  m;  d  =  p  /  m  +  b;	  	compilable	  [FE]  AssertionError  	8	5	add
479	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  a);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  a);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    a;    d  =  p  /  m;  d  =  p  /  m  +  a);	  	non-compiled	[CE]  ';'  expected	8	None	add
480	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    a;    d  =  p  /  m;  d  =  p  /  m  +  tol1;	  	compilable	  [FE]  AssertionError  	8	5	add
481	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  tol1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    a;    d  =  p  /  m;  d  =  p  /  m  +  tol1;	  	compilable	  [FE]  AssertionError  	8	5	add
482	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  a  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  a  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    a;    d  =  p  /  m;  d  =  p  /  m  +  a	  	non-compiled	[CE]  ';'  expected	8	None	add
483	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  m;	  u    =    d    +    m;    	compilable	  [FE]  AssertionError  	44	5	replace
484	[BUG]  [BUGGY]  u  =  d  *  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  m;	  u    =    d    +    m;    	compilable	  [FE]  AssertionError  	44	5	replace
485	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	260	None	replace
486	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  r;  u  =  m  +  d;	  u    =    a    +    d;    u    =    m    +    d;    	compilable	  [FE]  AssertionError  	171	4	replace
487	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  r;  u  =  m  +  d;	  u    =    a    +    d;    u    =    m    +    d;    	compilable	  [FE]  AssertionError  	171	4	replace
488	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  a;  u  =  m  +  d;	  u    =    a    +    d;    u    =    m    +    d;    	compilable	  [FE]  AssertionError  	171	4	replace
489	[BUG]  [BUGGY]  u  =  d  +  a;  u  =  m  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  a;  u  =  m  +  d;	  u    =    a    +    d;    u    =    m    +    d;    	compilable	  [FE]  AssertionError  	171	4	replace
490	[BUG]  [BUGGY]  d  =  p  *  q.tol1;  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q.tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q.tol1;	          d    =    p    *    q;    d    =    p    *    q.tol1;    	non-compiled	[CE]  double  cannot  be  dereferenced	61	None	replace
491	[BUG]  [BUGGY]  d  =  p  *  q,  r.tol1;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q,  r.tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q,  r.tol1;	          d    =    p    *    q;    d    =    p    *    q.tol1;    	non-compiled	[CE]  ';'  expected	61	None	replace
492	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  2.0)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  2.0)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  2.0)  {  d  =  p  /  q;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	267	None	replace
493	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  b  +  d;  u  =  a  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        a        +        d;        u    =    b    +    d;    u  =  a  +  d;  u  =  b  +  d;	  	compilable	  [FE]  AssertionError  	84	4	add
494	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  b  +  d;  u  =  a  +  d;  u  =  b  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  b  +  d;  u  =  a  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    b    +    d;    u  =  a  +  d;  u  =  b  +  d;	  	compilable	  [FE]  AssertionError  	84	4	add
495	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  b  +  d;  U  =  a  +  d;  u  =  b  +  d;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  b  +  d;  U  =  a  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    b    +    d;    U  =  a  +  d;  u  =  b  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	84	None	add
496	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  b  +  d;  int  u  =  a  +  d;  u  =  b  +  d;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  b  +  d;  int  u  =  a  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    b    +    d;    int  u  =  a  +  d;  u  =  b  +  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	84	None	add
497	[BUG]  [BUGGY]  u  =  m  *  d;  u  =  m  *  d);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  *  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  *  d;  u  =  m  *  d);	  u    =    m    +    d;    u    =    m    +    d);    	non-compiled	[CE]  ';'  expected	189	None	replace
498	[BUG]  [BUGGY]  u  =  m  +  tol2;  u  =  m  +  d);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol2;  u  =  m  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  tol2;  u  =  m  +  d);	  u    =    m    +    d;    u    =    m    +    d);    	non-compiled	[CE]  ';'  expected	189	None	replace
499	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  *  d;  u  =  m  *  d;	  u    =    m    +    d;    u    =    m    +    d);    	compilable	  [FE]  AssertionError  	189	5	replace
500	[BUG]  [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  *  d;  u  =  m  *  d;	  u    =    m    +    d;    u    =    m    +    d);    	compilable	  [FE]  AssertionError  	189	5	replace
501	[BUG]  [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *  (a  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	130	None	replace
502	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	96	5	replace
503	[BUG]  [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	96	5	replace
504	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	96	5	replace
505	[BUG]  [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	96	5	replace
506	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r)  <  Math.abs(0.5  *  q  *  d))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r)  <  Math.abs(0.5  *  q  *  d))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	96	5	replace
507	[BUG]  [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r)  <  Math.abs(0.5  *  q  *  d))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r)  <  Math.abs(0.5  *  q  *  d))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p  *  r)  <  Math.abs(0.5  *  q  *  d))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	96	5	replace
508	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    p)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	262	None	replace
509	[BUG]  [BUGGY]  if(isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    p)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	262	None	replace
510	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	1	5	add
511	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  /  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	1	5	add
512	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  /  m;  d  =  p  %  m;	  	compilable	  [FE]  AssertionError  	1	5	add
513	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  %  m;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  /  m;  d  =  p  %  m;	  	compilable	  [FE]  AssertionError  	1	5	add
514	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  %  m;  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  %  m;  d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	1	5	add
515	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  %  m;  d  =  p  /  m;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  %  m;  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  %  m;  d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	1	5	add
516	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  -  m;  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  -  m;  d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	1	5	add
517	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  -  m;  d  =  p  /  m;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  -  m;  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  -  m;  d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	1	5	add
518	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  /  m);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  /  m);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m);	  	non-compiled	[CE]  ';'  expected	1	None	add
519	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  tol1  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  tol1  +  m;	  u    =    m    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	186	4	replace
520	[BUG]  [BUGGY]  u  =  tol1  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  tol1  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  tol1  +  m;	  u    =    m    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	186	4	replace
521	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	121	5	add
522	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;  d  =  m  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	121	5	add
523	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  m  *  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    /    q;    d  =  m  *  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	121	5	add
524	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  m  *  q;  d  =  m  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  m  *  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    /    q;    d  =  m  *  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	121	5	add
525	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  m  +  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    /    q;    d  =  m  +  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	121	5	add
526	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  m  +  q;  d  =  m  /  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  m  +  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    /    q;    d  =  m  +  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	121	5	add
527	[BUG]  [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	replace
528	[BUG]  [BUGGY]  if(r  >  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  >  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	replace
529	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  1;  d  =  p  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    q    +    1;    d  =  p  /  q  +  1;	  	compilable	  [FE]  AssertionError  	29	5	add
530	[BUG]  [BUGGY]  d  =  p  /  q  +  1;  d  =  p  /  q  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  1;  d  =  p  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    1;    d  =  p  /  q  +  1;	  	compilable	  [FE]  AssertionError  	29	5	add
531	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  1;  d  =  p  %  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    q    +    1;    d  =  p  %  q  +  1;	  	compilable	  [FE]  AssertionError  	29	5	add
532	[BUG]  [BUGGY]  d  =  p  /  q  +  1;  d  =  p  %  q  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  1;  d  =  p  %  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    1;    d  =  p  %  q  +  1;	  	compilable	  [FE]  AssertionError  	29	5	add
533	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  1;  d  =  p  /  q  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    q    +    1;    d  =  p  /  q  +  2;	  	compilable	  [FE]  AssertionError  	29	5	add
534	[BUG]  [BUGGY]  d  =  p  /  q  +  1;  d  =  p  /  q  +  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  1;  d  =  p  /  q  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    1;    d  =  p  /  q  +  2;	  	compilable	  [FE]  AssertionError  	29	5	add
535	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  1;  d  =  p  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    q    +    1;    d  =  p  *  q  +  1;	  	compilable	  [FE]  AssertionError  	29	5	add
536	[BUG]  [BUGGY]  d  =  p  /  q  +  1;  d  =  p  *  q  +  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  1;  d  =  p  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    1;    d  =  p  *  q  +  1;	  	compilable	  [FE]  AssertionError  	29	5	add
537	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol2;  u  =  d  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    tol2;    u  =  d  +  tol2;	  	compilable	  [FE]  AssertionError  	154	4	add
538	[BUG]  [BUGGY]  u  =  d  +  tol2;  u  =  d  +  tol2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol2;  u  =  d  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol2;    u  =  d  +  tol2;	  	compilable	  [FE]  AssertionError  	154	4	add
539	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol2;  u  =  d  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    tol2;    u  =  d  +  tol1;	  	compilable	  [FE]  AssertionError  	154	4	add
540	[BUG]  [BUGGY]  u  =  d  +  tol2;  u  =  d  +  tol1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol2;  u  =  d  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol2;    u  =  d  +  tol1;	  	compilable	  [FE]  AssertionError  	154	4	add
541	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol2;  u  =  a  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    tol2;    u  =  a  +  tol2;	  	compilable	  [FE]  AssertionError  	154	4	add
542	[BUG]  [BUGGY]  u  =  d  +  tol2;  u  =  a  +  tol2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol2;  u  =  a  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol2;    u  =  a  +  tol2;	  	compilable	  [FE]  AssertionError  	154	4	add
543	[BUG]  [BUGGY]  u  =  d  +  tol2;  u  =  d  +  tol2);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol2;  u  =  d  +  tol2);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol2;    u  =  d  +  tol2);	  	non-compiled	[CE]  ';'  expected	154	None	add
544	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol2;  u  =  p  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    tol2;    u  =  p  +  tol2;	  	compilable	  [FE]  AssertionError  	154	4	add
545	[BUG]  [BUGGY]  u  =  d  +  tol2;  u  =  p  +  tol2;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol2;  u  =  p  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol2;    u  =  p  +  tol2;	  	compilable	  [FE]  AssertionError  	154	4	add
546	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  p  +  d;  u  =  a  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        a        +        d;        u    =    p    +    d;    u  =  a  +  d;  u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	87	4	add
547	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  p  +  d;  u  =  a  +  d;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  p  +  d;  u  =  a  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    p    +    d;    u  =  a  +  d;  u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	87	4	add
548	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  p  +  d;  U  =  a  +  d;  u  =  p  +  d;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  p  +  d;  U  =  a  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    p    +    d;    U  =  a  +  d;  u  =  p  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	87	None	add
549	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  p  +  d;  int  u  =  a  +  d;  u  =  p  +  d;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  p  +  d;  int  u  =  a  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    p    +    d;    int  u  =  a  +  d;  u  =  p  +  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	87	None	add
550	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  q  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    q    +    r;    u  =  q  +  r;	  	compilable	  [FE]  AssertionError  	225	4	add
551	[BUG]  [BUGGY]  u  =  q  +  r;  u  =  q  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  q  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    r;    u  =  q  +  r;	  	compilable	  [FE]  AssertionError  	225	4	add
552	[BUG]  [BUGGY]  u  =  q  +  r;  u  =  q  +  r);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  q  +  r);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    r;    u  =  q  +  r);	  	non-compiled	[CE]  ';'  expected	225	None	add
553	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  p  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    q    +    r;    u  =  p  +  r;	  	compilable	  [FE]  AssertionError  	225	4	add
554	[BUG]  [BUGGY]  u  =  q  +  r;  u  =  p  +  r;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  p  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    r;    u  =  p  +  r;	  	compilable	  [FE]  AssertionError  	225	4	add
555	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  r  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    q    +    r;    u  =  r  +  r;	  	compilable	  [FE]  AssertionError  	225	4	add
556	[BUG]  [BUGGY]  u  =  q  +  r;  u  =  r  +  r;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  r  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    r;    u  =  r  +  r;	  	compilable	  [FE]  AssertionError  	225	4	add
557	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  b  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    q    +    r;    u  =  b  +  r;	  	compilable	  [FE]  AssertionError  	225	4	add
558	[BUG]  [BUGGY]  u  =  q  +  r;  u  =  b  +  r;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  b  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    r;    u  =  b  +  r;	  	compilable	  [FE]  AssertionError  	225	4	add
559	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  >  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  >  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  b  >  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
560	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  d  >  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  <  a  &&  p  <  a  &&  b  <  a  &&  d  >  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	97	5	replace
561	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  d  >  0.5)  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  d  >  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  b  <  a  &&  d  >  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	97	5	replace
562	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    p    +    r;    u  =  p  +  r;	  	compilable	  [FE]  AssertionError  	158	4	add
563	[BUG]  [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    r;    u  =  p  +  r;	  	compilable	  [FE]  AssertionError  	158	4	add
564	[BUG]  [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    r;    u  =  p  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  not  a  statement	158	None	add
565	[BUG]  [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    r;    u  =  p  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  not  a  statement	158	None	add
566	[BUG]  [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    r;    u  =  p  +  r;  isMinim  &&  b  -  u  <  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  	non-compiled	[CE]  not  a  statement	158	None	add
567	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  r  +  1;	  u    =    p    +    r;    	compilable	  [FE]  AssertionError  	159	5	replace
568	[BUG]  [BUGGY]  u  =  p  +  r  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  r  +  1;	  u    =    p    +    r;    	compilable	  [FE]  AssertionError  	159	5	replace
569	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  1;	  u    =    p    +    r;    	compilable	  [FE]  AssertionError  	159	5	replace
570	[BUG]  [BUGGY]  u  =  p  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  1;	  u    =    p    +    r;    	compilable	  [FE]  AssertionError  	159	5	replace
571	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    q;    u  =  d  +  q;	  	compilable	  [FE]  AssertionError  	23	4	add
572	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  d  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    q;    u  =  d  +  q;	  	compilable	  [FE]  AssertionError  	23	4	add
573	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  a  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    q;    u  =  a  +  q;	  	compilable	  [FE]  AssertionError  	23	4	add
574	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  a  +  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  a  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    q;    u  =  a  +  q;	  	compilable	  [FE]  AssertionError  	23	4	add
575	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  d  +  q);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  d  +  q);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    q;    u  =  d  +  q);	  	non-compiled	[CE]  ';'  expected	23	None	add
576	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  p  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    q;    u  =  p  +  q;	  	compilable	  [FE]  AssertionError  	23	4	add
577	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  p  +  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  p  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    q;    u  =  p  +  q;	  	compilable	  [FE]  AssertionError  	23	4	add
578	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  r  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    q;    u  =  r  +  q;	  	compilable	  [FE]  AssertionError  	23	4	add
579	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  r  +  q;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  r  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    q;    u  =  r  +  q;	  	compilable	  [FE]  AssertionError  	23	4	add
580	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  d;  d  =  p  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    q    +    d;    d  =  p  /  q  +  d;	  	compilable	  [FE]  AssertionError  	137	4	add
581	[BUG]  [BUGGY]  d  =  p  /  q  +  d;  d  =  p  /  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  d;  d  =  p  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    d;    d  =  p  /  q  +  d;	  	compilable	  [FE]  AssertionError  	137	4	add
582	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  d;  d  =  p  %  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    q    +    d;    d  =  p  %  q  +  d;	  	compilable	  [FE]  AssertionError  	137	5	add
583	[BUG]  [BUGGY]  d  =  p  /  q  +  d;  d  =  p  %  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  d;  d  =  p  %  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    d;    d  =  p  %  q  +  d;	  	compilable	  [FE]  AssertionError  	137	5	add
584	[BUG]  [BUGGY]  d  =  p  /  q  +  d;  d  =  p  /  q  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  d;  d  =  p  /  q  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    d;    d  =  p  /  q  +  d);	  	non-compiled	[CE]  ';'  expected	137	None	add
585	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  d;  d  =  p  -  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    q    +    d;    d  =  p  -  q  +  d;	  	compilable	  [FE]  AssertionError  	137	6	add
586	[BUG]  [BUGGY]  d  =  p  /  q  +  d;  d  =  p  -  q  +  d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  d;  d  =  p  -  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    d;    d  =  p  -  q  +  d;	  	compilable	  [FE]  AssertionError  	137	6	add
587	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  d;  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    q    +    d;    d  =  p  *  q  +  d;	  	compilable	  [FE]  AssertionError  	137	5	add
588	[BUG]  [BUGGY]  d  =  p  /  q  +  d;  d  =  p  *  q  +  d;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  d;  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    d;    d  =  p  *  q  +  d;	  	compilable	  [FE]  AssertionError  	137	5	add
589	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  m;  u  =  r  +  x;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	6	replace
590	[BUG]  [BUGGY]  u  =  d  +  m;  u  =  r  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  m;  u  =  r  +  x;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	6	replace
591	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  x;  u  =  r  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  x;  u  =  r  +  p;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	5	replace
592	[BUG]  [BUGGY]  u  =  d  +  x;  u  =  r  +  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  x;  u  =  r  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  x;  u  =  r  +  p;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	5	replace
593	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q;  u  =  r  +  x;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	6	replace
594	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  r  +  x;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  r  +  x;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	6	replace
595	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    r  =  p  *  q;  d  =  p  *  q;  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        *        q;        r    =    p    *    q;    d  =  p  *  q;  r  =  p  *  q;	  	compilable	  [FE]  AssertionError  	191	5	add
596	[BUG]  [BUGGY]          d    =    p    *    q;    r  =  p  *  q;  d  =  p  *  q;  r  =  p  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    r  =  p  *  q;  d  =  p  *  q;  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        r    =    p    *    q;    d  =  p  *  q;  r  =  p  *  q;	  	compilable	  [FE]  AssertionError  	191	5	add
597	[BUG]  [BUGGY]          d    =    p    *    q;    r  =  p  *  q;  d  =  p  *  q;  l  =  p  *  q;  [CE]  cannot  find  symbol  l  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    r  =  p  *  q;  d  =  p  *  q;  l  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        r    =    p    *    q;    d  =  p  *  q;  l  =  p  *  q;	  	non-compiled	[CE]  cannot  find  symbol  l	191	None	add
598	[BUG]  [BUGGY]          d    =    p    *    q;    r  =  p  *  q;  d  =  p  *  q;  r  =  p  *  q);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    r  =  p  *  q;  d  =  p  *  q;  r  =  p  *  q);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        r    =    p    *    q;    d  =  p  *  q;  r  =  p  *  q);	  	non-compiled	[CE]  ';'  expected	191	None	add
599	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  r  *  q;	  d    =    m    *    q;    	compilable	  [FE]  AssertionError  	169	5	replace
600	[BUG]  [BUGGY]  d  =  r  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  r  *  q;	  d    =    m    *    q;    	compilable	  [FE]  AssertionError  	169	5	replace
601	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  q  *  m;	  d    =    m    *    q;    	compilable	  [FE]  AssertionError  	169	5	replace
602	[BUG]  [BUGGY]  d  =  q  *  m;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  q  *  m;	  d    =    m    *    q;    	compilable	  [FE]  AssertionError  	169	5	replace
603	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    a;    d  =  p  /  q;  d  =  p  /  q  +  a;	  	compilable	  [FE]  AssertionError  	119	5	add
604	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    a;    d  =  p  /  q;  d  =  p  /  q  +  a;	  	compilable	  [FE]  AssertionError  	119	5	add
605	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    a;    d  =  p  /  q;  d  =  p  /  q  +  b;	  	compilable	  [FE]  AssertionError  	119	5	add
606	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  b;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    a;    d  =  p  /  q;  d  =  p  /  q  +  b;	  	compilable	  [FE]  AssertionError  	119	5	add
607	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  a);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  a);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    a;    d  =  p  /  q;  d  =  p  /  q  +  a);	  	non-compiled	[CE]  ';'  expected	119	None	add
608	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  a  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  a  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    a;    d  =  p  /  q;  d  =  p  /  q  +  a	  	non-compiled	[CE]  ';'  expected	119	None	add
609	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  %  q;  d  =  p  /  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    a;    d  =  p  %  q;  d  =  p  /  q  +  a;	  	compilable	  [FE]  AssertionError  	119	5	add
610	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  %  q;  d  =  p  /  q  +  a;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  %  q;  d  =  p  /  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    a;    d  =  p  %  q;  d  =  p  /  q  +  a;	  	compilable	  [FE]  AssertionError  	119	5	add
611	[BUG]  [BUGGY]  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  m  +  d;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  m  +  d;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  m  +  d;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol2)    {    d    =    tol1;    }    	non-compiled	[CE]  cannot  find  symbol  i	75	None	replace
612	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  x;	  u    =    d    +    x;    u    =    p    +    x;    	compilable	  [FE]  AssertionError  	215	4	replace
613	[BUG]  [BUGGY]  u  =  p  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  x;	  u    =    d    +    x;    u    =    p    +    x;    	compilable	  [FE]  AssertionError  	215	4	replace
614	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  d  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    m;    u  =  d  +  m;	  	compilable	  [FE]  AssertionError  	43	4	add
615	[BUG]  [BUGGY]  u  =  d  +  m;  u  =  d  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  d  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    m;    u  =  d  +  m;	  	compilable	  [FE]  AssertionError  	43	4	add
616	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  m  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    m;    u  =  m  +  m;	  	compilable	  [FE]  AssertionError  	43	4	add
617	[BUG]  [BUGGY]  u  =  d  +  m;  u  =  m  +  m;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  m  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    m;    u  =  m  +  m;	  	compilable	  [FE]  AssertionError  	43	4	add
618	[BUG]  [BUGGY]  u  =  d  +  m;  u  =  d  +  m);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  d  +  m);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    m;    u  =  d  +  m);	  	non-compiled	[CE]  ';'  expected	43	None	add
619	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  a  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    m;    u  =  a  +  m;	  	compilable	  [FE]  AssertionError  	43	4	add
620	[BUG]  [BUGGY]  u  =  d  +  m;  u  =  a  +  m;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  a  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    m;    u  =  a  +  m;	  	compilable	  [FE]  AssertionError  	43	4	add
621	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  r  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    m;    u  =  r  +  m;	  	compilable	  [FE]  AssertionError  	43	4	add
622	[BUG]  [BUGGY]  u  =  d  +  m;  u  =  r  +  m;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  r  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    m;    u  =  r  +  m;	  	compilable	  [FE]  AssertionError  	43	4	add
623	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  d  +  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    a;    u  =  d  +  a;	  	compilable	  [FE]  AssertionError  	131	4	add
624	[BUG]  [BUGGY]  u  =  d  +  a;  u  =  d  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  d  +  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    a;    u  =  d  +  a;	  	compilable	  [FE]  AssertionError  	131	4	add
625	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  a  +  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    a;    u  =  a  +  a;	  	compilable	  [FE]  AssertionError  	131	4	add
626	[BUG]  [BUGGY]  u  =  d  +  a;  u  =  a  +  a;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  a  +  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    a;    u  =  a  +  a;	  	compilable	  [FE]  AssertionError  	131	4	add
627	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  p  +  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    a;    u  =  p  +  a;	  	compilable	  [FE]  AssertionError  	131	4	add
628	[BUG]  [BUGGY]  u  =  d  +  a;  u  =  p  +  a;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  p  +  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    a;    u  =  p  +  a;	  	compilable	  [FE]  AssertionError  	131	4	add
629	[BUG]  [BUGGY]  u  =  d  +  a;  u  =  d  +  a);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  d  +  a);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    a;    u  =  d  +  a);	  	non-compiled	[CE]  ';'  expected	131	None	add
630	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  r  +  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    a;    u  =  r  +  a;	  	compilable	  [FE]  AssertionError  	131	4	add
631	[BUG]  [BUGGY]  u  =  d  +  a;  u  =  r  +  a;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  r  +  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    a;    u  =  r  +  a;	  	compilable	  [FE]  AssertionError  	131	4	add
632	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  *  q;	  u    =    p    +    q;    	compilable	  [FE]  AssertionError  	163	5	replace
633	[BUG]  [BUGGY]  u  =  p  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  *  q;	  u    =    p    +    q;    	compilable	  [FE]  AssertionError  	163	5	replace
634	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  q  *  r;	  u    =    p    +    q;    	compilable	  [FE]  AssertionError  	163	5	replace
635	[BUG]  [BUGGY]  u  =  p  +  q  *  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  q  *  r;	  u    =    p    +    q;    	compilable	  [FE]  AssertionError  	163	5	replace
636	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  q  +  m;	          d    =    p    *    q;    d    =    p    *    q    +    m;    	compilable	  [FE]  AssertionError  	63	5	replace
637	[BUG]  [BUGGY]  d  =  p  *  q  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  +  m;	          d    =    p    *    q;    d    =    p    *    q    +    m;    	compilable	  [FE]  AssertionError  	63	5	replace
638	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  q  +  a;	          d    =    p    *    q;    d    =    p    *    q    +    a;    	compilable	  [FE]  AssertionError  	60	5	replace
639	[BUG]  [BUGGY]  d  =  p  *  q  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  +  a;	          d    =    p    *    q;    d    =    p    *    q    +    a;    	compilable	  [FE]  AssertionError  	60	5	replace
640	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  r  +  a;	          d    =    p    *    q;    d    =    p    *    q    +    a;    	compilable	  [FE]  AssertionError  	60	5	replace
641	[BUG]  [BUGGY]  d  =  p  *  r  +  a;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  r  +  a;	          d    =    p    *    q;    d    =    p    *    q    +    a;    	compilable	  [FE]  AssertionError  	60	5	replace
642	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  r;  d  =  p  *  q  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    *    q    +    r;    d  =  p  *  q  +  r;	  	compilable	  [FE]  AssertionError  	178	4	add
643	[BUG]  [BUGGY]  d  =  p  *  q  +  r;  d  =  p  *  q  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  r;  d  =  p  *  q  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    q    +    r;    d  =  p  *  q  +  r;	  	compilable	  [FE]  AssertionError  	178	4	add
644	[BUG]  [BUGGY]  d  =  p  *  q  +  r;  d  =  p  *  q  +  r);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  r;  d  =  p  *  q  +  r);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    q    +    r;    d  =  p  *  q  +  r);	  	non-compiled	[CE]  ';'  expected	178	None	add
645	[BUG]  [BUGGY]  d  =  p  *  q  +  r;  d  =  p  *  q  +  l;  [CE]  cannot  find  symbol  l  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  r;  d  =  p  *  q  +  l;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    q    +    r;    d  =  p  *  q  +  l;	  	non-compiled	[CE]  cannot  find  symbol  l	178	None	add
646	[BUG]  [BUGGY]  d  =  p  *  q  +  r;  d  =  p  *  k  +  r;  [CE]  cannot  find  symbol  k  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  r;  d  =  p  *  k  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    q    +    r;    d  =  p  *  k  +  r;	  	non-compiled	[CE]  cannot  find  symbol  k	178	None	add
647	[BUG]  [BUGGY]  (d  =  m  +  d;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  (d  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	(d  =  m  +  d;	          d    =    m    +    d;    (d    =    m    +    d;    	non-compiled	[CE]  ')'  expected	207	None	replace
648	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  d;  u  =  r  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    r    +    d;    u  =  r  +  d;	  	compilable	  [FE]  AssertionError  	12	4	add
649	[BUG]  [BUGGY]  u  =  r  +  d;  u  =  r  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  d;  u  =  r  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    r    +    d;    u  =  r  +  d;	  	compilable	  [FE]  AssertionError  	12	4	add
650	[BUG]  [BUGGY]  u  =  r  +  d;  int  u  =  r  +  d;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  d;  int  u  =  r  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    r    +    d;    int  u  =  r  +  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	12	None	add
651	[BUG]  [BUGGY]  u  =  r  +  d;  u  =  r  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  d;  u  =  r  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    r    +    d;    u  =  r  +  d);	  	non-compiled	[CE]  ';'  expected	12	None	add
652	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  d;  r  =  r  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    r    +    d;    r  =  r  +  d;	  	compilable	  [FE]  AssertionError  	12	4	add
653	[BUG]  [BUGGY]  u  =  r  +  d;  r  =  r  +  d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  d;  r  =  r  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    r    +    d;    r  =  r  +  d;	  	compilable	  [FE]  AssertionError  	12	4	add
654	[BUG]  [BUGGY]  u  =  r  +  d;  u  =  r  +  d.tol1;  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  d;  u  =  r  +  d.tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    r    +    d;    u  =  r  +  d.tol1;	  	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	add
655	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	non-compiled	[CE]  ';'  expected	101	None	replace
656	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	non-compiled	[CE]  ';'  expected	101	None	replace
657	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	compilable	  [FE]  AssertionError  	101	5	replace
658	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	compilable	  [FE]  AssertionError  	101	5	replace
659	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
660	[BUG]  [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(m    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	72	None	replace
661	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  d  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    u;    u  =  d  +  u;	  	compilable	  [FE]  AssertionError  	10	4	add
662	[BUG]  [BUGGY]  u  =  d  +  u;  u  =  d  +  u;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  d  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    u;    u  =  d  +  u;	  	compilable	  [FE]  AssertionError  	10	4	add
663	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  a  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    u;    u  =  a  +  u;	  	compilable	  [FE]  AssertionError  	10	4	add
664	[BUG]  [BUGGY]  u  =  d  +  u;  u  =  a  +  u;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  a  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    u;    u  =  a  +  u;	  	compilable	  [FE]  AssertionError  	10	4	add
665	[BUG]  [BUGGY]  u  =  d  +  u;  u  =  d  +  u);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  d  +  u);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    u;    u  =  d  +  u);	  	non-compiled	[CE]  ';'  expected	10	None	add
666	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  p  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    u;    u  =  p  +  u;	  	compilable	  [FE]  AssertionError  	10	4	add
667	[BUG]  [BUGGY]  u  =  d  +  u;  u  =  p  +  u;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  p  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    u;    u  =  p  +  u;	  	compilable	  [FE]  AssertionError  	10	4	add
668	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  m  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    u;    u  =  m  +  u;	  	compilable	  [FE]  AssertionError  	10	4	add
669	[BUG]  [BUGGY]  u  =  d  +  u;  u  =  m  +  u;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  m  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    u;    u  =  m  +  u;	  	compilable	  [FE]  AssertionError  	10	4	add
670	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  m  +  d;  u  =  a  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        a        +        d;        u    =    m    +    d;    u  =  a  +  d;  u  =  m  +  d;	  	compilable	  [FE]  AssertionError  	170	4	add
671	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  m  +  d;  u  =  a  +  d;  u  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  m  +  d;  u  =  a  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    m    +    d;    u  =  a  +  d;  u  =  m  +  d;	  	compilable	  [FE]  AssertionError  	170	4	add
672	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  m  +  d;  U  =  a  +  d;  u  =  m  +  d;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  m  +  d;  U  =  a  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    m    +    d;    U  =  a  +  d;  u  =  m  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	170	None	add
673	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  m  +  d;  int  u  =  a  +  d;  u  =  m  +  d;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  m  +  d;  int  u  =  a  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    m    +    d;    int  u  =  a  +  d;  u  =  m  +  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	170	None	add
674	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  m  +  d;  u  =  a  +  d;  u  =  m  +  d);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  m  +  d;  u  =  a  +  d;  u  =  m  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    m    +    d;    u  =  a  +  d;  u  =  m  +  d);	  	non-compiled	[CE]  ';'  expected	170	None	add
675	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  x;	          d    =    p    /    q;    d    =    p    /    q3;    	compilable	  [FE]  AssertionError  	241	5	replace
676	[BUG]  [BUGGY]  d  =  p  /  x;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  x;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  x;	          d    =    p    /    q;    d    =    p    /    q3;    	compilable	  [FE]  AssertionError  	241	5	replace
677	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  m  +  d;	          d    =    p    /    m;    d    =    p    /    m    +    d;    	compilable	  [FE]  AssertionError  	4	5	replace
678	[BUG]  [BUGGY]  d  =  p  /  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  m  +  d;	          d    =    p    /    m;    d    =    p    /    m    +    d;    	compilable	  [FE]  AssertionError  	4	5	replace
679	[BUG]  [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *  (a  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	218	None	replace
680	[BUG]  [BUGGY]  if(p  <  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(d    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	255	None	replace
681	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    +    d;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
682	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    +    d;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
683	[BUG]  [BUGGY]  if(x  <  =  m)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  d;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  m)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  =  m)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	250	None	replace
684	[BUG]  [BUGGY]  if(r  ==  0)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  ==  0)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  ==  0)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    +    d;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
685	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    *    r;    d  =  p  *  r;	  	compilable	  [FE]  AssertionError  	51	5	add
686	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r;  d  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    r;    d  =  p  *  r;	  	compilable	  [FE]  AssertionError  	51	5	add
687	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  r);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r;  d  =  p  *  r);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    r;    d  =  p  *  r);	  	non-compiled	[CE]  ';'  expected	51	None	add
688	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  l;  [CE]  cannot  find  symbol  l  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r;  d  =  p  *  l;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    r;    d  =  p  *  l;	  	non-compiled	[CE]  cannot  find  symbol  l	51	None	add
689	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    *    r;    d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	51	5	add
690	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    r;    d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	51	5	add
691	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  r  /  m;	  d    =    q    /    m;    	compilable	  [FE]  AssertionError  	209	5	replace
692	[BUG]  [BUGGY]  d  =  r  /  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  r  /  m;	  d    =    q    /    m;    	compilable	  [FE]  AssertionError  	209	5	replace
693	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  u  +  d;  u  =  u  +  d;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        u        +        d;        u    =    u    +    d;    u  =  u  +  d;  u  =  u  +  d;	  	compilable	  [FE]  AssertionError  	105	4	add
694	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  u  +  d;  u  =  u  +  d;  u  =  u  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  u  +  d;  u  =  u  +  d;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    u    +    d;    u  =  u  +  d;  u  =  u  +  d;	  	compilable	  [FE]  AssertionError  	105	4	add
695	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  u  +  d;  U  =  u  +  d;  u  =  u  +  d;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  u  +  d;  U  =  u  +  d;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    u    +    d;    U  =  u  +  d;  u  =  u  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	105	None	add
696	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  u  +  d;  u  =  a  +  d;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        u        +        d;        u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;	  	compilable	  [FE]  AssertionError  	105	4	add
697	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  u  +  d;  u  =  a  +  d;  u  =  u  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  u  +  d;  u  =  a  +  d;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;	  	compilable	  [FE]  AssertionError  	105	4	add
698	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  +  a;	          d    =    p    /    q;    d    =    p    /    q    +    a;    	compilable	  [FE]  AssertionError  	120	5	replace
699	[BUG]  [BUGGY]  d  =  p  /  q  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  +  a;	          d    =    p    /    q;    d    =    p    /    q    +    a;    	compilable	  [FE]  AssertionError  	120	5	replace
700	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  m  /  q;  d  =  m  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    +    q;    d  =  m  /  q;  d  =  m  +  q;	  	compilable	  [FE]  AssertionError  	201	5	add
701	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  m  /  q;  d  =  m  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  m  /  q;  d  =  m  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    +    q;    d  =  m  /  q;  d  =  m  +  q;	  	compilable	  [FE]  AssertionError  	201	5	add
702	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  m  *  q;  d  =  m  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    +    q;    d  =  m  *  q;  d  =  m  +  q;	  	compilable	  [FE]  AssertionError  	201	5	add
703	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  m  *  q;  d  =  m  +  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  m  *  q;  d  =  m  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    +    q;    d  =  m  *  q;  d  =  m  +  q;	  	compilable	  [FE]  AssertionError  	201	5	add
704	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  m  /  q;  d  =  m  +  q);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  m  /  q;  d  =  m  +  q);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    +    q;    d  =  m  /  q;  d  =  m  +  q);	  	non-compiled	[CE]  ';'  expected	201	None	add
705	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  m  +  q;  d  =  m  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    +    q;    d  =  m  +  q;  d  =  m  +  q;	  	compilable	  [FE]  AssertionError  	201	5	add
706	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  m  +  q;  d  =  m  +  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  m  +  q;  d  =  m  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    +    q;    d  =  m  +  q;  d  =  m  +  q;	  	compilable	  [FE]  AssertionError  	201	5	add
707	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  q  +  d;	          d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	58	5	replace
708	[BUG]  [BUGGY]  d  =  p  *  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  +  d;	          d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	58	5	replace
709	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  p  +  d;  u  =  q  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        q        +        d;        u    =    p    +    d;    u  =  q  +  d;  u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	38	4	add
710	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  p  +  d;  u  =  q  +  d;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  p  +  d;  u  =  q  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    p    +    d;    u  =  q  +  d;  u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	38	4	add
711	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  p  +  d;  U  =  q  +  d;  u  =  p  +  d;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  p  +  d;  U  =  q  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    p    +    d;    U  =  q  +  d;  u  =  p  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	38	None	add
712	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  p  +  d;  u  =  q  +  d;  u  =  p  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  p  +  d;  u  =  q  +  d;  u  =  p  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    p    +    d;    u  =  q  +  d;  u  =  p  +  d);	  	non-compiled	[CE]  ';'  expected	38	None	add
713	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  d  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    tol1;    u  =  d  +  tol1;	  	compilable	  [FE]  AssertionError  	152	4	add
714	[BUG]  [BUGGY]  u  =  d  +  tol1;  u  =  d  +  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  d  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol1;    u  =  d  +  tol1;	  	compilable	  [FE]  AssertionError  	152	4	add
715	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  d  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    tol1;    u  =  d  +  tol2;	  	compilable	  [FE]  AssertionError  	152	4	add
716	[BUG]  [BUGGY]  u  =  d  +  tol1;  u  =  d  +  tol2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  d  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol1;    u  =  d  +  tol2;	  	compilable	  [FE]  AssertionError  	152	4	add
717	[BUG]  [BUGGY]  u  =  d  +  tol1;  u  =  d  +  tol1);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  d  +  tol1);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol1;    u  =  d  +  tol1);	  	non-compiled	[CE]  ';'  expected	152	None	add
718	[BUG]  [BUGGY]  u  =  d  +  tol1;  u  =  d  +  tol1.;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  d  +  tol1.;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol1;    u  =  d  +  tol1.;	  	non-compiled	[CE]  <identifier>  expected	152	None	add
719	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  a  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    tol1;    u  =  a  +  tol1;	  	compilable	  [FE]  AssertionError  	152	4	add
720	[BUG]  [BUGGY]  u  =  d  +  tol1;  u  =  a  +  tol1;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  a  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol1;    u  =  a  +  tol1;	  	compilable	  [FE]  AssertionError  	152	4	add
721	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  r;	  u    =    d    *    x;    	compilable	  [FE]  AssertionError  	149	5	replace
722	[BUG]  [BUGGY]  u  =  d  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  r;	  u    =    d    *    x;    	compilable	  [FE]  AssertionError  	149	5	replace
723	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  *  x;	  u    =    d    *    x;    	compilable	  [FE]  AssertionError  	149	5	replace
724	[BUG]  [BUGGY]  u  =  p  *  x;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  *  x;	  u    =    d    *    x;    	compilable	  [FE]  AssertionError  	149	5	replace
725	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  t;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  t;	  u    =    d    *    x;    	compilable	  [FE]  AssertionError  	149	5	replace
726	[BUG]  [BUGGY]  u  =  d  *  t;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  t;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  t;	  u    =    d    *    x;    	compilable	  [FE]  AssertionError  	149	5	replace
727	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	248	None	replace
728	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	248	None	replace
729	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	248	None	replace
730	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  t))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  t))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  t))  {  d  =  p  /  q  +  d;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    x))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
731	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	111	4	add
732	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	111	4	add
733	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  %  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q;    d  =  p  %  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	111	4	add
734	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  %  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  %  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q;    d  =  p  %  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	111	4	add
735	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;  d  =  p  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q;    d  =  p  /  q;  d  =  p  %  q;	  	compilable	  [FE]  AssertionError  	111	5	add
736	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;  d  =  p  %  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;  d  =  p  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q;    d  =  p  /  q;  d  =  p  %  q;	  	compilable	  [FE]  AssertionError  	111	5	add
737	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  *  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q;    d  =  p  *  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	111	4	add
738	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  *  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  *  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q;    d  =  p  *  q;  d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	111	4	add
739	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  m  +  d;  u  =  m  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        m        +        d;        u    =    m    +    d;    u  =  m  +  d;  u  =  m  +  d;	  	compilable	  [FE]  AssertionError  	142	4	add
740	[BUG]  [BUGGY]  u    =    m    +    d;    u  =  m  +  d;  u  =  m  +  d;  u  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  m  +  d;  u  =  m  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        u    =    m    +    d;    u  =  m  +  d;  u  =  m  +  d;	  	compilable	  [FE]  AssertionError  	142	4	add
741	[BUG]  [BUGGY]  u    =    m    +    d;    u  =  m  +  d;  U  =  m  +  d;  u  =  m  +  d;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  m  +  d;  U  =  m  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        u    =    m    +    d;    U  =  m  +  d;  u  =  m  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	142	None	add
742	[BUG]  [BUGGY]  u    =    m    +    d;    u  =  m  +  d;  int  u  =  m  +  d;  u  =  m  +  d;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  m  +  d;  int  u  =  m  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        u    =    m    +    d;    int  u  =  m  +  d;  u  =  m  +  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	142	None	add
743	[BUG]  [BUGGY]  u    =    m    +    d;    u  =  m  +  d;  u  =  m  +  d;  u  =  m  +  d);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  m  +  d;  u  =  m  +  d;  u  =  m  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        u    =    m    +    d;    u  =  m  +  d;  u  =  m  +  d);	  	non-compiled	[CE]  ';'  expected	142	None	add
744	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  u  =  u  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    u    +    tol2;    u  =  u  +  tol2;	  	compilable	  [FE]  AssertionError  	182	4	add
745	[BUG]  [BUGGY]  u  =  u  +  tol2;  u  =  u  +  tol2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  u  =  u  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol2;    u  =  u  +  tol2;	  	compilable	  [FE]  AssertionError  	182	4	add
746	[BUG]  [BUGGY]  u  =  u  +  tol2;  u  =  u  +  tol2);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  u  =  u  +  tol2);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol2;    u  =  u  +  tol2);	  	non-compiled	[CE]  ';'  expected	182	None	add
747	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  u  =  a  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    u    +    tol2;    u  =  a  +  tol2;	  	compilable	  [FE]  AssertionError  	182	4	add
748	[BUG]  [BUGGY]  u  =  u  +  tol2;  u  =  a  +  tol2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  u  =  a  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol2;    u  =  a  +  tol2;	  	compilable	  [FE]  AssertionError  	182	4	add
749	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  u  =  u  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    u    +    tol2;    u  =  u  +  tol1;	  	compilable	  [FE]  AssertionError  	182	4	add
750	[BUG]  [BUGGY]  u  =  u  +  tol2;  u  =  u  +  tol1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  u  =  u  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol2;    u  =  u  +  tol1;	  	compilable	  [FE]  AssertionError  	182	4	add
751	[BUG]  [BUGGY]  u  =  u  +  tol2;  U  =  u  +  tol2;  [CE]  cannot  find  symbol  U  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  U  =  u  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol2;    U  =  u  +  tol2;	  	non-compiled	[CE]  cannot  find  symbol  U	182	None	add
752	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  q  *  r;	  d    =    p    /    q    *    r;    	compilable	  [FE]  AssertionError  	196	5	replace
753	[BUG]  [BUGGY]  d  =  p  *  q  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  *  r;	  d    =    p    /    q    *    r;    	compilable	  [FE]  AssertionError  	196	5	replace
754	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  *  r  +  1;	  d    =    p    /    q    *    r;    	compilable	  [FE]  AssertionError  	196	5	replace
755	[BUG]  [BUGGY]  d  =  p  /  q  *  r  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  *  r  +  1;	  d    =    p    /    q    *    r;    	compilable	  [FE]  AssertionError  	196	5	replace
756	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  *  2;	  d    =    p    /    q    *    r;    	compilable	  [FE]  AssertionError  	196	5	replace
757	[BUG]  [BUGGY]  d  =  p  /  q  *  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  *  2;	  d    =    p    /    q    *    r;    	compilable	  [FE]  AssertionError  	196	5	replace
758	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  /  q;  d  =  m  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    %    q;    d  =  m  /  q;  d  =  m  %  q;	  	compilable	  [FE]  AssertionError  	124	5	add
759	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  /  q;  d  =  m  %  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  /  q;  d  =  m  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    %    q;    d  =  m  /  q;  d  =  m  %  q;	  	compilable	  [FE]  AssertionError  	124	5	add
760	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  %  q;  d  =  m  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    %    q;    d  =  m  %  q;  d  =  m  %  q;	  	compilable	  [FE]  AssertionError  	124	5	add
761	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  %  q;  d  =  m  %  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  %  q;  d  =  m  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    %    q;    d  =  m  %  q;  d  =  m  %  q;	  	compilable	  [FE]  AssertionError  	124	5	add
762	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  *  q;  d  =  m  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    %    q;    d  =  m  *  q;  d  =  m  %  q;	  	compilable	  [FE]  AssertionError  	124	5	add
763	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  *  q;  d  =  m  %  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  *  q;  d  =  m  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    %    q;    d  =  m  *  q;  d  =  m  %  q;	  	compilable	  [FE]  AssertionError  	124	5	add
764	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  /  q;  d  =  m  %  q);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  /  q;  d  =  m  %  q);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    %    q;    d  =  m  /  q;  d  =  m  %  q);	  	non-compiled	[CE]  ';'  expected	124	None	add
765	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  p;  u  =  d  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    p;    u  =  d  +  p;	  	compilable	  [FE]  AssertionError  	160	4	add
766	[BUG]  [BUGGY]  u  =  d  +  p;  u  =  d  +  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  p;  u  =  d  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    p;    u  =  d  +  p;	  	compilable	  [FE]  AssertionError  	160	4	add
767	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  p;  u  =  p  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    p;    u  =  p  +  p;	  	compilable	  [FE]  AssertionError  	160	4	add
768	[BUG]  [BUGGY]  u  =  d  +  p;  u  =  p  +  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  p;  u  =  p  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    p;    u  =  p  +  p;	  	compilable	  [FE]  AssertionError  	160	4	add
769	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  p;  u  =  a  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    p;    u  =  a  +  p;	  	compilable	  [FE]  AssertionError  	160	4	add
770	[BUG]  [BUGGY]  u  =  d  +  p;  u  =  a  +  p;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  p;  u  =  a  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    p;    u  =  a  +  p;	  	compilable	  [FE]  AssertionError  	160	4	add
771	[BUG]  [BUGGY]  u  =  d  +  p;  u  =  d  +  p);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  p;  u  =  d  +  p);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    p;    u  =  d  +  p);	  	non-compiled	[CE]  ';'  expected	160	None	add
772	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  p;  u  =  r  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    p;    u  =  r  +  p;	  	compilable	  [FE]  AssertionError  	160	4	add
773	[BUG]  [BUGGY]  u  =  d  +  p;  u  =  r  +  p;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  p;  u  =  r  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    p;    u  =  r  +  p;	  	compilable	  [FE]  AssertionError  	160	4	add
774	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    q    *    d;    u  =  q  *  d;	  	compilable	  [FE]  AssertionError  	25	4	add
775	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    *    d;    u  =  q  *  d;	  	compilable	  [FE]  AssertionError  	25	4	add
776	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    *    d;    u  =  q  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  not  a  statement	25	None	add
777	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  <  =  m)  {  d  =  -tol1;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  <  =  m)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    *    d;    u  =  q  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  <  =  m)  {  d  =  -tol1;  }	  	non-compiled	[CE]  not  a  statement	25	None	add
778	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  isMinim  -  a  +  b  -  u  +  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  isMinim  -  a  +  b  -  u  +  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    *    d;    u  =  q  *  d;  isMinim  -  a  +  b  -  u  +  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  not  a  statement	25	None	add
779	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  x  +  d;  d  =  x  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    x    +    d;    d  =  x  +  d;	  	compilable	  [FE]  AssertionError  	232	5	add
780	[BUG]  [BUGGY]  d  =  x  +  d;  d  =  x  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  x  +  d;  d  =  x  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    x    +    d;    d  =  x  +  d;	  	compilable	  [FE]  AssertionError  	232	5	add
781	[BUG]  [BUGGY]  d  =  x  +  d;  d  =  y  +  d;  [CE]  cannot  find  symbol  y  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  x  +  d;  d  =  y  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    x    +    d;    d  =  y  +  d;	  	non-compiled	[CE]  cannot  find  symbol  y	232	None	add
782	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  x  +  d;  d  =  p  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    x    +    d;    d  =  p  +  d;	  	compilable	  [FE]  AssertionError  	232	4	add
783	[BUG]  [BUGGY]  d  =  x  +  d;  d  =  p  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  x  +  d;  d  =  p  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    x    +    d;    d  =  p  +  d;	  	compilable	  [FE]  AssertionError  	232	4	add
784	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  x  +  d;  d  =  a  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    x    +    d;    d  =  a  +  d;	  	compilable	  [FE]  AssertionError  	232	5	add
785	[BUG]  [BUGGY]  d  =  x  +  d;  d  =  a  +  d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  x  +  d;  d  =  a  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    x    +    d;    d  =  a  +  d;	  	compilable	  [FE]  AssertionError  	232	5	add
786	[BUG]  [BUGGY]  d  =  x  +  d;  d  =  x  +  d);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  x  +  d;  d  =  x  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    x    +    d;    d  =  x  +  d);	  	non-compiled	[CE]  ';'  expected	232	None	add
787	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  tol2;	  u    =    d    +    tol2;    	compilable	  [FE]  AssertionError  	155	5	replace
788	[BUG]  [BUGGY]  u  =  d  *  tol2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  tol2;	  u    =    d    +    tol2;    	compilable	  [FE]  AssertionError  	155	5	replace
789	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  d  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    r;    u  =  d  +  r;	  	compilable	  [FE]  AssertionError  	150	4	add
790	[BUG]  [BUGGY]  u  =  d  +  r;  u  =  d  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  d  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    r;    u  =  d  +  r;	  	compilable	  [FE]  AssertionError  	150	4	add
791	[BUG]  [BUGGY]  u  =  d  +  r;  u  =  d  +  r);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  d  +  r);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    r;    u  =  d  +  r);	  	non-compiled	[CE]  ';'  expected	150	None	add
792	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  r  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    r;    u  =  r  +  r;	  	compilable	  [FE]  AssertionError  	150	4	add
793	[BUG]  [BUGGY]  u  =  d  +  r;  u  =  r  +  r;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  r  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    r;    u  =  r  +  r;	  	compilable	  [FE]  AssertionError  	150	4	add
794	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  a  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    r;    u  =  a  +  r;	  	compilable	  [FE]  AssertionError  	150	4	add
795	[BUG]  [BUGGY]  u  =  d  +  r;  u  =  a  +  r;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  a  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    r;    u  =  a  +  r;	  	compilable	  [FE]  AssertionError  	150	4	add
796	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  p  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    r;    u  =  p  +  r;	  	compilable	  [FE]  AssertionError  	150	4	add
797	[BUG]  [BUGGY]  u  =  d  +  r;  u  =  p  +  r;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  p  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    r;    u  =  p  +  r;	  	compilable	  [FE]  AssertionError  	150	4	add
798	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  a  +  d;  u  =  a  +  d;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        a        +        d;        u    =    a    +    d;    u  =  a  +  d;  u  =  a  +  d;	  	compilable	  [FE]  AssertionError  	82	4	add
799	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  a  +  d;  u  =  a  +  d;  u  =  a  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  a  +  d;  u  =  a  +  d;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    a    +    d;    u  =  a  +  d;  u  =  a  +  d;	  	compilable	  [FE]  AssertionError  	82	4	add
800	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  a  +  d;  U  =  a  +  d;  u  =  a  +  d;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  a  +  d;  U  =  a  +  d;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    a    +    d;    U  =  a  +  d;  u  =  a  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	82	None	add
801	[BUG]  [BUGGY]  if(x  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
802	[BUG]  [BUGGY]  if(p  <  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	66	None	replace
803	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        q        +        d;        u    =    b    +    d;    u  =  q  +  d;  u  =  b  +  d;	  	compilable	  [FE]  AssertionError  	41	4	add
804	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  b  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    b    +    d;    u  =  q  +  d;  u  =  b  +  d;	  	compilable	  [FE]  AssertionError  	41	4	add
805	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  U  =  q  +  d;  u  =  b  +  d;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  U  =  q  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    b    +    d;    U  =  q  +  d;  u  =  b  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	41	None	add
806	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  b  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  b  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    b    +    d;    u  =  q  +  d;  u  =  b  +  d);	  	non-compiled	[CE]  ';'  expected	41	None	add
807	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  p  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        q        +        d;        u    =    b    +    d;    u  =  p  +  d;  u  =  b  +  d;	  	compilable	  [FE]  AssertionError  	41	4	add
808	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  p  +  d;  u  =  b  +  d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  p  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    b    +    d;    u  =  p  +  d;  u  =  b  +  d;	  	compilable	  [FE]  AssertionError  	41	4	add
809	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  /  m;  d  =  p  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    %    m;    d  =  p  /  m;  d  =  p  %  m;	  	compilable	  [FE]  AssertionError  	5	5	add
810	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  /  m;  d  =  p  %  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  /  m;  d  =  p  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    %    m;    d  =  p  /  m;  d  =  p  %  m;	  	compilable	  [FE]  AssertionError  	5	5	add
811	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  %  m;  d  =  p  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    %    m;    d  =  p  %  m;  d  =  p  %  m;	  	compilable	  [FE]  AssertionError  	5	5	add
812	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  %  m;  d  =  p  %  m;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  %  m;  d  =  p  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    %    m;    d  =  p  %  m;  d  =  p  %  m;	  	compilable	  [FE]  AssertionError  	5	5	add
813	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  /  m;  d  =  p  %  m);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  /  m;  d  =  p  %  m);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    %    m;    d  =  p  /  m;  d  =  p  %  m);	  	non-compiled	[CE]  ';'  expected	5	None	add
814	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  -  m;  d  =  p  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    %    m;    d  =  p  -  m;  d  =  p  %  m;	  	compilable	  [FE]  AssertionError  	5	5	add
815	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  -  m;  d  =  p  %  m;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  -  m;  d  =  p  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    %    m;    d  =  p  -  m;  d  =  p  %  m;	  	compilable	  [FE]  AssertionError  	5	5	add
816	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  /  m;  d  =  p  %  m  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  /  m;  d  =  p  %  m  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    %    m;    d  =  p  /  m;  d  =  p  %  m	  	non-compiled	[CE]  ';'  expected	5	None	add
817	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  p;	  u    =    a    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	83	5	replace
818	[BUG]  [BUGGY]  u  =  a  +  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  p;	  u    =    a    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	83	5	replace
819	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  q  +  d);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  q  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d;  u  =  q  +  d);	  u    =    q    +    d;    u    =    q    +    d);    	non-compiled	[CE]  ';'  expected	37	None	replace
820	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  +  d);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  q  *  d;  u  =  q  +  d);	  u    =    q    +    d;    u    =    q    +    d);    	non-compiled	[CE]  ';'  expected	37	None	replace
821	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  q  +  d);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  q  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  q  +  d);	  u    =    q    +    d;    u    =    q    +    d);    	non-compiled	[CE]  ';'  expected	37	None	replace
822	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  q  +  d);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  d;  u  =  q  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  d;  u  =  q  +  d);	  u    =    q    +    d;    u    =    q    +    d);    	non-compiled	[CE]  ';'  expected	37	None	replace
823	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  r;  u  =  b  +  d;	  u    =    a    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	85	5	replace
824	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  b  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  r;  u  =  b  +  d;	  u    =    a    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	85	5	replace
825	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  a;  u  =  b  +  d;	  u    =    a    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	85	5	replace
826	[BUG]  [BUGGY]  u  =  d  +  a;  u  =  b  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  a;  u  =  b  +  d;	  u    =    a    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	85	5	replace
827	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  d;  u  =  b  +  d;	  u    =    a    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	85	5	replace
828	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  b  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d;  u  =  b  +  d;	  u    =    a    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	85	5	replace
829	[BUG]  [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  >  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  >  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  -  x  &&  p  <  a  &&  b  >  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    <    a    -    x    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
830	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  >=  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  >=  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    <    a    -    x    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	67	5	replace
831	[BUG]  [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  >=  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  >=  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  >=  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    <    a    -    x    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	67	5	replace
832	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  tol1;	  u    =    m    +    tol1;    	compilable	  [FE]  AssertionError  	222	5	replace
833	[BUG]  [BUGGY]  u  =  p  +  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  tol1;	  u    =    m    +    tol1;    	compilable	  [FE]  AssertionError  	222	5	replace
834	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  tol2;	  u    =    m    +    tol1;    	compilable	  [FE]  AssertionError  	222	4	replace
835	[BUG]  [BUGGY]  u  =  m  +  tol2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  tol2;	  u    =    m    +    tol1;    	compilable	  [FE]  AssertionError  	222	4	replace
836	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  tol2  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  tol2  +  m;	  u    =    m    +    tol1;    	compilable	  [FE]  AssertionError  	222	4	replace
837	[BUG]  [BUGGY]  u  =  tol2  +  m;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  tol2  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  tol2  +  m;	  u    =    m    +    tol1;    	compilable	  [FE]  AssertionError  	222	4	replace
838	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  %  m;	          d    =    p    /    m;    d    =    p    %    m;    	compilable	  [FE]  AssertionError  	6	5	replace
839	[BUG]  [BUGGY]  d  =  p  %  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  %  m;	          d    =    p    /    m;    d    =    p    %    m;    	compilable	  [FE]  AssertionError  	6	5	replace
840	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(1.0    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	compilable	  [FE]  AssertionError  	224	5	replace
841	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(1.0    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	compilable	  [FE]  AssertionError  	224	5	replace
842	[BUG]  [BUGGY]  if(r  <  a  ||  p  <  a  ||  p  <  a  ||  x  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  a  ||  p  <  a  ||  p  <  a  ||  x  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a  ||  p  <  a  ||  p  <  a  ||  x  <  =  0.5)  {  d  =  p  /  q;  }	  if(r    <    a    &&    p    <    a    &&    p    <    a    &&    x    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
843	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }	  if(r    <    a    &&    p    <    a    &&    p    <    a    &&    x    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
844	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  b  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }	  if(r    <    a    &&    p    <    a    &&    p    <    a    &&    x    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
845	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  d  +  r;	  d    =    d    +    m;    	compilable	  [FE]  AssertionError  	91	5	replace
846	[BUG]  [BUGGY]  d  =  d  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  +  r;	  d    =    d    +    m;    	compilable	  [FE]  AssertionError  	91	5	replace
847	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  d  +  tol1;	  d    =    d    +    m;    	compilable	  [FE]  AssertionError  	91	5	replace
848	[BUG]  [BUGGY]  d  =  d  +  tol1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  +  tol1;	  d    =    d    +    m;    	compilable	  [FE]  AssertionError  	91	5	replace
849	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  d  +  m  +  1;	  d    =    d    +    m;    	compilable	  [FE]  AssertionError  	91	5	replace
850	[BUG]  [BUGGY]  d  =  d  +  m  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  +  m  +  1;	  d    =    d    +    m;    	compilable	  [FE]  AssertionError  	91	5	replace
851	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)  &&  p  <  q  *  (b  -  x))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)  &&  p  <  q  *  (b  -  x))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	227	5	replace
852	[BUG]  [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)  &&  p  <  q  *  (b  -  x))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)  &&  p  <  q  *  (b  -  x))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)  &&  p  <  q  *  (b  -  x))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	227	5	replace
853	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)  &&  p  <  q  *  (r  -  x))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)  &&  p  <  q  *  (r  -  x))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	227	5	replace
854	[BUG]  [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)  &&  p  <  q  *  (r  -  x))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)  &&  p  <  q  *  (r  -  x))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)  &&  p  <  q  *  (r  -  x))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	227	5	replace
855	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    tol1;    	non-compiled	[CE]  ';'  expected	104	None	replace
856	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    tol1;    	non-compiled	[CE]  ';'  expected	104	None	replace
857	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  |  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  |  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  |	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    tol1;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
858	[BUG]  [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
859	[BUG]  [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
860	[BUG]  [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  u  +  d;  u  =  u  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
861	[BUG]  [BUGGY]  if(m  >  eps)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  eps)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  eps)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
862	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  d;  u  =  a  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    a    *    d;    u  =  a  *  d;	  	compilable	  [FE]  AssertionError  	135	4	add
863	[BUG]  [BUGGY]  u  =  a  *  d;  u  =  a  *  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  d;  u  =  a  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    *    d;    u  =  a  *  d;	  	compilable	  [FE]  AssertionError  	135	4	add
864	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  d;  u  =  p  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    a    *    d;    u  =  p  *  d;	  	compilable	  [FE]  AssertionError  	135	4	add
865	[BUG]  [BUGGY]  u  =  a  *  d;  u  =  p  *  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  d;  u  =  p  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    *    d;    u  =  p  *  d;	  	compilable	  [FE]  AssertionError  	135	4	add
866	[BUG]  [BUGGY]  u  =  a  *  d;  u  =  a  *  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  d;  u  =  a  *  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    *    d;    u  =  a  *  d);	  	non-compiled	[CE]  ';'  expected	135	None	add
867	[BUG]  [BUGGY]  u  =  a  *  d;  u  =  an  *  d;  [CE]  cannot  find  symbol  an  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  d;  u  =  an  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    *    d;    u  =  an  *  d;	  	non-compiled	[CE]  cannot  find  symbol  an	135	None	add
868	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  m  +  1;	  d    =    p    /    m    +    1;    	compilable	  [FE]  AssertionError  	50	5	replace
869	[BUG]  [BUGGY]  d  =  p  *  m  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  m  +  1;	  d    =    p    /    m    +    1;    	compilable	  [FE]  AssertionError  	50	5	replace
870	[BUG]  [BUGGY]  if(isMinim)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(isMinim)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	258	None	replace
871	[BUG]  [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(isMinim)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  reached  end  of  file  while  parsing	258	None	replace
872	[BUG]  [BUGGY]  if(isMinim)  {  if(x  <  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  if(x  <  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  if(x  <  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(isMinim)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	258	None	replace
873	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  u  =  d  +  x;  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    m    +    x;    u  =  d  +  x;  u  =  m  +  x;	  	compilable	  [FE]  AssertionError  	212	4	add
874	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  u  =  d  +  x;  u  =  m  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  u  =  d  +  x;  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    m    +    x;    u  =  d  +  x;  u  =  m  +  x;	  	compilable	  [FE]  AssertionError  	212	4	add
875	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  u  =  d  +  x;  u  =  m  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    m    +    x;    u  =  d  +  x;  u  =  m  +  q;	  	compilable	  [FE]  AssertionError  	212	4	add
876	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  u  =  d  +  x;  u  =  m  +  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  u  =  d  +  x;  u  =  m  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    m    +    x;    u  =  d  +  x;  u  =  m  +  q;	  	compilable	  [FE]  AssertionError  	212	4	add
877	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  U  =  d  +  x;  u  =  m  +  x;  [CE]  cannot  find  symbol  U  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  U  =  d  +  x;  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    m    +    x;    U  =  d  +  x;  u  =  m  +  x;	  	non-compiled	[CE]  cannot  find  symbol  U	212	None	add
878	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  u  =  a  +  x;  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    m    +    x;    u  =  a  +  x;  u  =  m  +  x;	  	compilable	  [FE]  AssertionError  	212	4	add
879	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  u  =  a  +  x;  u  =  m  +  x;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  u  =  a  +  x;  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    m    +    x;    u  =  a  +  x;  u  =  m  +  x;	  	compilable	  [FE]  AssertionError  	212	4	add
880	[BUG]  [BUGGY]  u  =  u  +  1;  u  =  u  +  1);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  1;  u  =  u  +  1);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  u  +  1;  u  =  u  +  1);	  u    =    u    +    d;    u    =    u    +    d);    	non-compiled	[CE]  ';'  expected	107	None	replace
881	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	245	None	replace
882	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	245	None	replace
883	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	245	None	replace
884	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	245	None	replace
885	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  *  d;  u  =  p  +  d;	  u    =    p    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	100	5	replace
886	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  *  d;  u  =  p  +  d;	  u    =    p    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	100	5	replace
887	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  *  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    }    	non-compiled	[CE]  ';'  expected	103	None	replace
888	[BUG]  [BUGGY]  if(x  <  =  m)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  m)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  =  m)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMaximum)    {    d    =    p    /    q;    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
889	[BUG]  [BUGGY]  if(x  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMaximum)    {    d    =    p    /    q;    	non-compiled	[CE]  ';'  expected	147	None	replace
890	[BUG]  [BUGGY]  if(x  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMaximum)    {    d    =    p    /    q;    	non-compiled	[CE]  ';'  expected	147	None	replace
891	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  q  +  r;  u  =  q  +  d;	  u    =    q    +    d;    u    =    k    +    d;    	compilable	  [FE]  AssertionError  	40	5	replace
892	[BUG]  [BUGGY]  u  =  q  +  r;  u  =  q  +  d;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  q  +  r;  u  =  q  +  d;	  u    =    q    +    d;    u    =    k    +    d;    	compilable	  [FE]  AssertionError  	40	5	replace
893	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  k  +  d;  [CE]  cannot  find  symbol  k  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  k  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d;  u  =  k  +  d;	  u    =    q    +    d;    u    =    k    +    d;    	non-compiled	[CE]  cannot  find  symbol  k	40	None	replace
894	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q;  u  =  p  +  d;	  u    =    q    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	39	5	replace
895	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  p  +  d;	  u    =    q    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	39	5	replace
896	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  q  *  d;  u  =  p  +  d;	  u    =    q    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	39	5	replace
897	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  p  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  q  *  d;  u  =  p  +  d;	  u    =    q    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	39	5	replace
898	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        u        +        d;        u    =    a    +    d;    u  =  u  +  d;  u  =  a  +  d;	  	compilable	  [FE]  AssertionError  	108	4	add
899	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  a  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    a    +    d;    u  =  u  +  d;  u  =  a  +  d;	  	compilable	  [FE]  AssertionError  	108	4	add
900	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  U  =  u  +  d;  u  =  a  +  d;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  U  =  u  +  d;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    a    +    d;    U  =  u  +  d;  u  =  a  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	108	None	add
901	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        u        +        d;        u    =    a    +    d;    u  =  u  +  d;  u  =  b  +  d;	  	compilable	  [FE]  AssertionError  	108	4	add
902	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  b  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    a    +    d;    u  =  u  +  d;  u  =  b  +  d;	  	compilable	  [FE]  AssertionError  	108	4	add
903	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  /  q;  d  =  p  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    %    q;    d  =  p  /  q;  d  =  p  %  q;	  	compilable	  [FE]  AssertionError  	113	5	add
904	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  /  q;  d  =  p  %  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  /  q;  d  =  p  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    %    q;    d  =  p  /  q;  d  =  p  %  q;	  	compilable	  [FE]  AssertionError  	113	5	add
905	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  %  q;  d  =  p  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    %    q;    d  =  p  %  q;  d  =  p  %  q;	  	compilable	  [FE]  AssertionError  	113	5	add
906	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  %  q;  d  =  p  %  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  %  q;  d  =  p  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    %    q;    d  =  p  %  q;  d  =  p  %  q;	  	compilable	  [FE]  AssertionError  	113	5	add
907	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  /  q;  d  =  p  %  q  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  /  q;  d  =  p  %  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    %    q;    d  =  p  /  q;  d  =  p  %  q	  	non-compiled	[CE]  ';'  expected	113	None	add
908	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  /  q;  d  =  p  %  q);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  /  q;  d  =  p  %  q);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    %    q;    d  =  p  /  q;  d  =  p  %  q);	  	non-compiled	[CE]  ';'  expected	113	None	add
909	[BUG]  [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(m    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	replace
910	[BUG]  [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    *    d;    u  =  m  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  not  a  statement	45	None	add
911	[BUG]  [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    *    d;    u  =  m  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  not  a  statement	45	None	add
912	[BUG]  [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    *    d;    u  =  m  *  d;  isMinim  -  a  +  b  -  u  +  tol2)  {  if  (x  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p	  	non-compiled	[CE]  not  a  statement	45	None	add
913	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  x;  u  =  d  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  x;	  	compilable	  [FE]  AssertionError  	14	4	add
914	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  x;  u  =  d  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  x;  u  =  d  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  x;	  	compilable	  [FE]  AssertionError  	14	4	add
915	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  U  =  d  +  x;  u  =  d  +  x;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  U  =  d  +  x;  u  =  d  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    d    +    x;    U  =  d  +  x;  u  =  d  +  x;	  	non-compiled	[CE]  cannot  find  symbol  U	14	None	add
916	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  x;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  q;	  	compilable	  [FE]  AssertionError  	14	4	add
917	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  x;  u  =  d  +  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  x;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  q;	  	compilable	  [FE]  AssertionError  	14	4	add
918	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  u  =  a  +  x;  u  =  d  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;	  	compilable	  [FE]  AssertionError  	14	4	add
919	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  u  =  a  +  x;  u  =  d  +  x;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  u  =  a  +  x;  u  =  d  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;	  	compilable	  [FE]  AssertionError  	14	4	add
920	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  u  =  d  +  x;  u  =  p  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    p    +    x;    u  =  d  +  x;  u  =  p  +  x;	  	compilable	  [FE]  AssertionError  	214	4	add
921	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  u  =  d  +  x;  u  =  p  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  u  =  d  +  x;  u  =  p  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    p    +    x;    u  =  d  +  x;  u  =  p  +  x;	  	compilable	  [FE]  AssertionError  	214	4	add
922	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  u  =  d  +  x;  u  =  p  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    p    +    x;    u  =  d  +  x;  u  =  p  +  q;	  	compilable	  [FE]  AssertionError  	214	4	add
923	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  u  =  d  +  x;  u  =  p  +  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  u  =  d  +  x;  u  =  p  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    p    +    x;    u  =  d  +  x;  u  =  p  +  q;	  	compilable	  [FE]  AssertionError  	214	4	add
924	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  u  =  d  +  x;  u  =  p  +  y;  [CE]  cannot  find  symbol  y  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  u  =  d  +  x;  u  =  p  +  y;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    p    +    x;    u  =  d  +  x;  u  =  p  +  y;	  	non-compiled	[CE]  cannot  find  symbol  y	214	None	add
925	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  U  =  d  +  x;  u  =  p  +  x;  [CE]  cannot  find  symbol  U  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  U  =  d  +  x;  u  =  p  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    p    +    x;    U  =  d  +  x;  u  =  p  +  x;	  	non-compiled	[CE]  cannot  find  symbol  U	214	None	add
926	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  u  =  a  +  x;  u  =  p  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    p    +    x;    u  =  a  +  x;  u  =  p  +  x;	  	compilable	  [FE]  AssertionError  	214	4	add
927	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  u  =  a  +  x;  u  =  p  +  x;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  p  +  x;  u  =  a  +  x;  u  =  p  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    p    +    x;    u  =  a  +  x;  u  =  p  +  x;	  	compilable	  [FE]  AssertionError  	214	4	add
928	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  q  /  r;	  d    =    r    /    q;    	compilable	  [FE]  AssertionError  	167	5	replace
929	[BUG]  [BUGGY]  d  =  q  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  q  /  r;	  d    =    r    /    q;    	compilable	  [FE]  AssertionError  	167	5	replace
930	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	264	5	replace
931	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	264	5	replace
932	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	264	5	replace
933	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	264	5	replace
934	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  ==  0)  {  u  =  u  +  d;  u  =  u  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(r  ==  0)  {  u  =  u  +  d;  u  =  u  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	264	5	replace
935	[BUG]  [BUGGY]  if(r  ==  0)  {  u  =  u  +  d;  u  =  u  +  d;  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  ==  0)  {  u  =  u  +  d;  u  =  u  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  ==  0)  {  u  =  u  +  d;  u  =  u  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	264	5	replace
936	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	264	5	replace
937	[BUG]  [BUGGY]  if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	264	5	replace
938	[BUG]  [BUGGY]  if(x  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	199	None	replace
939	[BUG]  [BUGGY]  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  m  +  d;  }  else  {  d  =  tol2;  }  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  m  +  d;  }  else  {  d  =  tol2;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  m  +  d;  }  else  {  d  =  tol2;  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol2)    {    d    =    tol2;    }    	non-compiled	[CE]  cannot  find  symbol  i	77	None	replace
940	[BUG]  [BUGGY]  if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	229	None	replace
941	[BUG]  [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	229	None	replace
942	[BUG]  [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  q  *(a  -  x)&&  p  <  q  *(b  -  x))  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	229	None	replace
943	[BUG]  [BUGGY]  if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  }  else  {  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  }  else  {  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  }  else  {  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	229	None	replace
944	[BUG]  [BUGGY]  d  =  p  *  r;  dev  =  p  *  q;  [CE]  cannot  find  symbol  dev  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r;  dev  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  r;  dev  =  p  *  q;	          d    =    p    *    q;    dev    =    p    *    q;    	non-compiled	[CE]  cannot  find  symbol  dev	194	None	replace
945	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  *  r;	  u    =    m    *    d;    	compilable	  [FE]  AssertionError  	46	4	replace
946	[BUG]  [BUGGY]  u  =  m  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  *  r;	  u    =    m    *    d;    	compilable	  [FE]  AssertionError  	46	4	replace
947	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    r;    d  =  p  /  r;	  	compilable	  [FE]  AssertionError  	27	4	add
948	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    r;    d  =  p  /  r;	  	compilable	  [FE]  AssertionError  	27	4	add
949	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  /  l;  [CE]  cannot  find  symbol  l  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r;  d  =  p  /  l;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    r;    d  =  p  /  l;	  	non-compiled	[CE]  cannot  find  symbol  l	27	None	add
950	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    r;    d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	27	4	add
951	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  /  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    r;    d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	27	4	add
952	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r;  d  =  p  %  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    r;    d  =  p  %  r;	  	compilable	  [FE]  AssertionError  	27	5	add
953	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  %  r;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r;  d  =  p  %  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    r;    d  =  p  %  r;	  	compilable	  [FE]  AssertionError  	27	5	add
954	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  /  r);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r;  d  =  p  /  r);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    r;    d  =  p  /  r);	  	non-compiled	[CE]  ';'  expected	27	None	add
955	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  d;  u  =  q  +  d;	  u    =    q    +    d;    u    =    q    +    d;    	compilable	  [FE]  AssertionError  	36	5	replace
956	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d;  u  =  q  +  d;	  u    =    q    +    d;    u    =    q    +    d;    	compilable	  [FE]  AssertionError  	36	5	replace
957	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  q  *  d;  u  =  q  +  d;	  u    =    q    +    d;    u    =    q    +    d;    	compilable	  [FE]  AssertionError  	36	5	replace
958	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  q  *  d;  u  =  q  +  d;	  u    =    q    +    d;    u    =    q    +    d;    	compilable	  [FE]  AssertionError  	36	5	replace
959	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q;  u  =  q  +  d;	  u    =    q    +    d;    u    =    q    +    d;    	compilable	  [FE]  AssertionError  	36	5	replace
960	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  q  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  q  +  d;	  u    =    q    +    d;    u    =    q    +    d;    	compilable	  [FE]  AssertionError  	36	5	replace
961	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  d;  u  =  q  +  d;	  u    =    q    +    d;    u    =    q    +    d;    	compilable	  [FE]  AssertionError  	36	5	replace
962	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  q  +  d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  d;  u  =  q  +  d;	  u    =    q    +    d;    u    =    q    +    d;    	compilable	  [FE]  AssertionError  	36	5	replace
963	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d  *  q;  u  =  p  +  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    p    +    d    *    q;    u  =  p  +  d  *  q;	  	compilable	  [FE]  AssertionError  	172	4	add
964	[BUG]  [BUGGY]  u  =  p  +  d  *  q;  u  =  p  +  d  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d  *  q;  u  =  p  +  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d    *    q;    u  =  p  +  d  *  q;	  	compilable	  [FE]  AssertionError  	172	4	add
965	[BUG]  [BUGGY]  u  =  p  +  d  *  q;  int  u  =  p  +  d  *  q;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d  *  q;  int  u  =  p  +  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d    *    q;    int  u  =  p  +  d  *  q;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	172	None	add
966	[BUG]  [BUGGY]  u  =  p  +  d  *  q;  u  =  p  +  d  *  q);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d  *  q;  u  =  p  +  d  *  q);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d    *    q;    u  =  p  +  d  *  q);	  	non-compiled	[CE]  ';'  expected	172	None	add
967	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  /  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  /  m;  d  =  p  /  m  +  1;	  	compilable	  [FE]  AssertionError  	235	5	add
968	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  /  m  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  /  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  /  m;  d  =  p  /  m  +  1;	  	compilable	  [FE]  AssertionError  	235	5	add
969	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  %  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  /  m;  d  =  p  %  m  +  1;	  	compilable	  [FE]  AssertionError  	235	5	add
970	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  %  m  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  %  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  /  m;  d  =  p  %  m  +  1;	  	compilable	  [FE]  AssertionError  	235	5	add
971	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m);  d  =  p  /  m  +  1;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m);  d  =  p  /  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  /  m);  d  =  p  /  m  +  1;	  	non-compiled	[CE]  ';'  expected	235	None	add
972	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  %  m;  d  =  p  /  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  %  m;  d  =  p  /  m  +  1;	  	compilable	  [FE]  AssertionError  	235	5	add
973	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  %  m;  d  =  p  /  m  +  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  %  m;  d  =  p  /  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  %  m;  d  =  p  /  m  +  1;	  	compilable	  [FE]  AssertionError  	235	5	add
974	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  /  m  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  /  m;  d  =  p  /  m  +  2;	  	compilable	  [FE]  AssertionError  	235	5	add
975	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  /  m  +  2;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  /  m  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  /  m;  d  =  p  /  m  +  2;	  	compilable	  [FE]  AssertionError  	235	5	add
976	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  1;  d  =  p  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    *    q    +    1;    d  =  p  *  q  +  1;	  timeout    	compilable	  [FE]  AssertionError  	53	5	add
977	[BUG]  [BUGGY]  d  =  p  *  q  +  1;  d  =  p  *  q  +  1;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  1;  d  =  p  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    q    +    1;    d  =  p  *  q  +  1;	  timeout    	compilable	  [FE]  AssertionError  	53	5	add
978	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  1;  d  =  p  *  q  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    *    q    +    1;    d  =  p  *  q  +  2;	  timeout    	compilable	  [FE]  AssertionError  	53	5	add
979	[BUG]  [BUGGY]  d  =  p  *  q  +  1;  d  =  p  *  q  +  2;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  1;  d  =  p  *  q  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    q    +    1;    d  =  p  *  q  +  2;	  timeout    	compilable	  [FE]  AssertionError  	53	5	add
980	[BUG]  [BUGGY]  d  =  p  *  q  +  1;  d  =  p  *  qua  +  1;  [CE]  cannot  find  symbol  qua  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  1;  d  =  p  *  qua  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    q    +    1;    d  =  p  *  qua  +  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  qua	53	None	add
981	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *  q  +  d;	  	compilable	  [FE]  AssertionError  	57	5	add
982	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *  q  +  d;	  	compilable	  [FE]  AssertionError  	57	5	add
983	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  d);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *  q  +  d);	  	non-compiled	[CE]  ';'  expected	57	None	add
984	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  u  =  m  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    m    +    tol1;    u  =  m  +  tol1;	  	compilable	  [FE]  AssertionError  	221	4	add
985	[BUG]  [BUGGY]  u  =  m  +  tol1;  u  =  m  +  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  u  =  m  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    tol1;    u  =  m  +  tol1;	  	compilable	  [FE]  AssertionError  	221	4	add
986	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  u  =  m  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    m    +    tol1;    u  =  m  +  tol2;	  	compilable	  [FE]  AssertionError  	221	4	add
987	[BUG]  [BUGGY]  u  =  m  +  tol1;  u  =  m  +  tol2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  u  =  m  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    tol1;    u  =  m  +  tol2;	  	compilable	  [FE]  AssertionError  	221	4	add
988	[BUG]  [BUGGY]  u  =  m  +  tol1;  u  =  m  +  tol1);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  u  =  m  +  tol1);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    tol1;    u  =  m  +  tol1);	  	non-compiled	[CE]  ';'  expected	221	None	add
989	[BUG]  [BUGGY]  u  =  m  +  tol1;  u  =  m  +  tol1.;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  u  =  m  +  tol1.;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    tol1;    u  =  m  +  tol1.;	  	non-compiled	[CE]  <identifier>  expected	221	None	add
990	[BUG]  [BUGGY]  u  =  m  +  tol1;  U  =  m  +  tol1;  [CE]  cannot  find  symbol  U  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  U  =  m  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    tol1;    U  =  m  +  tol1;	  	non-compiled	[CE]  cannot  find  symbol  U	221	None	add
991	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  u;	  u    =    d    +    u;    	compilable	  [FE]  AssertionError  	11	5	replace
992	[BUG]  [BUGGY]  u  =  d  *  u;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  u;	  u    =    d    +    u;    	compilable	  [FE]  AssertionError  	11	5	replace
993	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  d  =  m  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    m    *    d;    d  =  m  *  d;	  	compilable	  [FE]  AssertionError  	92	5	add
994	[BUG]  [BUGGY]  d  =  m  *  d;  d  =  m  *  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  d  =  m  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    d;    d  =  m  *  d;	  	compilable	  [FE]  AssertionError  	92	5	add
995	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    m    *    d;    d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  	compilable	timeout	92	1	add
996	[BUG]  [BUGGY]  d  =  m  *  d;  d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  timeout  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    d;    d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  	compilable	timeout	92	1	add
997	[BUG]  [BUGGY]  d  =  m  *  d;  d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  p  <  0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  p  <  0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    d;    d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  p  <  0.5  *  q  *  r))  {  d  =  p  /  q;  }	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
998	[BUG]  [BUGGY]  d  =  m  *  d;  d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    d;    d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  	non-compiled	[CE]  ';'  expected	92	None	add
999	[BUG]  [BUGGY]  d  =  m  *  d;  d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    d;    d  =  m  *  d;  }  else  if(isMinim)  {  d  =  tol1  +  d;  if(x  >  a  &&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  reached  end  of  file  while  parsing	92	None	add
1000	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    q    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
1001	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  2.0)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  2.0)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  2.0)  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    q    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
1002	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  2.0)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  2.0)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  2.0)  {  d  =  p  /  q;  }	  if(x    <    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	220	None	replace
1003	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    q    *    r;    d  =  p  /  q  *  r;	  	compilable	  [FE]  AssertionError  	195	6	add
1004	[BUG]  [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  q  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    *    r;    d  =  p  /  q  *  r;	  	compilable	  [FE]  AssertionError  	195	6	add
1005	[BUG]  [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  q  *  l;  [CE]  cannot  find  symbol  l  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  q  *  l;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    *    r;    d  =  p  /  q  *  l;	  	non-compiled	[CE]  cannot  find  symbol  l	195	None	add
1006	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  q  *  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    q    *    r;    d  =  p  /  q  *  t;	  	compilable	  [FE]  AssertionError  	195	4	add
1007	[BUG]  [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  q  *  t;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  q  *  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    *    r;    d  =  p  /  q  *  t;	  	compilable	  [FE]  AssertionError  	195	4	add
1008	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r;  d  =  p  %  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    q    *    r;    d  =  p  %  q  *  r;	  	compilable	  [FE]  AssertionError  	195	5	add
1009	[BUG]  [BUGGY]  d  =  p  /  q  *  r;  d  =  p  %  q  *  r;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r;  d  =  p  %  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    *    r;    d  =  p  %  q  *  r;	  	compilable	  [FE]  AssertionError  	195	5	add
1010	[BUG]  [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  q  *  r);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  q  *  r);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    *    r;    d  =  p  /  q  *  r);	  	non-compiled	[CE]  ';'  expected	195	None	add
1011	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  r  +  d;	  d    =    p    /    q    +    d;    	compilable	  [FE]  AssertionError  	138	5	replace
1012	[BUG]  [BUGGY]  d  =  p  /  r  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  r  +  d;	  d    =    p    /    q    +    d;    	compilable	  [FE]  AssertionError  	138	5	replace
1013	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  *  d;	  d    =    p    /    q    +    d;    	compilable	  [FE]  AssertionError  	138	5	replace
1014	[BUG]  [BUGGY]  d  =  p  /  q  *  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  *  d;	  d    =    p    /    q    +    d;    	compilable	  [FE]  AssertionError  	138	5	replace
1015	[BUG]  [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    t)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	244	None	replace
1016	[BUG]  [BUGGY]  if(m  >  p)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  p)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  p)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    t)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	244	None	replace
1017	[BUG]  [BUGGY]  if(m  >  eps)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  eps)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  eps)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    t)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	244	None	replace
1018	[BUG]  [BUGGY]  if(m  >  eps)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  eps)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  eps)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    t)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	244	None	replace
1019	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  /  q;  d  =  p  /  q  +  d;	  	compilable	  [FE]  AssertionError  	115	5	add
1020	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  /  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  /  q;  d  =  p  /  q  +  d;	  	compilable	  [FE]  AssertionError  	115	5	add
1021	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  %  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  /  q;  d  =  p  %  q  +  d;	  	compilable	  [FE]  AssertionError  	115	4	add
1022	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  %  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  %  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  /  q;  d  =  p  %  q  +  d;	  	compilable	  [FE]  AssertionError  	115	4	add
1023	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  /  q  +  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  /  q;  d  =  p  /  q  +  t;	  	compilable	  [FE]  AssertionError  	115	4	add
1024	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  /  q  +  t;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  /  q  +  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  /  q;  d  =  p  /  q  +  t;	  	compilable	  [FE]  AssertionError  	115	4	add
1025	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  /  q  +  d);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  /  q  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  /  q;  d  =  p  /  q  +  d);	  	non-compiled	[CE]  ';'  expected	115	None	add
1026	[BUG]  [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	174	None	replace
1027	[BUG]  [BUGGY]  if(t  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(t  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(t  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	174	None	replace
1028	[BUG]  [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	174	None	replace
1029	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q;  u  =  b  +  d;	  u    =    q    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	42	5	replace
1030	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  b  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  b  +  d;	  u    =    q    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	42	5	replace
1031	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  q  +  r;  u  =  b  +  d;	  u    =    q    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	42	5	replace
1032	[BUG]  [BUGGY]  u  =  q  +  r;  u  =  b  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  q  +  r;  u  =  b  +  d;	  u    =    q    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	42	5	replace
1033	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  q  +  d;  u  =  q  +  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        q        +        d;        u    =    q    +    d;    u  =  q  +  d;  u  =  q  +  d;	  	compilable	  [FE]  AssertionError  	35	4	add
1034	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  q  +  d;  u  =  q  +  d;  u  =  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  q  +  d;  u  =  q  +  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    q    +    d;    u  =  q  +  d;  u  =  q  +  d;	  	compilable	  [FE]  AssertionError  	35	4	add
1035	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  q  +  d;  U  =  q  +  d;  u  =  q  +  d;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  q  +  d;  U  =  q  +  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    q    +    d;    U  =  q  +  d;  u  =  q  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	35	None	add
1036	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  q  +  d;  u  =  q  +  d;  u  =  q  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  q  +  d;  u  =  q  +  d;  u  =  q  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    q    +    d;    u  =  q  +  d;  u  =  q  +  d);	  	non-compiled	[CE]  ';'  expected	35	None	add
1037	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  q  +  d;  u  =  p  +  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        q        +        d;        u    =    q    +    d;    u  =  p  +  d;  u  =  q  +  d;	  	compilable	  [FE]  AssertionError  	35	4	add
1038	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  q  +  d;  u  =  p  +  d;  u  =  q  +  d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  q  +  d;  u  =  p  +  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    q    +    d;    u  =  p  +  d;  u  =  q  +  d;	  	compilable	  [FE]  AssertionError  	35	4	add
1039	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m;  d  =  p  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    *    m;    d  =  p  *  m;	  	compilable	  [FE]  AssertionError  	47	6	add
1040	[BUG]  [BUGGY]  d  =  p  *  m;  d  =  p  *  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m;  d  =  p  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    m;    d  =  p  *  m;	  	compilable	  [FE]  AssertionError  	47	6	add
1041	[BUG]  [BUGGY]  d  =  p  *  m;  d  =  p  *  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1  +  d;  if  (x  <  =  m)  {  d  =  p  /  m;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m;  d  =  p  *  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1  +  d;  if  (x  <  =  m)  {  d  =  p  /  m;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    m;    d  =  p  *  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1  +  d;  if  (x  <  =  m)  {  d  =  p  /  m;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
1042	[BUG]  [BUGGY]  d  =  p  *  m;  d  =  p  *  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  *  m;  }  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m;  d  =  p  *  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  *  m;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    m;    d  =  p  *  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  p  *  m;  }	  	non-compiled	[CE]  'else'  without  'if'	47	None	add
1043	[BUG]  [BUGGY]  d  =  p  *  m;  d  =  p  *  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1  +  d;  if  (x  <  =  m)  {  d  =  tol2  +  d;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m;  d  =  p  *  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1  +  d;  if  (x  <  =  m)  {  d  =  tol2  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    m;    d  =  p  *  m;  }  else  if(i  >  a  ||  b  -  u)  {  d  =  tol1  +  d;  if  (x  <  =  m)  {  d  =  tol2  +  d;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
1044	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  u  =  tol2  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    u    +    tol2;    u  =  tol2  +  tol2;	  	compilable	  [FE]  AssertionError  	182	4	add
1045	[BUG]  [BUGGY]  u  =  u  +  tol2;  u  =  tol2  +  tol2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  u  =  tol2  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol2;    u  =  tol2  +  tol2;	  	compilable	  [FE]  AssertionError  	182	4	add
1046	[BUG]  [BUGGY]  u  =  u  +  tol2;  u  =  u  +  tol2.;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  u  =  u  +  tol2.;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol2;    u  =  u  +  tol2.;	  	non-compiled	[CE]  <identifier>  expected	182	None	add
1047	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  x;  u  =  a  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  x;  u  =  a  +  r;	  u    =    d    +    x;    u    =    a    +    x;    	compilable	  [FE]  AssertionError  	17	5	replace
1048	[BUG]  [BUGGY]  u  =  d  +  x;  u  =  a  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  x;  u  =  a  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  x;  u  =  a  +  r;	  u    =    d    +    x;    u    =    a    +    x;    	compilable	  [FE]  AssertionError  	17	5	replace
1049	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  a  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q;  u  =  a  +  x;	  u    =    d    +    x;    u    =    a    +    x;    	compilable	  [FE]  AssertionError  	17	5	replace
1050	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  a  +  x;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  a  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  a  +  x;	  u    =    d    +    x;    u    =    a    +    x;    	compilable	  [FE]  AssertionError  	17	5	replace
1051	[BUG]  [BUGGY]  if(r  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	128	None	replace
1052	[BUG]  [BUGGY]  if(r  >  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  >  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a)  {  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	128	None	replace
1053	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  Math.abs(0.5  *  q  *  x))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  Math.abs(0.5  *  q  *  x))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  Math.abs(0.5  *  q  *  x))  {  d  =  p  /  q  +  d;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    x))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1054	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  x))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  x))  {  d  =  p  /  q  +  d;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    x))    {    d    =    p    /    q    +    d;    }    	compilable	  [FE]  AssertionError  	140	5	replace
1055	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  x))  {  d  =  p  /  q  +  d;  }  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  x))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  x))  {  d  =  p  /  q  +  d;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    x))    {    d    =    p    /    q    +    d;    }    	compilable	  [FE]  AssertionError  	140	5	replace
1056	[BUG]  [BUGGY]  if(isMinim)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	non-compiled	[CE]  ';'  expected	102	None	replace
1057	[BUG]  [BUGGY]  if(isMinim)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	non-compiled	[CE]  ';'  expected	102	None	replace
1058	[BUG]  [BUGGY]  if(isMinim)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  p  +  d;  u  =  p  +  d;  }  else  {  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	non-compiled	[CE]  ';'  expected	102	None	replace
1059	[BUG]  [BUGGY]  d  =  m  +  tol1;  dev  =  m  +  tol2;  [CE]  cannot  find  symbol  dev  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol1;  dev  =  m  +  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  +  tol1;  dev  =  m  +  tol2;	          d    =    m    +    d;    dev    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  dev	206	None	replace
1060	[BUG]  [BUGGY]  d  =  m  +  tol2;  dev  =  m  +  tol2;  [CE]  cannot  find  symbol  dev  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol2;  dev  =  m  +  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  +  tol2;  dev  =  m  +  tol2;	          d    =    m    +    d;    dev    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  dev	206	None	replace
1061	[BUG]  [BUGGY]          d    =    p    *    q;    r  =  p  *  q;  dev  =  p  *  q;  r  =  p  *  q;  [CE]  cannot  find  symbol  dev  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    r  =  p  *  q;  dev  =  p  *  q;  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        r    =    p    *    q;    dev  =  p  *  q;  r  =  p  *  q;	  	non-compiled	[CE]  cannot  find  symbol  dev	191	None	add
1062	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol1)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
1063	[BUG]  [BUGGY]  if(m  >  p)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  p)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  p)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol1)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
1064	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  q  +  r;  u  =  p  +  d;	  u    =    q    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	39	5	replace
1065	[BUG]  [BUGGY]  u  =  q  +  r;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  q  +  r;  u  =  p  +  d;	  u    =    q    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	39	5	replace
1066	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  /  tol1;	          d    =    m    /    q;    d    =    m    /    q3;    	compilable	  [FE]  AssertionError  	238	5	replace
1067	[BUG]  [BUGGY]  d  =  m  /  tol1;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  /  tol1;	          d    =    m    /    q;    d    =    m    /    q3;    	compilable	  [FE]  AssertionError  	238	5	replace
1068	[BUG]  [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
1069	[BUG]  [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
1070	[BUG]  [BUGGY]  if(b  >  0.5  *  q  *  r)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(b  >  0.5  *  q  *  r)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(b  >  0.5  *  q  *  r)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
1071	[BUG]  [BUGGY]  u  =  p  +  r;  int  u  =  p  +  r;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  int  u  =  p  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    r;    int  u  =  p  +  r;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	158	None	add
1072	[BUG]  [BUGGY]  u  =  p  +  r;  u  =  p  +  r);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  r);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    r;    u  =  p  +  r);	  	non-compiled	[CE]  ';'  expected	158	None	add
1073	[BUG]  [BUGGY]  u  =  p  +  r;  U  =  p  +  r;  [CE]  cannot  find  symbol  U  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  U  =  p  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    r;    U  =  p  +  r;	  	non-compiled	[CE]  cannot  find  symbol  U	158	None	add
1074	[BUG]  [BUGGY]  u  =  p  +  r;  u  =  p  +  l;  [CE]  cannot  find  symbol  l  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  l;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    r;    u  =  p  +  l;	  	non-compiled	[CE]  cannot  find  symbol  l	158	None	add
1075	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m;  d  =  p  *  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    *    m;    d  =  p  *  m  +  d;	  	compilable	  [FE]  AssertionError  	47	6	add
1076	[BUG]  [BUGGY]  d  =  p  *  m;  d  =  p  *  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m;  d  =  p  *  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    m;    d  =  p  *  m  +  d;	  	compilable	  [FE]  AssertionError  	47	6	add
1077	[BUG]  [BUGGY]  d  =  p  *  m;  d  =  p  *  m);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m;  d  =  p  *  m);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    m;    d  =  p  *  m);	  	non-compiled	[CE]  ';'  expected	47	None	add
1078	[BUG]  [BUGGY]  d  =  p  *  m;  d  =  p  *  m.;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m;  d  =  p  *  m.;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    m;    d  =  p  *  m.;	  	non-compiled	[CE]  <identifier>  expected	47	None	add
1079	[BUG]  [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  d;  d  =  this  +  d;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  d;  d  =  this  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        +        d;        d    =    m    +    d;    d  =  m  +  d;  d  =  this  +  d;	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	73	None	add
1080	[BUG]  [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  d;  d  =  m  +  de;  [CE]  cannot  find  symbol  de  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  d;  d  =  m  +  de;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        +        d;        d    =    m    +    d;    d  =  m  +  d;  d  =  m  +  de;	  	non-compiled	[CE]  cannot  find  symbol  de	73	None	add
1081	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  1;  u  =  m  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  1;  u  =  m  +  1;	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    	compilable	  [FE]  AssertionError  	145	5	replace
1082	[BUG]  [BUGGY]  u  =  m  +  1;  u  =  m  +  1;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  1;  u  =  m  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  1;  u  =  m  +  1;	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    	compilable	  [FE]  AssertionError  	145	5	replace
1083	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  b  +  d;  u  =  a  +  d;  u  =   "b  +  d;  [CE]  unclosed  string  literal  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  b  +  d;  u  =  a  +  d;  u  =   "b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    b    +    d;    u  =  a  +  d;  u  =   "b  +  d;	  	non-compiled	[CE]  unclosed  string  literal	84	None	add
1084	[BUG]  [BUGGY]  if(isMinim)  {  if(u  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  if(u  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  if(u  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(isMinim)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	258	None	replace
1085	[BUG]  [BUGGY]  if(isMinim)  {  if(i  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  if(i  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  if(i  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(isMinim)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	258	None	replace
1086	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  p  *  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    *    x;    u  =  p  *  x;	  	compilable	  [FE]  AssertionError  	148	4	add
1087	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  p  *  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  p  *  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    *    x;    u  =  p  *  x;	  	compilable	  [FE]  AssertionError  	148	4	add
1088	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  >=  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  >=  0.5)  {  d  =  p  /  q;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	267	5	replace
1089	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  >=  0.5)  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  >=  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  >=  0.5)  {  d  =  p  /  q;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	267	5	replace
1090	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim?  p  :  p  /  q;  [CE]  cannot  find  symbol  isMinimum  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim?  p  :  p  /  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    *    d;    u  =  q  *  d;  this.isMinimum  =  isMinim?  p  :  p  /  q;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	25	None	add
1091	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  /  q;  [CE]  cannot  find  symbol  isMinimum  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  /  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    *    d;    u  =  q  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  /  q;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	25	None	add
1092	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  -tol2;  [CE]  cannot  find  symbol  isMinimum  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  -tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    *    d;    u  =  q  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  -tol2;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	25	None	add
1093	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  /  x;  [CE]  cannot  find  symbol  isMinimum  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  /  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    *    d;    u  =  q  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  /  x;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	25	None	add
1094	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  3;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  *  3;	          d    =    p    /    q;    d    =    p    /    q    +    1;    	compilable	  [FE]  AssertionError  	240	5	replace
1095	[BUG]  [BUGGY]  d  =  p  /  q  *  3;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  3;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  *  3;	          d    =    p    /    q;    d    =    p    /    q    +    1;    	compilable	  [FE]  AssertionError  	240	5	replace
1096	[BUG]  [BUGGY]  if(lo  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(lo  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(lo  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(r    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1097	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    q;    u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  ';'  expected	162	None	add
1098	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    q;    u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  ';'  expected	162	None	add
1099	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    q;    u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =	  	non-compiled	[CE]  ';'  expected	162	None	add
1100	[BUG]  [BUGGY]  d  =  p  *  q  +  r;  d  =  p  *  qua  +  r;  [CE]  cannot  find  symbol  qua  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  r;  d  =  p  *  qua  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    *    q    +    r;    d  =  p  *  qua  +  r;	  	non-compiled	[CE]  cannot  find  symbol  qua	178	None	add
1101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  m  +  q;	          d    =    p    /    m;    d    =    p    /    m    +    d;    	compilable	  [FE]  AssertionError  	4	5	replace
1102	[BUG]  [BUGGY]  d  =  p  /  m  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  m  +  q;	          d    =    p    /    m;    d    =    p    /    m    +    d;    	compilable	  [FE]  AssertionError  	4	5	replace
1103	[BUG]  [BUGGY]  if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  not  a  statement	230	None	replace
1104	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  not  a  statement	230	None	replace
1105	[BUG]  [BUGGY]  if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  not  a  statement	230	None	replace
1106	[BUG]  [BUGGY]  if(r  ==  t)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  ==  t)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  ==  t)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(x    >=    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	257	None	replace
1107	[BUG]  [BUGGY]  if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  if(x    >=    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  reached  end  of  file  while  parsing	257	None	replace
1108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  *  d;  u  =  m  +  d;	  u    =    m    +    d;    u    =    m    +    d;    	compilable	  [FE]  AssertionError  	143	4	replace
1109	[BUG]  [BUGGY]  u  =  m  *  d;  u  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  *  d;  u  =  m  +  d;	  u    =    m    +    d;    u    =    m    +    d;    	compilable	  [FE]  AssertionError  	143	4	replace
1110	[BUG]  [BUGGY]  if(r  ==  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  ==  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  ==  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	200	None	replace
1111	[BUG]  [BUGGY]  if(r  >=  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  >=  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >=  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	200	None	replace
1112	[BUG]  [BUGGY]  if(r!=  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r!=  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r!=  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	200	None	replace
1113	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    m))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	218	5	replace
1115	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	218	5	replace
1116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  0.5)  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	218	5	replace
1117	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  0.5)  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  0.5)  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	218	5	replace
1118	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  q  +  2;	          d    =    p    *    q;    d    =    p    *    q;    	compilable	timeout	56	1	replace
1119	[BUG]  [BUGGY]  d  =  p  *  q  +  2;  timeout  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  +  2;	          d    =    p    *    q;    d    =    p    *    q;    	compilable	timeout	56	1	replace
1120	[BUG]  [BUGGY]  d  =  p  *  r;  d  =  p  *  q.tol1;  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r;  d  =  p  *  q.tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  r;  d  =  p  *  q.tol1;	          d    =    p    *    q;    d    =    p    *    q.tol1;    	non-compiled	[CE]  double  cannot  be  dereferenced	61	None	replace
1121	[BUG]  [BUGGY]  u  =  q  +  d;  U  =  q  +  d;  [CE]  cannot  find  symbol  U  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  d;  U  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  q  +  d;  U  =  q  +  d;	  u    =    u    +    d;    U    =    u    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	110	None	replace
1122	[BUG]  [BUGGY]  u  =  m  +  d;  U  =  u  +  d;  [CE]  cannot  find  symbol  U  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  d;  U  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  d;  U  =  u  +  d;	  u    =    u    +    d;    U    =    u    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	110	None	replace
1123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  t;	  d    =    p    /    g;    	compilable	  [FE]  AssertionError  	210	5	replace
1124	[BUG]  [BUGGY]  d  =  p  /  t;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  t;	  d    =    p    /    g;    	compilable	  [FE]  AssertionError  	210	5	replace
1125	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  q  +  d;	  d    =    x    +    d;    	compilable	timeout	233	1	replace
1126	[BUG]  [BUGGY]  d  =  q  +  d;  timeout  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  q  +  d;	  d    =    x    +    d;    	compilable	timeout	233	1	replace
1127	[BUG]  [BUGGY]  if(lo  <  =  m)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(lo  <  =  m)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(lo  <  =  m)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1128	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  is  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  is  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  is	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    tol1;    	non-compiled	[CE]  ';'  expected	104	None	replace
1129	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    tol1;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  tol1;	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    tol1;    	compilable	  [FE]  AssertionError  	104	5	replace
1131	[BUG]  [BUGGY]  d  =  tol1;  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  tol1;	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    tol1;    	compilable	  [FE]  AssertionError  	104	5	replace
1132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  %  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  %  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
1133	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  %  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  %  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  %  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
1134	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
1135	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
1136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
1137	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }	  	compilable	  [FE]  AssertionError  	68	4	add
1138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  /  q  *  r;	          d    =    m    /    q;    d    =    m    +    q;    	compilable	  [FE]  AssertionError  	202	5	replace
1139	[BUG]  [BUGGY]  d  =  m  /  q  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  /  q  *  r;	          d    =    m    /    q;    d    =    m    +    q;    	compilable	  [FE]  AssertionError  	202	5	replace
1140	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	265	None	replace
1141	[BUG]  [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	265	None	replace
1142	[BUG]  [BUGGY]  if(i  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	265	None	replace
1143	[BUG]  [BUGGY]  if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	265	None	replace
1144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    b    /    q;    d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	251	4	add
1145	[BUG]  [BUGGY]  d  =  b  /  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    b    /    q;    d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	251	4	add
1146	[BUG]  [BUGGY]  d  =  p  /  q  +  d;  d  =  p  /  k  +  d;  [CE]  cannot  find  symbol  k  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  d;  d  =  p  /  k  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    d;    d  =  p  /  k  +  d;	  	non-compiled	[CE]  cannot  find  symbol  k	137	None	add
1147	[BUG]  [BUGGY]  d  =  p  /  q  +  d;  d  =  p  /  qua  +  d;  [CE]  cannot  find  symbol  qua  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  d;  d  =  p  /  qua  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    d;    d  =  p  /  qua  +  d;	  	non-compiled	[CE]  cannot  find  symbol  qua	137	None	add
1148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  *  p;	  d    =    p    *    m;    	compilable	  [FE]  AssertionError  	48	5	replace
1149	[BUG]  [BUGGY]  d  =  m  *  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  *  p;	  d    =    p    *    m;    	compilable	  [FE]  AssertionError  	48	5	replace
1150	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  /  q;  d  =  p  *  q  +  d;	  	compilable	  [FE]  AssertionError  	115	4	add
1151	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  *  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  *  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  /  q;  d  =  p  *  q  +  d;	  	compilable	  [FE]  AssertionError  	115	4	add
1152	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  an;  [CE]  cannot  find  symbol  an  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  a;  d  =  p  *  q;  d  =  p  *  q  +  an;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    a;    d  =  p  *  q;  d  =  p  *  q  +  an;	  	non-compiled	[CE]  cannot  find  symbol  an	59	None	add
1153	[BUG]  [BUGGY]  d  =  m  +  tol1;  i  =  m  +  tol2;  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol1;  i  =  m  +  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  +  tol1;  i  =  m  +  tol2;	          d    =    m    +    d;    i    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  i	253	None	replace
1154	[BUG]  [BUGGY]  d  =  m  +  tol2;  i  =  m  +  tol2;  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol2;  i  =  m  +  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  +  tol2;  i  =  m  +  tol2;	          d    =    m    +    d;    i    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  i	253	None	replace
1155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        q        +        d;        u    =    b    +    d;    u  =  q  +  d;  u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	41	4	add
1156	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    b    +    d;    u  =  q  +  d;  u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	41	4	add
1157	[BUG]  [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	243	None	replace
1158	[BUG]  [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	243	None	replace
1159	[BUG]  [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	243	None	replace
1160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  r  =  p  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    +    d;    r  =  p  +  d;	  	compilable	  [FE]  AssertionError  	94	4	add
1161	[BUG]  [BUGGY]  d  =  p  +  d;  r  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  r  =  p  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    +    d;    r  =  p  +  d;	  	compilable	  [FE]  AssertionError  	94	4	add
1162	[BUG]  [BUGGY]  d  =  p  +  d;  d  =  p  +  d);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  d  =  p  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    +    d;    d  =  p  +  d);	  	non-compiled	[CE]  ';'  expected	94	None	add
1163	[BUG]  [BUGGY]  d  =  p  +  d;  dev  =  p  +  d;  [CE]  cannot  find  symbol  dev  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  dev  =  p  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    +    d;    dev  =  p  +  d;	  	non-compiled	[CE]  cannot  find  symbol  dev	94	None	add
1164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  *  m;	          d    =    p    /    q;    d    =    p    /    q    +    m;    	compilable	  [FE]  AssertionError  	118	5	replace
1165	[BUG]  [BUGGY]  d  =  p  /  q  *  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  *  m;	          d    =    p    /    q;    d    =    p    /    q    +    m;    	compilable	  [FE]  AssertionError  	118	5	replace
1166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  d;  u  =  a  +  d;	  u    =    u    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	109	5	replace
1167	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  a  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d;  u  =  a  +  d;	  u    =    u    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	109	5	replace
1168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  b  +  d;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  b  +  d;  u  =  a  +  d;	  u    =    u    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	109	5	replace
1169	[BUG]  [BUGGY]  u  =  b  +  d;  u  =  a  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  b  +  d;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  b  +  d;  u  =  a  +  d;	  u    =    u    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	109	5	replace
1170	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  d;  u  =  a  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  q  +  d;  u  =  a  +  q;	  u    =    u    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	109	5	replace
1171	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  a  +  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  d;  u  =  a  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  q  +  d;  u  =  a  +  q;	  u    =    u    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	109	5	replace
1172	[BUG]  [BUGGY]  d  =  p  *  x;  dev  =  p  *  q;  [CE]  cannot  find  symbol  dev  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  x;  dev  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  x;  dev  =  p  *  q;	          d    =    p    *    q;    dev    =    p    *    q;    	non-compiled	[CE]  cannot  find  symbol  dev	194	None	replace
1173	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  2;  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  q  +  2;  r  =  p  *  q;	          d    =    p    *    q;    r    =    p    *    q;    	compilable	timeout	192	1	replace
1174	[BUG]  [BUGGY]  d  =  p  *  q  +  2;  r  =  p  *  q;  timeout  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  2;  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  +  2;  r  =  p  *  q;	          d    =    p    *    q;    r    =    p    *    q;    	compilable	timeout	192	1	replace
1175	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r;  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  r;  r  =  p  *  q;	          d    =    p    *    q;    r    =    p    *    q;    	compilable	  [FE]  AssertionError  	192	5	replace
1176	[BUG]  [BUGGY]  d  =  p  *  r;  r  =  p  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r;  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  r;  r  =  p  *  q;	          d    =    p    *    q;    r    =    p    *    q;    	compilable	  [FE]  AssertionError  	192	5	replace
1177	[BUG]  [BUGGY]  if(r  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
1178	[BUG]  [BUGGY]  u  =  a  *  d;  U  =  a  *  d;  [CE]  cannot  find  symbol  U  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  d;  U  =  a  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    *    d;    U  =  a  *  d;	  	non-compiled	[CE]  cannot  find  symbol  U	135	None	add
1179	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  -  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  /  m;  d  =  p  -  m;	  	compilable	  [FE]  AssertionError  	1	5	add
1180	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  -  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  -  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  /  m;  d  =  p  -  m;	  	compilable	  [FE]  AssertionError  	1	5	add
1181	[BUG]  [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  u  =  m  +  d;  u  =  tol1.  +  d;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  u  =  m  +  d;  u  =  tol1.  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        u    =    tol1    +    d;    u  =  m  +  d;  u  =  tol1.  +  d;	  	non-compiled	[CE]  <identifier>  expected	185	None	add
1182	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  -tol2;  [CE]  cannot  find  symbol  isMinimum  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  -tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    *    d;    u  =  p  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  -tol2;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	156	None	add
1183	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  *  d;  [CE]  cannot  find  symbol  isMinimum  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    *    d;    u  =  p  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  *  d;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	156	None	add
1184	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  /  q;  [CE]  cannot  find  symbol  isMinimum  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  /  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    *    d;    u  =  p  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  /  q;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	156	None	add
1185	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  -tol1;  [CE]  cannot  find  symbol  isMinimum  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  -tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    *    d;    u  =  p  *  d;  this.isMinimum  =  isMinim?  tol1  :  p  -tol1;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	156	None	add
1186	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  r;  u  =  a  +  d;	  u    =    a    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	83	5	replace
1187	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  a  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  r;  u  =  a  +  d;	  u    =    a    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	83	5	replace
1188	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  1;  u  =  a  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  1;  u  =  a  +  1;	  u    =    a    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	83	5	replace
1189	[BUG]  [BUGGY]  u  =  a  +  1;  u  =  a  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  1;  u  =  a  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  1;  u  =  a  +  1;	  u    =    a    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	83	5	replace
1190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  q;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  q;  u  =  a  +  d;	  u    =    a    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	83	5	replace
1191	[BUG]  [BUGGY]  u  =  a  +  q;  u  =  a  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  q;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  q;  u  =  a  +  d;	  u    =    a    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	83	5	replace
1192	[BUG]  [BUGGY]  d  =  m  *  q;  int  d  =  m  *  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  q;  int  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    q;    int  d  =  m  *  q;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	168	None	add
1193	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  q;  r  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    m    *    q;    r  =  m  *  q;	  	compilable	  [FE]  AssertionError  	168	5	add
1194	[BUG]  [BUGGY]  d  =  m  *  q;  r  =  m  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  q;  r  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    q;    r  =  m  *  q;	  	compilable	  [FE]  AssertionError  	168	5	add
1195	[BUG]  [BUGGY]  if(isMinim)  {  d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  tol1;  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  tol1;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  tol1;  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol2)    {    d    =    tol1;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
1196	[BUG]  [BUGGY]  if(isMinim)  {  d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d;  }  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d;  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol2)    {    d    =    tol1;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
1197	[BUG]  [BUGGY]  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  m  +  tol1;  }  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  m  +  tol1;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  m  +  tol1;  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol2)    {    d    =    tol1;    }    	non-compiled	[CE]  cannot  find  symbol  i	75	None	replace
1198	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  b  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    a    +    r;    u  =  b  +  r;	  	compilable	  [FE]  AssertionError  	133	4	add
1199	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  b  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  b  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    r;    u  =  b  +  r;	  	compilable	  [FE]  AssertionError  	133	4	add
1200	[BUG]  [BUGGY]  u  =  a  +  r;  U  =  a  +  r;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  U  =  a  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    r;    U  =  a  +  r;	  	non-compiled	[CE]  cannot  find  symbol  U	133	None	add
1201	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  a  +  r);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  a  +  r);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    r;    u  =  a  +  r);	  	non-compiled	[CE]  ';'  expected	133	None	add
1202	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	227	None	replace
1203	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	227	None	replace
1204	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	69	5	replace
1205	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	69	5	replace
1206	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  >=  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  >=  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  b  >=  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1207	[BUG]  [BUGGY]  if(m  >  p)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  p)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  p)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    t)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	244	None	replace
1208	[BUG]  [BUGGY]  if(m  >  mid)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  mid)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  mid)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    t)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	244	None	replace
1209	[BUG]  [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    t)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	244	None	replace
1210	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  an;  [CE]  cannot  find  symbol  an  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  a;  d  =  p  /  m;  d  =  p  /  m  +  an;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    a;    d  =  p  /  m;  d  =  p  /  m  +  an;	  	non-compiled	[CE]  cannot  find  symbol  an	8	None	add
1211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(1.0    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	compilable	  [FE]  AssertionError  	224	5	replace
1212	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(1.0    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	compilable	  [FE]  AssertionError  	224	5	replace
1213	[BUG]  [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  k  *  r;  [CE]  cannot  find  symbol  k  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  k  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    *    r;    d  =  p  /  k  *  r;	  	non-compiled	[CE]  cannot  find  symbol  k	195	None	add
1214	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r;  d  =  p  *  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    q    *    r;    d  =  p  *  q  *  r;	  	compilable	  [FE]  AssertionError  	195	5	add
1215	[BUG]  [BUGGY]  d  =  p  /  q  *  r;  d  =  p  *  q  *  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r;  d  =  p  *  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    *    r;    d  =  p  *  q  *  r;	  	compilable	  [FE]  AssertionError  	195	5	add
1216	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  >=  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  >=  0.5)  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	96	5	replace
1217	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  >=  0.5)  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  >=  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  >=  0.5)  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	96	5	replace
1218	[BUG]  [BUGGY]  if(x  >  max)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  max)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  max)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  ';'  expected	263	None	replace
1219	[BUG]  [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  ';'  expected	263	None	replace
1220	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  ';'  expected	263	None	replace
1221	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  ';'  expected	263	None	replace
1222	[BUG]  [BUGGY]  if(p  <  a  &&  p  >  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  >  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  >  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1223	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  qua;  d  =  p  *  q;  [CE]  cannot  find  symbol  qua  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q;  d  =  p  *  qua;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q;    d  =  p  *  qua;  d  =  p  *  q;	  	non-compiled	[CE]  cannot  find  symbol  qua	55	None	add
1224	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  u  =  u  +  d;  u  =  tol1.  +  d;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  u  =  u  +  d;  u  =  tol1.  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    tol1    +    d;    u  =  u  +  d;  u  =  tol1.  +  d;	  	non-compiled	[CE]  <identifier>  expected	197	None	add
1225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  m  +  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    a;    u  =  m  +  a;	  	compilable	  [FE]  AssertionError  	131	4	add
1226	[BUG]  [BUGGY]  u  =  d  +  a;  u  =  m  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  m  +  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    a;    u  =  m  +  a;	  	compilable	  [FE]  AssertionError  	131	4	add
1227	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  q;  u  =  p  +  d;	  u    =    p    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	100	5	replace
1228	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  q;  u  =  p  +  d;	  u    =    p    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	100	5	replace
1229	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  r;  u  =  p  +  d;	  u    =    p    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	100	5	replace
1230	[BUG]  [BUGGY]  u  =  p  +  r;  u  =  p  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  r;  u  =  p  +  d;	  u    =    p    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	100	5	replace
1231	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  1;  u  =  p  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  1;  u  =  p  +  1;	  u    =    p    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	100	5	replace
1232	[BUG]  [BUGGY]  u  =  p  +  1;  u  =  p  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  1;  u  =  p  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  1;  u  =  p  +  1;	  u    =    p    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	100	5	replace
1233	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1234	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1235	[BUG]  [BUGGY]  if(m)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1236	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    *    q;    }    	non-compiled	[CE]  illegal  start  of  expression	268	None	replace
1237	[BUG]  [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    *    q;    }    	non-compiled	[CE]  illegal  start  of  expression	268	None	replace
1238	[BUG]  [BUGGY]  u  =  p  +  d  *  q;  U  =  p  +  d  *  q;  [CE]  cannot  find  symbol  U  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d  *  q;  U  =  p  +  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d    *    q;    U  =  p  +  d  *  q;	  	non-compiled	[CE]  cannot  find  symbol  U	172	None	add
1239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  d  >  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x  <  a  &&  p  <  a  &&  b  <  a  &&  d  >  0.5)  {  d  =  p  /  q;  }	  if(x    <    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	216	5	replace
1240	[BUG]  [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  d  >  0.5)  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  d  >  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a  &&  p  <  a  &&  b  <  a  &&  d  >  0.5)  {  d  =  p  /  q;  }	  if(x    <    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	216	5	replace
1241	[BUG]  [BUGGY]  if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMaximum)    {    d    =    p    /    q;    	non-compiled	[CE]  ';'  expected	147	None	replace
1242	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  q;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  q;  u  =  m  +  d;	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMaximum)    {    d    =    p    /    q;    	compilable	  [FE]  AssertionError  	147	4	replace
1243	[BUG]  [BUGGY]  u  =  m  +  q;  u  =  m  +  d;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  q;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  q;  u  =  m  +  d;	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMaximum)    {    d    =    p    /    q;    	compilable	  [FE]  AssertionError  	147	4	replace
1244	[BUG]  [BUGGY]  if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum  &&  isMinim)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum  &&  isMinim)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum  &&  isMinim)  {  d  =  p  /  q;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMaximum)    {    d    =    p    /    q;    	non-compiled	[CE]  ';'  expected	147	None	replace
1245	[BUG]  [BUGGY]  u  =  m  *  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  *  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMaximum)    {    d    =    p    /    q;    	non-compiled	[CE]  ';'  expected	147	None	replace
1246	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  u  =  tol1  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    m    +    tol1;    u  =  tol1  +  tol2;	  	compilable	  [FE]  AssertionError  	221	4	add
1247	[BUG]  [BUGGY]  u  =  m  +  tol1;  u  =  tol1  +  tol2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  u  =  tol1  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    tol1;    u  =  tol1  +  tol2;	  	compilable	  [FE]  AssertionError  	221	4	add
1248	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  /  q  +  min;  [CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  /  q  +  min;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  /  q;  d  =  p  /  q  +  min;	  	non-compiled	[CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer	117	None	add
1249	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  b  /  q  *  r;	  d    =    b    /    q;    	compilable	  [FE]  AssertionError  	252	5	replace
1250	[BUG]  [BUGGY]  d  =  b  /  q  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  b  /  q  *  r;	  d    =    b    /    q;    	compilable	  [FE]  AssertionError  	252	5	replace
1251	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  q;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  q;  u  =  p  +  d;	  u    =    a    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	88	5	replace
1252	[BUG]  [BUGGY]  u  =  a  +  q;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  q;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  q;  u  =  p  +  d;	  u    =    a    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	88	5	replace
1253	[BUG]  [BUGGY]  d  =  p  /  m  +  1;  d  =  p  3/  m  +  1;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m  +  1;  d  =  p  3/  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    m    +    1;    d  =  p  3/  m  +  1;	  	non-compiled	[CE]  ';'  expected	49	None	add
1254	[BUG]  [BUGGY]  if(isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	177	None	replace
1255	[BUG]  [BUGGY]  if(isMinim  &&  isMinim  &&  p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim  &&  isMinim  &&  p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim  &&  isMinim  &&  p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	177	None	replace
1256	[BUG]  [BUGGY]  if(i  >  hi)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  hi)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  hi)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ';'  expected	177	None	replace
1257	[BUG]  [BUGGY]  if(isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	177	None	replace
1258	[BUG]  [BUGGY]  u  =  a  +  q;  U  =  a  +  d;  [CE]  cannot  find  symbol  U  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  q;  U  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  q;  U  =  a  +  d;	  u    =    a    +    d;    U    =    a    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	89	None	replace
1259	[BUG]  [BUGGY]  if(r  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	130	None	replace
1260	[BUG]  [BUGGY]  if(x  >  a  *  (a  -  p)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  *  (a  -  p)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  *  (a  -  p)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	130	None	replace
1261	[BUG]  [BUGGY]  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	130	None	replace
1262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  x;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  x;  u  =  p  +  d;	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	compilable	  [FE]  AssertionError  	175	5	replace
1263	[BUG]  [BUGGY]  u  =  p  +  x;  u  =  p  +  d;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  x;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  x;  u  =  p  +  d;	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	compilable	  [FE]  AssertionError  	175	5	replace
1264	[BUG]  [BUGGY]  d  =  m  *  d;  int  d  =  m  *  d;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  int  d  =  m  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    d;    int  d  =  m  *  d;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	92	None	add
1265	[BUG]  [BUGGY]  d  =  m  *  d;  d  =  m  *  d);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  d  =  m  *  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    d;    d  =  m  *  d);	  	non-compiled	[CE]  ';'  expected	92	None	add
1266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  d;  u  =  u  +  d;	  u    =    u    +    d;    u    =    u    +    d);    	compilable	  [FE]  AssertionError  	107	5	replace
1267	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  u  +  d;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  d;  u  =  u  +  d;	  u    =    u    +    d;    u    =    u    +    d);    	compilable	  [FE]  AssertionError  	107	5	replace
1268	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  d;  u  =  u  +  d;	  u    =    u    +    d;    u    =    u    +    d);    	compilable	  [FE]  AssertionError  	107	5	replace
1269	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  u  +  d;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d;  u  =  u  +  d;	  u    =    u    +    d;    u    =    u    +    d);    	compilable	  [FE]  AssertionError  	107	5	replace
1270	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  u  +  d);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  u  =  u  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  d;  u  =  u  +  d);	  u    =    u    +    d;    u    =    u    +    d);    	non-compiled	[CE]  ';'  expected	107	None	replace
1271	[BUG]  [BUGGY]  if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	246	None	replace
1272	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	246	None	replace
1273	[BUG]  [BUGGY]  if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	246	None	replace
1274	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  p  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    tol1;    u  =  p  +  tol1;	  	compilable	  [FE]  AssertionError  	152	4	add
1275	[BUG]  [BUGGY]  u  =  d  +  tol1;  u  =  p  +  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  p  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol1;    u  =  p  +  tol1;	  	compilable	  [FE]  AssertionError  	152	4	add
1276	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q;  r  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    r    /    q;    r  =  r  /  q;	  	compilable	  [FE]  AssertionError  	166	5	add
1277	[BUG]  [BUGGY]  d  =  r  /  q;  r  =  r  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q;  r  =  r  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    r    /    q;    r  =  r  /  q;	  	compilable	  [FE]  AssertionError  	166	5	add
1278	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q;  d  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    r    /    q;    d  =  r  *  q;	  	compilable	  [FE]  AssertionError  	166	5	add
1279	[BUG]  [BUGGY]  d  =  r  /  q;  d  =  r  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q;  d  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    r    /    q;    d  =  r  *  q;	  	compilable	  [FE]  AssertionError  	166	5	add
1280	[BUG]  [BUGGY]  u  =  q  +  r;  int  u  =  q  +  r;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  int  u  =  q  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    r;    int  u  =  q  +  r;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	225	None	add
1281	[BUG]  [BUGGY]  u  =  q  +  r;  U  =  q  +  r;  [CE]  cannot  find  symbol  U  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  U  =  q  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    r;    U  =  q  +  r;	  	non-compiled	[CE]  cannot  find  symbol  U	225	None	add
1282	[BUG]  [BUGGY]  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  tol1;  }  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  tol1;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  tol1;  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol1)    {    d    =    tol1;    }    	non-compiled	[CE]  cannot  find  symbol  i	76	None	replace
1283	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  m  =  m  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  tol1;  m  =  m  +  tol2;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	4	replace
1284	[BUG]  [BUGGY]  u  =  m  +  tol1;  m  =  m  +  tol2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  m  =  m  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  tol1;  m  =  m  +  tol2;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	4	replace
1285	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  m  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  *  d;  m  =  m  +  d;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
1286	[BUG]  [BUGGY]  u  =  m  *  d;  m  =  m  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  m  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  *  d;  m  =  m  +  d;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
1287	[BUG]  [BUGGY]  if(r  ==  0)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  ==  0)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  ==  0)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(x    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1288	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  q;  u  =  m  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  q;  u  =  m  +  q;	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    is    	compilable	  [FE]  AssertionError  	144	4	replace
1289	[BUG]  [BUGGY]  u  =  m  +  q;  u  =  m  +  q;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  q;  u  =  m  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  q;  u  =  m  +  q;	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    is    	compilable	  [FE]  AssertionError  	144	4	replace
1290	[BUG]  [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1291	[BUG]  [BUGGY]  d  =  p  /  q  +  1;  d  =  p  3/  q  +  1;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  1;  d  =  p  3/  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    1;    d  =  p  3/  q  +  1;	  	non-compiled	[CE]  ';'  expected	29	None	add
1292	[BUG]  [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	264	None	replace
1293	[BUG]  [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	264	None	replace
1294	[BUG]  [BUGGY]  if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  ==  0.0)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	264	None	replace
1295	[BUG]  [BUGGY]  if(!isMinimum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(!isMinimum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(!isMinimum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    p)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	262	None	replace
1296	[BUG]  [BUGGY]  if(!isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(!isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(!isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    p)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	262	None	replace
1297	[BUG]  [BUGGY]  if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	259	None	replace
1298	[BUG]  [BUGGY]  if(m  >  tol1)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  tol1)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  tol1)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	259	None	replace
1299	[BUG]  [BUGGY]  if(isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	259	None	replace
1300	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  r  /  q  +  1;	  d    =    r    /    q;    	compilable	  [FE]  AssertionError  	167	5	replace
1301	[BUG]  [BUGGY]  d  =  r  /  q  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  r  /  q  +  1;	  d    =    r    /    q;    	compilable	  [FE]  AssertionError  	167	5	replace
1302	[BUG]  [BUGGY]  if(r  <  a  &&  p  >  a  &&  p  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  a  &&  p  >  a  &&  p  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a  &&  p  >  a  &&  p  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }	  if(r    <    a    &&    p    <    a    &&    p    <    a    &&    x    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1303	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  r  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  <  a  &&  r  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  r  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }	  if(r    <    a    &&    p    <    a    &&    p    <    a    &&    x    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1304	[BUG]  [BUGGY]  if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	247	None	replace
1305	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	247	None	replace
1306	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	247	None	replace
1307	[BUG]  [BUGGY]  if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	247	None	replace
1308	[BUG]  [BUGGY]  if(m  >  p)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  p)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  p)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	229	None	replace
1309	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	229	None	replace
1310	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  q;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  q;  u  =  m  +  d;	  u    =    a    +    d;    u    =    m    +    d;    	compilable	  [FE]  AssertionError  	171	4	replace
1311	[BUG]  [BUGGY]  u  =  a  +  q;  u  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  q;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  q;  u  =  m  +  d;	  u    =    a    +    d;    u    =    m    +    d;    	compilable	  [FE]  AssertionError  	171	4	replace
1312	[BUG]  [BUGGY]  d  =  p  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	234	None	replace
1313	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  a  +  d;  u  =  a  +  d;  u  =  an  +  d;  [CE]  cannot  find  symbol  an  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  a  +  d;  u  =  a  +  d;  u  =  an  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    a    +    d;    u  =  a  +  d;  u  =  an  +  d;	  	non-compiled	[CE]  cannot  find  symbol  an	82	None	add
1314	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  /  q;  d  =  m  %  q  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  /  q;  d  =  m  %  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    %    q;    d  =  m  /  q;  d  =  m  %  q	  	non-compiled	[CE]  ';'  expected	124	None	add
1315	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    %    q;    d  =  m  /  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	124	5	add
1316	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  /  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    %    q;    d  =  m  /  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	124	5	add
1317	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    +    d;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
1318	[BUG]  [BUGGY]  if(x  <  =  m)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  m)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  =  m)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	250	None	replace
1319	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    +    d;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
1320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol1;  u  =  tol1  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    u    +    tol1;    u  =  tol1  +  tol1;	  	compilable	  [FE]  AssertionError  	180	4	add
1321	[BUG]  [BUGGY]  u  =  u  +  tol1;  u  =  tol1  +  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol1;  u  =  tol1  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    tol1;    u  =  tol1  +  tol1;	  	compilable	  [FE]  AssertionError  	180	4	add
1322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  p  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q;  u  =  p  +  x;	  u    =    d    +    x;    u    =    p    +    x;    	compilable	  [FE]  AssertionError  	215	4	replace
1323	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  p  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  p  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  p  +  x;	  u    =    d    +    x;    u    =    p    +    x;    	compilable	  [FE]  AssertionError  	215	4	replace
1324	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  p  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  x;  u  =  p  +  x;	  u    =    d    +    x;    u    =    p    +    x;    	compilable	  [FE]  AssertionError  	215	4	replace
1325	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  p  +  x;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  p  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  x;  u  =  p  +  x;	  u    =    d    +    x;    u    =    p    +    x;    	compilable	  [FE]  AssertionError  	215	4	replace
1326	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  *  r  +  d;	  d    =    p    /    q    +    d;    	compilable	  [FE]  AssertionError  	138	5	replace
1327	[BUG]  [BUGGY]  d  =  p  /  q  *  r  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  *  r  +  d;	  d    =    p    /    q    +    d;    	compilable	  [FE]  AssertionError  	138	5	replace
1328	[BUG]  [BUGGY]  d  =  p  *  q  *  l  +  r;  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  *  l  +  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  *  l  +  r;	  d    =    p    *    q    +    r;    	non-compiled	[CE]  cannot  find  symbol  l	179	None	replace
1329	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  m  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    q;    u  =  m  +  q;	  	compilable	  [FE]  AssertionError  	23	4	add
1330	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  m  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  m  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    q;    u  =  m  +  q;	  	compilable	  [FE]  AssertionError  	23	4	add
1331	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  3/  r;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r;  d  =  p  3/  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    r;    d  =  p  3/  r;	  	non-compiled	[CE]  ';'  expected	27	None	add
1332	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  r  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  r  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  r  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    q    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
1333	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1334	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1335	[BUG]  [BUGGY]  if(x  >  max)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  max)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  max)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1336	[BUG]  [BUGGY]  if(x  >  max)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  max)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  max)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1337	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  q  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  *  q  *  d;	  u    =    p    +    d    *    q;    	compilable	  [FE]  AssertionError  	173	5	replace
1338	[BUG]  [BUGGY]  u  =  p  *  q  *  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  q  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  *  q  *  d;	  u    =    p    +    d    *    q;    	compilable	  [FE]  AssertionError  	173	5	replace
1339	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  q  *  d;	  u    =    p    +    d    *    q;    	compilable	  [FE]  AssertionError  	173	5	replace
1340	[BUG]  [BUGGY]  u  =  p  +  q  *  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  q  *  d;	  u    =    p    +    d    *    q;    	compilable	  [FE]  AssertionError  	173	5	replace
1341	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  r;  r  =  m  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    m    /    r;    r  =  m  /  r;	  	compilable	  [FE]  AssertionError  	164	5	add
1342	[BUG]  [BUGGY]  d  =  m  /  r;  r  =  m  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  r;  r  =  m  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    /    r;    r  =  m  /  r;	  	compilable	  [FE]  AssertionError  	164	5	add
1343	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q  *  r;	  u    =    d    +    q;    	compilable	  [FE]  AssertionError  	24	5	replace
1344	[BUG]  [BUGGY]  u  =  d  +  q  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q  *  r;	  u    =    d    +    q;    	compilable	  [FE]  AssertionError  	24	5	replace
1345	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  q;  d  =  m  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  *  q;  d  =  m  %  q;	          d    =    m    /    q;    d    =    m    %    q;    	compilable	  [FE]  AssertionError  	125	5	replace
1346	[BUG]  [BUGGY]  d  =  m  *  q;  d  =  m  %  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  q;  d  =  m  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  *  q;  d  =  m  %  q;	          d    =    m    /    q;    d    =    m    %    q;    	compilable	  [FE]  AssertionError  	125	5	replace
1347	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  /  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  /  x;	  u    =    d    *    x;    	compilable	  [FE]  AssertionError  	149	5	replace
1348	[BUG]  [BUGGY]  u  =  d  /  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  /  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  /  x;	  u    =    d    *    x;    	compilable	  [FE]  AssertionError  	149	5	replace
1349	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol2;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  tol2;  u  =  tol1  +  d;	  u    =    m    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	186	5	replace
1350	[BUG]  [BUGGY]  u  =  m  +  tol2;  u  =  tol1  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol2;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  tol2;  u  =  tol1  +  d;	  u    =    m    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	186	5	replace
1351	[BUG]  [BUGGY]  if(m  >  p)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  p)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  p)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
1352	[BUG]  [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
1353	[BUG]  [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
1354	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
1355	[BUG]  [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	245	None	replace
1356	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	245	None	replace
1357	[BUG]  [BUGGY]  if(d  ==  0.0)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  ==  0.0)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  ==  0.0)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	245	None	replace
1358	[BUG]  [BUGGY]  if(d  ==  0.0)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  ==  0.0)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  ==  0.0)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	245	None	replace
1359	[BUG]  [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  U  =  m  +  d;  m  =  m  +  d;  [CE]  cannot  find  symbol  U  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  U  =  m  +  d;  m  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        m    =    m    +    d;    U  =  m  +  d;  m  =  m  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	187	None	add
1360	[BUG]  [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  int  u  =  m  +  d;  m  =  m  +  d;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  int  u  =  m  +  d;  m  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        m    =    m    +    d;    int  u  =  m  +  d;  m  =  m  +  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	187	None	add
1361	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  b  +  d);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  u  =  b  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  d;  u  =  b  +  d);	  u    =    a    +    d;    u    =    a    +    d);    	non-compiled	[CE]  ';'  expected	86	None	replace
1362	[BUG]  [BUGGY]  u  =  m  *  d;  int  u  =  m  *  d;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  int  u  =  m  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    *    d;    int  u  =  m  *  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	45	None	add
1363	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  r  =  m  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    m    *    d;    r  =  m  *  d;	  	compilable	  [FE]  AssertionError  	45	4	add
1364	[BUG]  [BUGGY]  u  =  m  *  d;  r  =  m  *  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  r  =  m  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    *    d;    r  =  m  *  d;	  	compilable	  [FE]  AssertionError  	45	4	add
1365	[BUG]  [BUGGY]  d  =  g  /  g;  [CE]  cannot  find  symbol  g  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  g  /  g;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  g  /  g;	  d    =    m    /    r;    	non-compiled	[CE]  cannot  find  symbol  g	165	None	replace
1366	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol2;  u  =  m  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    tol2;    u  =  m  +  tol2;	  	compilable	  [FE]  AssertionError  	154	4	add
1367	[BUG]  [BUGGY]  u  =  d  +  tol2;  u  =  m  +  tol2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol2;  u  =  m  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol2;    u  =  m  +  tol2;	  	compilable	  [FE]  AssertionError  	154	4	add
1368	[BUG]  [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(m    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
1369	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  x;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  x;  u  =  b  +  d;	  u    =    a    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	85	5	replace
1370	[BUG]  [BUGGY]  u  =  a  +  x;  u  =  b  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  x;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  x;  u  =  b  +  d;	  u    =    a    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	85	5	replace
1371	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  q;  u  =  b  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  q;  u  =  b  +  q;	  u    =    a    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	85	5	replace
1372	[BUG]  [BUGGY]  u  =  a  +  q;  u  =  b  +  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  q;  u  =  b  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  q;  u  =  b  +  q;	  u    =    a    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	85	5	replace
1373	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  b  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q;  u  =  b  +  q;	  u    =    q    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	42	5	replace
1374	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  b  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  b  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  b  +  q;	  u    =    q    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	42	5	replace
1375	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  b  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  d;  u  =  b  +  q;	  u    =    q    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	42	5	replace
1376	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  b  +  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d;  u  =  b  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d;  u  =  b  +  q;	  u    =    q    +    d;    u    =    b    +    d;    	compilable	  [FE]  AssertionError  	42	5	replace
1377	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  m  +  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    *    q;    d  =  m  +  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	126	5	add
1378	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  m  +  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  m  +  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    *    q;    d  =  m  +  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	126	5	add
1379	[BUG]  [BUGGY]  u  =  d  +  u;  U  =  d  +  u;  [CE]  cannot  find  symbol  U  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  U  =  d  +  u;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    u;    U  =  d  +  u;	  	non-compiled	[CE]  cannot  find  symbol  U	10	None	add
1380	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  d  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  *  d;  d  =  m  +  d;	          d    =    m    +    d;    d    =    m    +    d);    	compilable	  [FE]  AssertionError  	203	5	replace
1381	[BUG]  [BUGGY]  d  =  m  *  d;  d  =  m  +  d;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  d;  d  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  *  d;  d  =  m  +  d;	          d    =    m    +    d;    d    =    m    +    d);    	compilable	  [FE]  AssertionError  	203	5	replace
1382	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol1;  d  =  m  +  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  +  tol1;  d  =  m  +  tol2;	          d    =    m    +    d;    d    =    m    +    d);    	compilable	  [FE]  AssertionError  	203	5	replace
1383	[BUG]  [BUGGY]  d  =  m  +  tol1;  d  =  m  +  tol2;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol1;  d  =  m  +  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  +  tol1;  d  =  m  +  tol2;	          d    =    m    +    d;    d    =    m    +    d);    	compilable	  [FE]  AssertionError  	203	5	replace
1384	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    /    q;    d  =  m  /  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	121	5	add
1385	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    /    q;    d  =  m  /  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	121	5	add
1386	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  /  m  +  del;  [CE]  cannot  find  symbol  del  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  /  m  +  del;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  /  m;  d  =  p  /  m  +  del;	  	non-compiled	[CE]  cannot  find  symbol  del	3	None	add
1387	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  /  m  +  d  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  /  m  +  d  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  /  m;  d  =  p  /  m  +  d	  	non-compiled	[CE]  ';'  expected	3	None	add
1388	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  r  *  p;	  d    =    p    *    r;    	compilable	  [FE]  AssertionError  	52	5	replace
1389	[BUG]  [BUGGY]  d  =  r  *  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  *  p;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  r  *  p;	  d    =    p    *    r;    	compilable	  [FE]  AssertionError  	52	5	replace
1390	[BUG]  [BUGGY]  if(p  <  a  &&  p  >  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  >  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  >  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    q    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1391	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  q  >  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  <  a  &&  p  <  a  &&  b  <  a  &&  q  >  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    q    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	98	5	replace
1392	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  q  >  0.5)  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  q  >  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  b  <  a  &&  q  >  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    q    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	98	5	replace
1393	[BUG]  [BUGGY]  if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    else    {    d    =    tol2;    }    	non-compiled	[CE]  ';'  expected	261	None	replace
1394	[BUG]  [BUGGY]  if(isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    else    {    d    =    tol2;    }    	non-compiled	[CE]  ';'  expected	261	None	replace
1395	[BUG]  [BUGGY]  if(x  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  max)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    else    {    d    =    tol2;    }    	non-compiled	[CE]  ';'  expected	261	None	replace
1396	[BUG]  [BUGGY]  if(!isMinimum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(!isMinimum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(!isMinimum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    else    {    d    =    tol2;    }    	non-compiled	[CE]  ';'  expected	261	None	replace
1397	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol2;  d  =  m  +  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  +  tol2;  d  =  m  +  tol2;	          d    =    m    +    d;    d    =    m    +    d;    	compilable	  [FE]  AssertionError  	74	5	replace
1398	[BUG]  [BUGGY]  d  =  m  +  tol2;  d  =  m  +  tol2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  +  tol2;  d  =  m  +  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  +  tol2;  d  =  m  +  tol2;	          d    =    m    +    d;    d    =    m    +    d;    	compilable	  [FE]  AssertionError  	74	5	replace
1399	[BUG]  [BUGGY]  u  =  a  +  d;  U  =  m  +  d;  [CE]  cannot  find  symbol  U  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  U  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  d;  U  =  m  +  d;	  u    =    m    +    d;    U    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	190	None	replace
1400	[BUG]  [BUGGY]  u  =  m  +  q;  U  =  m  +  d;  [CE]  cannot  find  symbol  U  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  q;  U  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  q;  U  =  m  +  d;	  u    =    m    +    d;    U    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	190	None	replace
1401	[BUG]  [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  >  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  >  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a  &&  p  <  a  &&  b  >  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }	  if(x    <    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	220	None	replace
1402	[BUG]  [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }	  if(x    <    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	220	None	replace
1403	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  m  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    r;    u  =  m  +  r;	  	compilable	  [FE]  AssertionError  	150	4	add
1404	[BUG]  [BUGGY]  u  =  d  +  r;  u  =  m  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  m  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    r;    u  =  m  +  r;	  	compilable	  [FE]  AssertionError  	150	4	add
1405	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  1;  u  =  r  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  1;  u  =  r  +  1;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	5	replace
1406	[BUG]  [BUGGY]  u  =  d  +  1;  u  =  r  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  1;  u  =  r  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  1;  u  =  r  +  1;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	5	replace
1407	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  tol1;  u  =  r  +  x;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	6	replace
1408	[BUG]  [BUGGY]  u  =  d  +  tol1;  u  =  r  +  x;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  tol1;  u  =  r  +  x;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	6	replace
1409	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  x;  u  =  r  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  x;  u  =  r  +  q;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	5	replace
1410	[BUG]  [BUGGY]  u  =  d  +  x;  u  =  r  +  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  x;  u  =  r  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  x;  u  =  r  +  q;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	5	replace
1411	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  u  +  1;	  u    =    u    +    tol2;    	compilable	  [FE]  AssertionError  	183	5	replace
1412	[BUG]  [BUGGY]  u  =  u  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  u  +  1;	  u    =    u    +    tol2;    	compilable	  [FE]  AssertionError  	183	5	replace
1413	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  u  +  q;	  u    =    u    +    tol2;    	compilable	  [FE]  AssertionError  	183	5	replace
1414	[BUG]  [BUGGY]  u  =  u  +  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  u  +  q;	  u    =    u    +    tol2;    	compilable	  [FE]  AssertionError  	183	5	replace
1415	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  q  /  m);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    q    /    m;    d  =  q  /  m);	  	non-compiled	[CE]  ';'  expected	208	None	add
1416	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  q  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    q    /    m;    d  =  q  %  m;	  	compilable	  [FE]  AssertionError  	208	5	add
1417	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  %  m;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  q  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    q    /    m;    d  =  q  %  m;	  	compilable	  [FE]  AssertionError  	208	5	add
1418	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    q    /    m;    d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	208	5	add
1419	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  p  /  m;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    q    /    m;    d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	208	5	add
1420	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *  q  +  t;	  	compilable	  [FE]  AssertionError  	57	5	add
1421	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  t;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *  q  +  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *  q  +  t;	  	compilable	  [FE]  AssertionError  	57	5	add
1422	[BUG]  [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(d    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	256	None	replace
1423	[BUG]  [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(d    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	256	None	replace
1424	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  d  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q;  u  =  d  +  r;	  u    =    d    +    x;    u    =    d    +    q;    	compilable	  [FE]  AssertionError  	20	5	replace
1425	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  d  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  d  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  d  +  r;	  u    =    d    +    x;    u    =    d    +    q;    	compilable	  [FE]  AssertionError  	20	5	replace
1426	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  r;  u  =  d  +  q;	  u    =    d    +    x;    u    =    d    +    q;    	compilable	  [FE]  AssertionError  	20	5	replace
1427	[BUG]  [BUGGY]  u  =  d  +  r;  u  =  d  +  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  r;  u  =  d  +  q;	  u    =    d    +    x;    u    =    d    +    q;    	compilable	  [FE]  AssertionError  	20	5	replace
1428	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  x  +  d;  d  =  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    x    +    d;    d  =  q  +  d;	  	compilable	  [FE]  AssertionError  	232	4	add
1429	[BUG]  [BUGGY]  d  =  x  +  d;  d  =  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  x  +  d;  d  =  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    x    +    d;    d  =  q  +  d;	  	compilable	  [FE]  AssertionError  	232	4	add
1430	[BUG]  [BUGGY]  if(isMinim)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	non-compiled	[CE]  ';'  expected	101	None	replace
1431	[BUG]  [BUGGY]  if(r  ==  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  ==  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  ==  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	174	None	replace
1432	[BUG]  [BUGGY]  if(r  >=  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  >=  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >=  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	174	None	replace
1433	[BUG]  [BUGGY]  if(r!=  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r!=  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r!=  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	174	None	replace
1434	[BUG]  [BUGGY]  if(r  ==  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  ==  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  ==  ';')  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	174	None	replace
1435	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  an  +  d;  [CE]  cannot  find  symbol  an  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  an  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    a    +    d;    u  =  u  +  d;  u  =  an  +  d;	  	non-compiled	[CE]  cannot  find  symbol  an	108	None	add
1436	[BUG]  [BUGGY]  if(p  <  a  &&  p  >  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  &&  p  >  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  >  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1437	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  x;  u  =  d  +  x;	  u    =    d    +    x;    u    =    d    +    x;    	compilable	  [FE]  AssertionError  	15	4	replace
1438	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  d  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  x;  u  =  d  +  x;	  u    =    d    +    x;    u    =    d    +    x;    	compilable	  [FE]  AssertionError  	15	4	replace
1439	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  d  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  tol1;  u  =  d  +  x;	  u    =    d    +    x;    u    =    d    +    x;    	compilable	  [FE]  AssertionError  	15	4	replace
1440	[BUG]  [BUGGY]  u  =  d  +  tol1;  u  =  d  +  x;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  d  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  tol1;  u  =  d  +  x;	  u    =    d    +    x;    u    =    d    +    x;    	compilable	  [FE]  AssertionError  	15	4	replace
1441	[BUG]  [BUGGY]  if(!isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(!isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(!isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	260	None	replace
1442	[BUG]  [BUGGY]  d  =  p  /  g  +  1;  [CE]  cannot  find  symbol  g  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  g  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  g  +  1;	  d    =    p    /    m    +    1;    	non-compiled	[CE]  cannot  find  symbol  g	50	None	replace
1443	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  b;	          d    =    p    *    q;    d    =    p    *    qua;    	compilable	  [FE]  AssertionError  	193	5	replace
1444	[BUG]  [BUGGY]  d  =  p  *  b;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  b;	          d    =    p    *    q;    d    =    p    *    qua;    	compilable	  [FE]  AssertionError  	193	5	replace
1445	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  p;  u  =  m  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    p;    u  =  m  +  p;	  	compilable	  [FE]  AssertionError  	160	4	add
1446	[BUG]  [BUGGY]  u  =  d  +  p;  u  =  m  +  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  p;  u  =  m  +  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    p;    u  =  m  +  p;	  	compilable	  [FE]  AssertionError  	160	4	add
1447	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  /  q;  d  =  p  %  qL;  [CE]  cannot  find  symbol  qL  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  /  q;  d  =  p  %  qL;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    %    q;    d  =  p  /  q;  d  =  p  %  qL;	  	non-compiled	[CE]  cannot  find  symbol  qL	113	None	add
1448	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
1449	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q  +  d;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
1450	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  /  q;  d  =  p  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    1;    d  =  p  /  q;  d  =  p  *  q  +  1;	  	compilable	  [FE]  AssertionError  	239	5	add
1451	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  /  q;  d  =  p  *  q  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  1;  d  =  p  /  q;  d  =  p  *  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    1;    d  =  p  /  q;  d  =  p  *  q  +  1;	  	compilable	  [FE]  AssertionError  	239	5	add
1452	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  d  +  q;	  d    =    d    +    m;    	compilable	timeout	91	1	replace
1453	[BUG]  [BUGGY]  d  =  d  +  q;  timeout  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  +  q;	  d    =    d    +    m;    	compilable	timeout	91	1	replace
1454	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  tol1;  u  =  m  +  x;	  u    =    d    +    x;    u    =    m    +    x;    	compilable	  [FE]  AssertionError  	213	5	replace
1455	[BUG]  [BUGGY]  u  =  d  +  tol1;  u  =  m  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  tol1;  u  =  m  +  x;	  u    =    d    +    x;    u    =    m    +    x;    	compilable	  [FE]  AssertionError  	213	5	replace
1456	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q;  u  =  m  +  x;	  u    =    d    +    x;    u    =    m    +    x;    	compilable	  [FE]  AssertionError  	213	5	replace
1457	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  m  +  x;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  m  +  x;	  u    =    d    +    x;    u    =    m    +    x;    	compilable	  [FE]  AssertionError  	213	5	replace
1458	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  q;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    }    	non-compiled	[CE]  ';'  expected	103	None	replace
1459	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  r  *  q;	  d    =    p    /    q    *    r;    	compilable	  [FE]  AssertionError  	196	5	replace
1460	[BUG]  [BUGGY]  d  =  p  /  r  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  r  *  q;	  d    =    p    /    q    *    r;    	compilable	  [FE]  AssertionError  	196	5	replace
1461	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  *  t;	  d    =    p    /    q    *    r;    	compilable	  [FE]  AssertionError  	196	5	replace
1462	[BUG]  [BUGGY]  d  =  p  /  q  *  t;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  t;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  *  t;	  d    =    p    /    q    *    r;    	compilable	  [FE]  AssertionError  	196	5	replace
1463	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  d;  u  =  q  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  q  +  d;  u  =  q  +  r;	  u    =    q    +    d;    u    =    q    +    d;    	compilable	  [FE]  AssertionError  	36	5	replace
1464	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  q  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  d;  u  =  q  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  q  +  d;  u  =  q  +  r;	  u    =    q    +    d;    u    =    q    +    d;    	compilable	  [FE]  AssertionError  	36	5	replace
1465	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  an;  [CE]  cannot  find  symbol  an  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  an;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    a;    d  =  p  /  q;  d  =  p  /  q  +  an;	  	non-compiled	[CE]  cannot  find  symbol  an	119	None	add
1466	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  [CE]  unexpected  type  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  a;  d  =  p  /  q;  d  =  p  /  q  +  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    a;    d  =  p  /  q;  d  =  p  /  q  +	  	non-compiled	[CE]  unexpected  type	119	None	add
1467	[BUG]  [BUGGY]  if(p  >  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    <    a    -    x    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1468	[BUG]  [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  >=  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  >=  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  -  x  &&  p  <  a  &&  b  >=  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    <    a    -    x    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1469	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  d  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q;  u  =  d  +  x;	  u    =    d    +    x;    u    =    d    +    x);    	compilable	  [FE]  AssertionError  	18	4	replace
1470	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  d  +  x;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  d  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  d  +  x;	  u    =    d    +    x;    u    =    d    +    x);    	compilable	  [FE]  AssertionError  	18	4	replace
1471	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  d;  u  =  tol1  +  d;	  u    =    u    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	198	5	replace
1472	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  tol1  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  d;  u  =  tol1  +  d;	  u    =    u    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	198	5	replace
1473	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  d;  u  =  m  +  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  d;  u  =  m  +  d  *  q;	  u    =    m    +    d;    u    =    m    +    d);    	compilable	  [FE]  AssertionError  	189	4	replace
1474	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  m  +  d  *  q;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  d;  u  =  m  +  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  d;  u  =  m  +  d  *  q;	  u    =    m    +    d;    u    =    m    +    d);    	compilable	  [FE]  AssertionError  	189	4	replace
1475	[BUG]  [BUGGY]  u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    r    +    d;    u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  q  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  ';'  expected	12	None	add
1476	[BUG]  [BUGGY]  u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    r    +    d;    u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  ';'  expected	12	None	add
1477	[BUG]  [BUGGY]  u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  d;  u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    r    +    d;    u  =  r  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  ')'  expected	12	None	add
1478	[BUG]  [BUGGY]  if(r  >  a  *  (a  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  >  a  *  (a  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a  *  (a  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    *    (a    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	71	None	replace
1479	[BUG]  [BUGGY]  if(x  >  a  *  (a  -  p)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  *  (a  -  p)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  *  (a  -  p)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    *    (a    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	71	None	replace
1480	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	267	None	replace
1481	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	69	5	replace
1482	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	69	5	replace
1483	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  p  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    /    q;    d  =  p  /  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	121	5	add
1484	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  p  /  q;  d  =  m  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  /  q;  d  =  p  /  q;  d  =  m  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    /    q;    d  =  p  /  q;  d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	121	5	add
1485	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5  *  r)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5  *  r)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5  *  r)  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1486	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  r  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  r  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  r  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1487	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  p  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q;  u  =  p  +  r;	  u    =    d    +    x;    u    =    p    +    x;    	compilable	  [FE]  AssertionError  	215	5	replace
1488	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  p  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  p  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  p  +  r;	  u    =    d    +    x;    u    =    p    +    x;    	compilable	  [FE]  AssertionError  	215	5	replace
1489	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  p  +  d;  int  u  =  q  +  d;  u  =  p  +  d;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  p  +  d;  int  u  =  q  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    p    +    d;    int  u  =  q  +  d;  u  =  p  +  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	38	None	add
1490	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol1)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
1491	[BUG]  [BUGGY]  if(d  >  0.5  *  q  *  r)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  0.5  *  q  *  r)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  0.5  *  q  *  r)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol1)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
1492	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol1)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
1493	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;  u  =  tol2  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    a    +    x;    u  =  d  +  x;  u  =  tol2  +  x;	  	compilable	  [FE]  AssertionError  	16	4	add
1494	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;  u  =  tol2  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;  u  =  tol2  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    a    +    x;    u  =  d  +  x;  u  =  tol2  +  x;	  	compilable	  [FE]  AssertionError  	16	4	add
1495	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;  u  =  b  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        d        +        x;        u    =    a    +    x;    u  =  d  +  x;  u  =  b  +  x;	  	compilable	  [FE]  AssertionError  	16	4	add
1496	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;  u  =  b  +  x;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  a  +  x;  u  =  d  +  x;  u  =  b  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    a    +    x;    u  =  d  +  x;  u  =  b  +  x;	  	compilable	  [FE]  AssertionError  	16	4	add
1497	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  -tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  -tol1;	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	compilable	  [FE]  AssertionError  	102	5	replace
1498	[BUG]  [BUGGY]  d  =  -tol1;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  -tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  -tol1;	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    	compilable	  [FE]  AssertionError  	102	5	replace
1499	[BUG]  [BUGGY]  u  =  m  +  d;  isMinim  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  d;  isMinim  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  d;  isMinim  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1500	[BUG]  [BUGGY]  u  =  m  +  d;  isMinim  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  d;  isMinim  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  d;  isMinim  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1501	[BUG]  [BUGGY]  u  =  m  +  d;  isMinim  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  d;  isMinim  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  d;  isMinim  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1502	[BUG]  [BUGGY]          d    =    p    *    q;    r  =  p  *  q;  d  =  p  *  qua;  r  =  p  *  q;  [CE]  cannot  find  symbol  qua  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    r  =  p  *  q;  d  =  p  *  qua;  r  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        r    =    p    *    q;    d  =  p  *  qua;  r  =  p  *  q;	  	non-compiled	[CE]  cannot  find  symbol  qua	191	None	add
1503	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  /  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  /  q;	  u    =    p    +    q;    	compilable	  [FE]  AssertionError  	163	5	replace
1504	[BUG]  [BUGGY]  u  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  /  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  /  q;	  u    =    p    +    q;    	compilable	  [FE]  AssertionError  	163	5	replace
1505	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *   "q  +  d;  [CE]  unclosed  string  literal  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  d;  d  =  p  *  q;  d  =  p  *   "q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    d;    d  =  p  *  q;  d  =  p  *   "q  +  d;	  	non-compiled	[CE]  unclosed  string  literal	57	None	add
1506	[BUG]  [BUGGY]  if(d  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
1507	[BUG]  [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1508	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  m  =  m  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	m  =  m  *  d;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
1509	[BUG]  [BUGGY]  m  =  m  *  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  m  =  m  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	m  =  m  *  d;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
1510	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  m  =  m  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	m  =  m  +  tol1;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
1511	[BUG]  [BUGGY]  m  =  m  +  tol1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  m  =  m  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	m  =  m  +  tol1;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
1512	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  m  =  m  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	m  =  m  +  tol2;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
1513	[BUG]  [BUGGY]  m  =  m  +  tol2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  m  =  m  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	m  =  m  +  tol2;	  u    =    m    +    d;    m    =    m    +    d;    	compilable	  [FE]  AssertionError  	188	5	replace
1514	[BUG]  [BUGGY]  if(p  <  min  &&  p  <  min  &&  b  <  min  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  min  &&  p  <  min  &&  b  <  min  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  min  &&  p  <  min  &&  b  <  min  &&  q  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    q    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1515	[BUG]  [BUGGY]  if(p  <  min  &&  p  <  =  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  min  &&  p  <  =  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  min  &&  p  <  =  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    q    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1516	[BUG]  [BUGGY]  if(p  <  min  &&  p  <  max  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  min  &&  p  <  max  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  min  &&  p  <  max  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    q    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1517	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  tol1;	  u    =    m    +    tol1;    	compilable	  [FE]  AssertionError  	222	5	replace
1518	[BUG]  [BUGGY]  u  =  a  +  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  tol1;	  u    =    m    +    tol1;    	compilable	  [FE]  AssertionError  	222	5	replace
1519	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  l))  {  d  =  p  /  q;  }  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  l))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  l))  {  d  =  p  /  q;  }	  	non-compiled	[CE]  cannot  find  symbol  l	68	None	add
1520	[BUG]  [BUGGY]  if(x  <  =  m)  {  u  =  p  +  d;  u  =  p  +  d;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  m)  {  u  =  p  +  d;  u  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  =  m)  {  u  =  p  +  d;  u  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	250	None	replace
1521	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  d  =  p  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    d    +    m;    d  =  p  +  m;	  	compilable	  [FE]  AssertionError  	90	5	add
1522	[BUG]  [BUGGY]  d  =  d  +  m;  d  =  p  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  d  =  p  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    d    +    m;    d  =  p  +  m;	  	compilable	  [FE]  AssertionError  	90	5	add
1523	[BUG]  [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  =  GOLDEN_SECTION)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	263	None	replace
1524	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  ';'  expected	263	None	replace
1525	[BUG]  [BUGGY]  if(isMinim)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1    +    d;    }    	non-compiled	[CE]  ';'  expected	263	None	replace
1526	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  b;	  d    =    p    /    g;    	compilable	  [FE]  AssertionError  	210	5	replace
1527	[BUG]  [BUGGY]  d  =  p  /  b;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  b;	  d    =    p    /    g;    	compilable	  [FE]  AssertionError  	210	5	replace
1528	[BUG]  [BUGGY]  d  =  d  *  q  *(a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  *  q  *(a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  *  q  *(a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	130	None	replace
1529	[BUG]  [BUGGY]  u  =  d  +  tol2;  u  =  d  +  tol2.;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol2;  u  =  d  +  tol2.;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    tol2;    u  =  d  +  tol2.;	  	non-compiled	[CE]  <identifier>  expected	154	None	add
1530	[BUG]  [BUGGY]  u  =  a  *  d;  u  =  a  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  d;  u  =  a  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    *    d;    u  =  a  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	135	None	add
1531	[BUG]  [BUGGY]  u  =  a  *  d;  u  =  a  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  d;  u  =  a  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    *    d;    u  =  a  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  ';'  expected	135	None	add
1532	[BUG]  [BUGGY]  u  =  a  *  d;  u  =  a  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  *  d;  u  =  a  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    *    d;    u  =  a  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	135	None	add
1533	[BUG]  [BUGGY]  u  =  d  +  a;  int  u  =  d  +  a;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  int  u  =  d  +  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    a;    int  u  =  d  +  a;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	131	None	add
1534	[BUG]  [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	128	None	replace
1535	[BUG]  [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	128	None	replace
1536	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  w;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  w;	          d    =    p    *    q;    d    =    p    *    qua;    	compilable	  [FE]  AssertionError  	193	5	replace
1537	[BUG]  [BUGGY]  d  =  p  *  w;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  w;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  w;	          d    =    p    *    q;    d    =    p    *    qua;    	compilable	  [FE]  AssertionError  	193	5	replace
1538	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  *  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  /  m;  d  =  p  *  m  +  1;	  	compilable	  [FE]  AssertionError  	235	5	add
1539	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  *  m  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  *  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  /  m;  d  =  p  *  m  +  1;	  	compilable	  [FE]  AssertionError  	235	5	add
1540	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  3/  m  +  1;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  /  m;  d  =  p  3/  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  /  m;  d  =  p  3/  m  +  1;	  	non-compiled	[CE]  ';'  expected	235	None	add
1541	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  *  m;  d  =  p  /  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  *  m;  d  =  p  /  m  +  1;	  	compilable	  [FE]  AssertionError  	235	5	add
1542	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  *  m;  d  =  p  /  m  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  1;  d  =  p  *  m;  d  =  p  /  m  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    1;    d  =  p  *  m;  d  =  p  /  m  +  1;	  	compilable	  [FE]  AssertionError  	235	5	add
1543	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  d  *  d;	  u    =    a    +    d;    u    =    a    +    d);    	compilable	  [FE]  AssertionError  	86	5	replace
1544	[BUG]  [BUGGY]  u  =  a  +  d  *  d;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  d  *  d;	  u    =    a    +    d;    u    =    a    +    d);    	compilable	  [FE]  AssertionError  	86	5	replace
1545	[BUG]  [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  =  GOLDEN_SECTION)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	242	None	replace
1546	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
1547	[BUG]  [BUGGY]  if(isMinim)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
1548	[BUG]  [BUGGY]  d  =  p  *(lo  -  x)&&  a  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *(lo  -  x)&&  a  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *(lo  -  x)&&  a  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	234	None	replace
1549	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  x;  u  =  d  +  y;  [CE]  cannot  find  symbol  y  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  x;  u  =  d  +  y;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    d    +    x;    u  =  d  +  x;  u  =  d  +  y;	  	non-compiled	[CE]  cannot  find  symbol  y	14	None	add
1550	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  u;  u  =  u  +  d;	  u    =    u    +    d;    u    =    u    +    d;    	compilable	  [FE]  AssertionError  	106	5	replace
1551	[BUG]  [BUGGY]  u  =  d  +  u;  u  =  u  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  u;  u  =  u  +  d;	  u    =    u    +    d;    u    =    u    +    d;    	compilable	  [FE]  AssertionError  	106	5	replace
1552	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  t  +  d;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  t  +  d;  u  =  u  +  d;	  u    =    u    +    d;    u    =    u    +    d;    	compilable	  [FE]  AssertionError  	106	5	replace
1553	[BUG]  [BUGGY]  u  =  t  +  d;  u  =  u  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  t  +  d;  u  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  t  +  d;  u  =  u  +  d;	  u    =    u    +    d;    u    =    u    +    d;    	compilable	  [FE]  AssertionError  	106	5	replace
1554	[BUG]  [BUGGY]  if(isMinimum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinimum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinimum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	260	None	replace
1555	[BUG]  [BUGGY]  if(d  >  0.5  *  q  *  r)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  0.5  *  q  *  r)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  0.5  *  q  *  r)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	229	None	replace
1556	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	229	None	replace
1557	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  not  a  statement	229	None	replace
1558	[BUG]  [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  h  *  r;  [CE]  cannot  find  symbol  h  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  r;  d  =  p  /  h  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    *    r;    d  =  p  /  h  *  r;	  	non-compiled	[CE]  cannot  find  symbol  h	195	None	add
1559	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
1560	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
1561	[BUG]  [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  =  GOLDEN_SECTION)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	266	None	replace
1562	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
1563	[BUG]  [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  a  &&  p  <  a  &&  b  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }	  if(r    <    a    &&    p    <    a    &&    p    <    a    &&    x    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1564	[BUG]  [BUGGY]  if(d  <  a  &&  p  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a  &&  p  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  a  &&  p  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }	  if(r    <    a    &&    p    <    a    &&    p    <    a    &&    x    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1565	[BUG]  [BUGGY]  if(d  <  a  &&  p  <  a  &&  x  <  =  GOLDEN_SECTION)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a  &&  p  <  a  &&  x  <  =  GOLDEN_SECTION)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  a  &&  p  <  a  &&  x  <  =  GOLDEN_SECTION)  {  d  =  p  /  q;  }	  if(r    <    a    &&    p    <    a    &&    p    <    a    &&    x    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1566	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  p  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    *    q;    d  =  p  /  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	126	5	add
1567	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  p  /  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  *  q;  d  =  p  /  q;  d  =  m  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    *    q;    d  =  p  /  q;  d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	126	5	add
1568	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  p  +  d;  u  =  A  +  d;  u  =  p  +  d;  [CE]  cannot  find  symbol  A  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  p  +  d;  u  =  A  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    p    +    d;    u  =  A  +  d;  u  =  p  +  d;	  	non-compiled	[CE]  cannot  find  symbol  A	87	None	add
1569	[BUG]  [BUGGY]  u    =    p    +    d;    u  =  p  +  d;  int  u  =  p  +  d;  u  =  p  +  d;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    p    +    d;    u  =  p  +  d;  int  u  =  p  +  d;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        p        +        d;        u    =    p    +    d;    int  u  =  p  +  d;  u  =  p  +  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	99	None	add
1570	[BUG]  [BUGGY]  if(isMinimum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinimum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinimum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    p)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	262	None	replace
1571	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    p)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	262	None	replace
1572	[BUG]  [BUGGY]  if(isMinimum  >  0)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinimum  >  0)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinimum  >  0)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    b    -    u    <    tol2)    {    if    (x    <    =    p)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	262	None	replace
1573	[BUG]  [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  >>  ';'  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  >>  ';'  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  >>  ';'	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	174	None	replace
1574	[BUG]  [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	174	None	replace
1575	[BUG]  [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	174	None	replace
1576	[BUG]  [BUGGY]  if(q  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(q  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(q  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	174	None	replace
1577	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  d  +  d;	          d    =    m    +    d;    d    =    m    +    d.;    	compilable	  [FE]  AssertionError  	254	5	replace
1578	[BUG]  [BUGGY]  d  =  d  +  d;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  +  d;	          d    =    m    +    d;    d    =    m    +    d.;    	compilable	  [FE]  AssertionError  	254	5	replace
1579	[BUG]  [BUGGY]  d  =  d  +  m;  i  =  m  +  d;  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  i  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  +  m;  i  =  m  +  d;	          d    =    m    +    d;    i    =    m    +    d;    	non-compiled	[CE]  cannot  find  symbol  i	253	None	replace
1580	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  m  +  d;  u  =  A  +  d;  u  =  m  +  d;  [CE]  cannot  find  symbol  A  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  m  +  d;  u  =  A  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    m    +    d;    u  =  A  +  d;  u  =  m  +  d;	  	non-compiled	[CE]  cannot  find  symbol  A	170	None	add
1581	[BUG]  [BUGGY]  d  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    tol1;    	non-compiled	[CE]  ';'  expected	104	None	replace
1582	[BUG]  [BUGGY]  d  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    tol1;    	non-compiled	[CE]  ';'  expected	104	None	replace
1583	[BUG]  [BUGGY]  d  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    tol1;    	non-compiled	[CE]  ';'  expected	104	None	replace
1584	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  a;  u  =  p  +  d;	  u    =    a    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	88	5	replace
1585	[BUG]  [BUGGY]  u  =  d  +  a;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  a;  u  =  p  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  a;  u  =  p  +  d;	  u    =    a    +    d;    u    =    p    +    d;    	compilable	  [FE]  AssertionError  	88	5	replace
1586	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	243	None	replace
1587	[BUG]  [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  =  GOLDEN_SECTION)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	243	None	replace
1588	[BUG]  [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  =  GOLDEN_SECTION)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	243	None	replace
1589	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	243	None	replace
1590	[BUG]  [BUGGY]  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol1;  }  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol1;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol1;  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol2)    {    d    =    tol1;    }    	non-compiled	[CE]  cannot  find  symbol  i	75	None	replace
1591	[BUG]  [BUGGY]  if(isMinim)  {  d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d1;  }  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d1;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d1;  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol2)    {    d    =    tol1;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
1592	[BUG]  [BUGGY]  u  =  r  +  d;  (  u  =  r  +  d);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  d;  (  u  =  r  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    r    +    d;    (  u  =  r  +  d);	  	non-compiled	[CE]  not  a  statement	12	None	add
1593	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  u;  u  =  tol1  +  d;	  u    =    u    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	198	5	replace
1594	[BUG]  [BUGGY]  u  =  d  +  u;  u  =  tol1  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  u;  u  =  tol1  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  u;  u  =  tol1  +  d;	  u    =    u    +    d;    u    =    tol1    +    d;    	compilable	  [FE]  AssertionError  	198	5	replace
1595	[BUG]  [BUGGY]  u  =  m  +  tol1;  int  u  =  m  +  tol1;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  int  u  =  m  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    tol1;    int  u  =  m  +  tol1;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	221	None	add
1596	[BUG]  [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  line  =  m  +  d;  [CE]  cannot  find  symbol  line  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  line  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        m    =    m    +    d;    u  =  m  +  d;  m  =  m  +  d;  line  =  m  +  d;	  	non-compiled	[CE]  cannot  find  symbol  line	187	None	add
1597	[BUG]  [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim;  [CE]  cannot  find  symbol  isMinimum  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        m    =    m    +    d;    u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  isMinim;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	187	None	add
1598	[BUG]  [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  true;  [CE]  cannot  find  symbol  isMinimum  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    m  =  m  +  d;  u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  true;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        m    =    m    +    d;    u  =  m  +  d;  m  =  m  +  d;  this.isMinimum  =  true;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	187	None	add
1599	[BUG]  [BUGGY]  d  =  p  /  q  +  1;  d  =  p  /  qua  +  1;  [CE]  cannot  find  symbol  qua  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  1;  d  =  p  /  qua  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    1;    d  =  p  /  qua  +  1;	  	non-compiled	[CE]  cannot  find  symbol  qua	29	None	add
1600	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  tol2  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        u        +        d;        u    =    a    +    d;    u  =  u  +  d;  u  =  tol2  +  d;	  	compilable	  [FE]  AssertionError  	108	4	add
1601	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  tol2  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  tol2  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    a    +    d;    u  =  u  +  d;  u  =  tol2  +  d;	  	compilable	  [FE]  AssertionError  	108	4	add
1602	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  as  +  d;  [CE]  cannot  find  symbol  as  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  a  +  d;  u  =  u  +  d;  u  =  as  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    a    +    d;    u  =  u  +  d;  u  =  as  +  d;	  	non-compiled	[CE]  cannot  find  symbol  as	108	None	add
1603	[BUG]  [BUGGY]  d  =  b  /  q;  d  =  b  /  q3;  [CE]  cannot  find  symbol  q3  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  b  /  q;  d  =  b  /  q3;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    b    /    q;    d  =  b  /  q3;	  	non-compiled	[CE]  cannot  find  symbol  q3	251	None	add
1604	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	245	None	replace
1605	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	245	None	replace
1606	[BUG]  [BUGGY]  if(d  >  0.5  *  q  *  r)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  0.5  *  q  *  r)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  0.5  *  q  *  r)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	245	None	replace
1607	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(1.0    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	228	None	replace
1608	[BUG]  [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
1609	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  r  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  d  +  m;  r  =  m  +  d;	          d    =    m    +    d;    r    =    m    +    d;    	compilable	  [FE]  AssertionError  	205	5	replace
1610	[BUG]  [BUGGY]  d  =  d  +  m;  r  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  m;  r  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  +  m;  r  =  m  +  d;	          d    =    m    +    d;    r    =    m    +    d;    	compilable	  [FE]  AssertionError  	205	5	replace
1611	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  u  =  d  +  x;  u  =  m  +  y;  [CE]  cannot  find  symbol  y  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  m  +  x;  u  =  d  +  x;  u  =  m  +  y;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    m    +    x;    u  =  d  +  x;  u  =  m  +  y;	  	non-compiled	[CE]  cannot  find  symbol  y	212	None	add
1612	[BUG]  [BUGGY]  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol2;  }  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol2;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol2;  }	          d    =    m    +    d;    if    (m    +    d)    {    d    =    m    +    d;    }    else    if(i    >    a    ||    b    -    u    <    tol2)    {    d    =    tol2;    }    	non-compiled	[CE]  cannot  find  symbol  i	77	None	replace
1613	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  r  *  q;	  d    =    p    *    q    +    r;    	compilable	  [FE]  AssertionError  	179	5	replace
1614	[BUG]  [BUGGY]  d  =  p  *  r  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  r  *  q;	  d    =    p    *    q    +    r;    	compilable	  [FE]  AssertionError  	179	5	replace
1615	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  r  +  b;	  d    =    p    *    q    +    r;    	compilable	  [FE]  AssertionError  	179	5	replace
1616	[BUG]  [BUGGY]  d  =  p  *  r  +  b;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  b;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  r  +  b;	  d    =    p    *    q    +    r;    	compilable	  [FE]  AssertionError  	179	5	replace
1617	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  p  /  q;  d  =  m  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    +    q;    d  =  p  /  q;  d  =  m  +  q;	  	compilable	  [FE]  AssertionError  	201	5	add
1618	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  p  /  q;  d  =  m  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  +  q;  d  =  p  /  q;  d  =  m  +  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    +    q;    d  =  p  /  q;  d  =  m  +  q;	  	compilable	  [FE]  AssertionError  	201	5	add
1619	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  *  m;  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  *  m;  d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	1	5	add
1620	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  *  m;  d  =  p  /  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  *  m;  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  *  m;  d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	1	5	add
1621	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  /  m;  d  =  p  *  m;	  	compilable	  [FE]  AssertionError  	1	6	add
1622	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  *  m;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m;  d  =  p  /  m;  d  =  p  *  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m;    d  =  p  /  m;  d  =  p  *  m;	  	compilable	  [FE]  AssertionError  	1	6	add
1623	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  this.isMinimum  =  isMaximum  ||  isMinimum)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  this.isMinimum  =  isMaximum  ||  isMinimum)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    r;    u  =  a  +  r;  this.isMinimum  =  isMaximum  ||  isMinimum)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  ';'  expected	133	None	add
1624	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  this.isMinimum  =  isMaximum  ||  isMinimum)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  this.isMinimum  =  isMaximum  ||  isMinimum)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    r;    u  =  a  +  r;  this.isMinimum  =  isMaximum  ||  isMinimum)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	133	None	add
1625	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  this.isMinimum  =  isMaximum  ||  isMinimum)  {  if  (x  <  =  m)  {  d  =  p  /  x;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  this.isMinimum  =  isMaximum  ||  isMinimum)  {  if  (x  <  =  m)  {  d  =  p  /  x;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    r;    u  =  a  +  r;  this.isMinimum  =  isMaximum  ||  isMinimum)  {  if  (x  <  =  m)  {  d  =  p  /  x;  }	  	non-compiled	[CE]  ';'  expected	133	None	add
1626	[BUG]  [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  this.isMinimum  =  isMaximum  ||  isMinimum)  {  if  (x  <  =  m)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  r;  u  =  a  +  r;  this.isMinimum  =  isMaximum  ||  isMinimum)  {  if  (x  <  =  m)  {  d  =  -tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    r;    u  =  a  +  r;  this.isMinimum  =  isMaximum  ||  isMinimum)  {  if  (x  <  =  m)  {  d  =  -tol1;  }	  	non-compiled	[CE]  ';'  expected	133	None	add
1627	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  qua;  d  =  p  /  q;  [CE]  cannot  find  symbol  qua  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  qua;  d  =  p  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q;    d  =  p  /  qua;  d  =  p  /  q;	  	non-compiled	[CE]  cannot  find  symbol  qua	111	None	add
1628	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q;    d  =  p  /  q;  d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	111	5	add
1629	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;  d  =  p  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q;  d  =  p  /  q;  d  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q;    d  =  p  /  q;  d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	111	5	add
1630	[BUG]  [BUGGY]  if(x  <  min)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  min)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  min)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(r    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1631	[BUG]  [BUGGY]  if(r  <  min)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  min)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  min)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(r    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1632	[BUG]  [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  =  GOLDEN_SECTION)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	265	None	replace
1633	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	265	None	replace
1634	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	265	None	replace
1635	[BUG]  [BUGGY]  if(isMinim)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	265	None	replace
1636	[BUG]  [BUGGY]  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(x    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1637	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  d;  u  =  q  +  d;	  u    =    q    +    d;    u    =    q    +    d;    	compilable	  [FE]  AssertionError  	36	5	replace
1638	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  u  =  q  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  d;  u  =  q  +  d;	  u    =    q    +    d;    u    =    q    +    d;    	compilable	  [FE]  AssertionError  	36	5	replace
1639	[BUG]  [BUGGY]  u  =  p  +  d  *  l;  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d  *  l;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d  *  l;	  u    =    p    +    d    *    q;    	non-compiled	[CE]  cannot  find  symbol  l	173	None	replace
1640	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  r  +  d;	          d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	58	5	replace
1641	[BUG]  [BUGGY]  d  =  p  *  r  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  r  +  d;	          d    =    p    *    q;    d    =    p    *    q    +    d;    	compilable	  [FE]  AssertionError  	58	5	replace
1642	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  t  +  d;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  t  +  d;  u  =  a  +  d;	  u    =    u    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	109	5	replace
1643	[BUG]  [BUGGY]  u  =  t  +  d;  u  =  a  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  t  +  d;  u  =  a  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  t  +  d;  u  =  a  +  d;	  u    =    u    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	109	5	replace
1644	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  m  +  a;	          d    =    p    /    m;    d    =    p    /    m    +    a;    	compilable	  [FE]  AssertionError  	9	5	replace
1645	[BUG]  [BUGGY]  d  =  p  *  m  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  m  +  a;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  m  +  a;	          d    =    p    /    m;    d    =    p    /    m    +    a;    	compilable	  [FE]  AssertionError  	9	5	replace
1646	[BUG]  [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  p  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  p  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  a  &&  p  <  a  &&  b  <  a  &&  p  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1647	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  b;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  b;	  u    =    a    *    d;    	compilable	  [FE]  AssertionError  	136	5	replace
1648	[BUG]  [BUGGY]  u  =  d  *  b;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  b;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  b;	  u    =    a    *    d;    	compilable	  [FE]  AssertionError  	136	5	replace
1649	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1650	[BUG]  [BUGGY]  if(r  >  eps)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  >  eps)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  eps)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1651	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	264	None	replace
1652	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	264	None	replace
1653	[BUG]  [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  =  GOLDEN_SECTION)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	264	None	replace
1654	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /	  u    =    u    +    d;    u    =    u    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	264	None	replace
1655	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    q;    u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	162	None	add
1656	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    q;    u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	162	None	add
1657	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  d  /  q;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  d  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    q;    u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  d  /  q;  }	  	non-compiled	[CE]  ';'  expected	162	None	add
1658	[BUG]  [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  d  /  q;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q;  u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  d  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    q;    u  =  p  +  q;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  d  /  q;  }	  	non-compiled	[CE]  ';'  expected	162	None	add
1659	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  p  /  d  :  p  /  d;  [CE]  cannot  find  symbol  isMinimum  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  p  /  d  :  p  /  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    *    d;    u  =  p  *  d;  this.isMinimum  =  isMinim?  p  /  d  :  p  /  d;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	156	None	add
1660	[BUG]  [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  p  /  d  :  p  *  d;  [CE]  cannot  find  symbol  isMinimum  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  d;  u  =  p  *  d;  this.isMinimum  =  isMinim?  p  /  d  :  p  *  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    *    d;    u  =  p  *  d;  this.isMinimum  =  isMinim?  p  /  d  :  p  *  d;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	156	None	add
1661	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  *  q;  d  =  p  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  *  q;  d  =  p  /  q  +  d;	  	compilable	  [FE]  AssertionError  	115	4	add
1662	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  *  q;  d  =  p  /  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  *  q;  d  =  p  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  *  q;  d  =  p  /  q  +  d;	  	compilable	  [FE]  AssertionError  	115	4	add
1663	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  /  q  +  del;  [CE]  cannot  find  symbol  del  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  q;  d  =  p  /  q  +  del;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  /  q;  d  =  p  /  q  +  del;	  	non-compiled	[CE]  cannot  find  symbol  del	115	None	add
1664	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  qua;  d  =  p  /  q  +  d;  [CE]  cannot  find  symbol  qua  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  d;  d  =  p  /  qua;  d  =  p  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    d;    d  =  p  /  qua;  d  =  p  /  q  +  d;	  	non-compiled	[CE]  cannot  find  symbol  qua	115	None	add
1665	[BUG]  [BUGGY]  if(p  <  min  &&  p  <  min  &&  b  <  min  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  min  &&  p  <  min  &&  b  <  min  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  min  &&  p  <  min  &&  b  <  min  &&  r  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1666	[BUG]  [BUGGY]  if(p  <  min  &&  p  <  =  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  min  &&  p  <  =  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  min  &&  p  <  =  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }	  if(p    <    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1667	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	227	None	replace
1668	[BUG]  [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }	  if(x    <    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	220	None	replace
1669	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  1;	  u    =    a    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	83	5	replace
1670	[BUG]  [BUGGY]  u  =  a  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  1;	  u    =    a    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	83	5	replace
1671	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  b;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  b;	  u    =    a    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	83	5	replace
1672	[BUG]  [BUGGY]  u  =  a  +  b;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  b;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  b;	  u    =    a    +    d;    u    =    a    +    d;    	compilable	  [FE]  AssertionError  	83	5	replace
1673	[BUG]  [BUGGY]  if(isMinim  &&  isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim  &&  isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim  &&  isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMaximum)    {    d    =    p    /    q;    	non-compiled	[CE]  ';'  expected	147	None	replace
1674	[BUG]  [BUGGY]  if(isMinim  &&  isMinim  &&  max  >  hi)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim  &&  isMinim  &&  max  >  hi)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim  &&  isMinim  &&  max  >  hi)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMaximum)    {    d    =    p    /    q;    	non-compiled	[CE]  ';'  expected	147	None	replace
1675	[BUG]  [BUGGY]  if(isMinim  &&  isMinim  &&  isMaximum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim  &&  isMinim  &&  isMaximum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim  &&  isMinim  &&  isMaximum)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMaximum)    {    d    =    p    /    q;    	non-compiled	[CE]  ';'  expected	147	None	replace
1676	[BUG]  [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(d    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	256	None	replace
1677	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	247	None	replace
1678	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	247	None	replace
1679	[BUG]  [BUGGY]  if(b  >  0.5  *  q  *  r)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(b  >  0.5  *  q  *  r)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(b  >  0.5  *  q  *  r)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	247	None	replace
1680	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	247	None	replace
1681	[BUG]  [BUGGY]  d  =  p  /  q  +  d;  d  =  p  /  h  +  d;  [CE]  cannot  find  symbol  h  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  +  d;  d  =  p  /  h  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    q    +    d;    d  =  p  /  h  +  d;	  	non-compiled	[CE]  cannot  find  symbol  h	137	None	add
1682	[BUG]  [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(x  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	176	None	replace
1683	[BUG]  [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(x  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	176	None	replace
1684	[BUG]  [BUGGY]  if(isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
1685	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1686	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1687	[BUG]  [BUGGY]  if(m  >  eps)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  eps)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  eps)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1688	[BUG]  [BUGGY]  d  =  d  *  q  *(a  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  *  q  *(a  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  *  q  *(a  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    >    a    *    (a    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
1689	[BUG]  [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  >>  ';'  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  >>  ';'  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  >>  ';'	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	200	None	replace
1690	[BUG]  [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	200	None	replace
1691	[BUG]  [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	200	None	replace
1692	[BUG]  [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    	non-compiled	[CE]  ';'  expected	200	None	replace
1693	[BUG]  [BUGGY]  d  =  r  /  q;  d  =  l  /  q;  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q;  d  =  l  /  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    r    /    q;    d  =  l  /  q;	  	non-compiled	[CE]  cannot  find  symbol  l	166	None	add
1694	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  r;  d  =  m  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    m    /    r;    d  =  m  *  r;	  	compilable	  [FE]  AssertionError  	164	4	add
1695	[BUG]  [BUGGY]  d  =  m  /  r;  d  =  m  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  /  r;  d  =  m  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    /    r;    d  =  m  *  r;	  	compilable	  [FE]  AssertionError  	164	4	add
1696	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  (p  /  m  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  /  m;  d  =  (p  /  m  +  d);	  	compilable	  [FE]  AssertionError  	3	5	add
1697	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  (p  /  m  +  d);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  (p  /  m  +  d);  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  /  m;  d  =  (p  /  m  +  d);	  	compilable	  [FE]  AssertionError  	3	5	add
1698	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  /   "m  +  d;  [CE]  unclosed  string  literal  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  /  m  +  d;  d  =  p  /  m;  d  =  p  /   "m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    /    m    +    d;    d  =  p  /  m;  d  =  p  /   "m  +  d;	  	non-compiled	[CE]  unclosed  string  literal	3	None	add
1699	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  not  a  statement	230	None	replace
1700	[BUG]  [BUGGY]  if(x  <  =  m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  =  m)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	230	None	replace
1701	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinim    -    a    ||    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  not  a  statement	230	None	replace
1702	[BUG]  [BUGGY]  d  =  m  *  q;  d  =  m  *  qua;  [CE]  cannot  find  symbol  qua  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  m  *  q;  d  =  m  *  qua;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    m    *    q;    d  =  m  *  qua;	  	non-compiled	[CE]  cannot  find  symbol  qua	168	None	add
1703	[BUG]  [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  d  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  d  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  d  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(p    <    a    -    x    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1704	[BUG]  [BUGGY]  d  =  p  *  q  +  1;  dev  =  p  *  q;  [CE]  cannot  find  symbol  dev  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  1;  dev  =  p  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  +  1;  dev  =  p  *  q;	          d    =    p    *    q;    dev    =    p    *    q;    	non-compiled	[CE]  cannot  find  symbol  dev	194	None	replace
1705	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    is    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1706	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    is    	non-compiled	[CE]  ';'  expected	144	None	replace
1707	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    is    	non-compiled	[CE]  ';'  expected	144	None	replace
1708	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  }  else  {  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    is    	non-compiled	[CE]  ';'  expected	144	None	replace
1709	[BUG]  [BUGGY]  u  =  r  +  d;  U  =  u  +  d;  [CE]  cannot  find  symbol  U  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  r  +  d;  U  =  u  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  r  +  d;  U  =  u  +  d;	  u    =    u    +    d;    U    =    u    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	110	None	replace
1710	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  m  +  d;  u  =  p  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        m        +        d;        u    =    m    +    d;    u  =  p  +  d;  u  =  m  +  d;	  	compilable	  [FE]  AssertionError  	142	4	add
1711	[BUG]  [BUGGY]  u    =    m    +    d;    u  =  m  +  d;  u  =  p  +  d;  u  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  m  +  d;  u  =  p  +  d;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        u    =    m    +    d;    u  =  p  +  d;  u  =  m  +  d;	  	compilable	  [FE]  AssertionError  	142	4	add
1712	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	259	None	replace
1713	[BUG]  [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  =  GOLDEN_SECTION)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	259	None	replace
1714	[BUG]  [BUGGY]  if(isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	259	None	replace
1715	[BUG]  [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  =  GOLDEN_SECTION)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  =  GOLDEN_SECTION)  {  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    a)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	259	None	replace
1716	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  |  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  |  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  |	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1717	[BUG]  [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  |  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  |  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a)  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  |	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim    ||    isMinim)    {    d    =    -tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1718	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }	  if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(1.0    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	224	None	replace
1719	[BUG]  [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  u  =  d  +  x;  u  =  r  +  y;  [CE]  cannot  find  symbol  y  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    d    +    x;    u  =  r  +  x;  u  =  d  +  x;  u  =  r  +  y;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        d        +        x;        u    =    r    +    x;    u  =  d  +  x;  u  =  r  +  y;	  	non-compiled	[CE]  cannot  find  symbol  y	21	None	add
1720	[BUG]  [BUGGY]  u  =  p  +  d  *  q;  u  =  p  +  d  *  q;  loc  =  p  +  d  *  q;  [CE]  cannot  find  symbol  loc  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d  *  q;  u  =  p  +  d  *  q;  loc  =  p  +  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d    *    q;    u  =  p  +  d  *  q;  loc  =  p  +  d  *  q;	  	non-compiled	[CE]  cannot  find  symbol  loc	172	None	add
1721	[BUG]  [BUGGY]  u  =  p  +  d  *  q;  u  =  p  +  d  *  q;mutation  =  p  +  d  *  q;  [CE]  cannot  find  symbol  mutation  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d  *  q;  u  =  p  +  d  *  q;mutation  =  p  +  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d    *    q;    u  =  p  +  d  *  q;mutation  =  p  +  d  *  q;	  	non-compiled	[CE]  cannot  find  symbol  mutation	172	None	add
1722	[BUG]  [BUGGY]  u  =  p  +  d  *  q;  u  =  p  +  d  *  q;  this.isMinimum  =  isMinim;  [CE]  cannot  find  symbol  isMinimum  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  d  *  q;  u  =  p  +  d  *  q;  this.isMinimum  =  isMinim;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d    *    q;    u  =  p  +  d  *  q;  this.isMinimum  =  isMinim;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	172	None	add
1723	[BUG]  [BUGGY]  u  =  d  +  q;  u  =  k  +  d;  [CE]  cannot  find  symbol  k  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  u  =  k  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;  u  =  k  +  d;	  u    =    q    +    d;    u    =    k    +    d;    	non-compiled	[CE]  cannot  find  symbol  k	40	None	replace
1724	[BUG]  [BUGGY]  D  =  p  /  q  +  d;  [CE]  cannot  find  symbol  D  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  D  =  p  /  q  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	D  =  p  /  q  +  d;	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    x))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  cannot  find  symbol  D	140	None	replace
1725	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  d  =  p  +  d;  d  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        +        d;        d    =    m    +    d;    d  =  p  +  d;  d  =  m  +  d;	  	compilable	  [FE]  AssertionError  	73	5	add
1726	[BUG]  [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  d  =  p  +  d;  d  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    d  =  m  +  d;  d  =  p  +  d;  d  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        +        d;        d    =    m    +    d;    d  =  p  +  d;  d  =  m  +  d;	  	compilable	  [FE]  AssertionError  	73	5	add
1727	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  /  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  /  r;	  u    =    p    +    r;    	compilable	  [FE]  AssertionError  	159	5	replace
1728	[BUG]  [BUGGY]  u  =  p  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  /  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  /  r;	  u    =    p    +    r;    	compilable	  [FE]  AssertionError  	159	5	replace
1729	[BUG]  [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  3/  m;  d  =  p  %  m;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    m;    d  =  p  %  m;  d  =  p  3/  m;  d  =  p  %  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        m;        d    =    p    %    m;    d  =  p  3/  m;  d  =  p  %  m;	  	non-compiled	[CE]  ';'  expected	5	None	add
1730	[BUG]  [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)  &&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	replace
1731	[BUG]  [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1732	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  p  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    m;    u  =  p  +  m;	  	compilable	  [FE]  AssertionError  	43	4	add
1733	[BUG]  [BUGGY]  u  =  d  +  m;  u  =  p  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  p  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    m;    u  =  p  +  m;	  	compilable	  [FE]  AssertionError  	43	4	add
1734	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r;  d  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    p    /    r;    d  =  p  *  r;	  	compilable	  [FE]  AssertionError  	27	5	add
1735	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r;  d  =  p  *  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    /    r;    d  =  p  *  r;	  	compilable	  [FE]  AssertionError  	27	5	add
1736	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    t)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	244	None	replace
1737	[BUG]  [BUGGY]  if(x  <  =  m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  =  m)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    t)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	244	None	replace
1738	[BUG]  [BUGGY]  if(isMinim)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinim)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }	  u    =    a    +    d;    u    =    a    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    t)    {    d    =    tol1;    }    	non-compiled	[CE]  ';'  expected	244	None	replace
1739	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  m))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  m))  {  d  =  p  /  q  +  d;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  m))  {  d  =  p  /  q  +  d;  }	  if(d    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    m))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1740	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    *    d;    u  =  q  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  ';'  expected	25	None	add
1741	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    *    d;    u  =  q  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  ';'  expected	25	None	add
1742	[BUG]  [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  *  d;  u  =  q  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    *    d;    u  =  q  *  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	25	None	add
1743	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  a  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  tol1;  u  =  a  +  x;	  u    =    d    +    x;    u    =    a    +    x;    	compilable	  [FE]  AssertionError  	17	5	replace
1744	[BUG]  [BUGGY]  u  =  d  +  tol1;  u  =  a  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  tol1;  u  =  a  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  tol1;  u  =  a  +  x;	  u    =    d    +    x;    u    =    a    +    x;    	compilable	  [FE]  AssertionError  	17	5	replace
1745	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  *  q;  d  =  p  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    %    q;    d  =  p  *  q;  d  =  p  %  q;	  	compilable	  [FE]  AssertionError  	113	5	add
1746	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  *  q;  d  =  p  %  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  %  q;  d  =  p  *  q;  d  =  p  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    %    q;    d  =  p  *  q;  d  =  p  %  q;	  	compilable	  [FE]  AssertionError  	113	5	add
1747	[BUG]  [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  u  =  u  +  d;  u  =  tol1)  +  d;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    u    +    d;    u  =  tol1  +  d;  u  =  u  +  d;  u  =  tol1)  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        u        +        d;        u    =    tol1    +    d;    u  =  u  +  d;  u  =  tol1)  +  d;	  	non-compiled	[CE]  ';'  expected	197	None	add
1748	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  d  *  d;	  d    =    x    +    d;    	compilable	  [FE]  AssertionError  	233	5	replace
1749	[BUG]  [BUGGY]  d  =  d  *  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  *  d;	  d    =    x    +    d;    	compilable	  [FE]  AssertionError  	233	5	replace
1750	[BUG]  [BUGGY]  u  =  q  +  r;  u  =  q  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  q  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    r;    u  =  q  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  ';'  expected	225	None	add
1751	[BUG]  [BUGGY]  u  =  q  +  r;  u  =  q  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  q  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    r;    u  =  q  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  ';'  expected	225	None	add
1752	[BUG]  [BUGGY]  u  =  q  +  r;  u  =  q  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  x;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  q  +  r;  u  =  q  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  x;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    r;    u  =  q  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  x;  }	  	non-compiled	[CE]  ';'  expected	225	None	add
1753	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	246	None	replace
1754	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	246	None	replace
1755	[BUG]  [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	246	None	replace
1756	[BUG]  [BUGGY]  if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q	  u    =    q    +    d;    u    =    q    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    b    -    u    <    tol2)    {    if    (x    <    =    m)    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	246	None	replace
1757	[BUG]  [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	175	None	replace
1758	[BUG]  [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]          AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(x  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  }	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	175	None	replace
1759	[BUG]  [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMin  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMin  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *(x  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMin	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    	non-compiled	[CE]  ';'  expected	175	None	replace
1760	[BUG]  [BUGGY]  d  =  p  +  d;  i  =  p  +  d;  [CE]  cannot  find  symbol  i  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  i  =  p  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    +    d;    i  =  p  +  d;	  	non-compiled	[CE]  cannot  find  symbol  i	94	None	add
1761	[BUG]  [BUGGY]  d  =  p  +  d;  d  =  p  +  d.;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  +  d;  d  =  p  +  d.;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    p    +    d;    d  =  p  +  d.;	  	non-compiled	[CE]  <identifier>  expected	94	None	add
1762	[BUG]  [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	  if(r    >    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1763	[BUG]  [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    r;    u  =  p  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	158	None	add
1764	[BUG]  [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    r;    u  =  p  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	158	None	add
1765	[BUG]  [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  d  /  q;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  d  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    r;    u  =  p  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  d  /  q;  }	  	non-compiled	[CE]  ';'  expected	158	None	add
1766	[BUG]  [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  d  /  q;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  r;  u  =  p  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  d  /  q;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    r;    u  =  p  +  r;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  d  /  q;  }	  	non-compiled	[CE]  ';'  expected	158	None	add
1767	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  d  +  tol2;	  d    =    d    +    m;    	compilable	  [FE]  AssertionError  	91	5	replace
1768	[BUG]  [BUGGY]  d  =  d  +  tol2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  d  +  tol2;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  +  tol2;	  d    =    d    +    m;    	compilable	  [FE]  AssertionError  	91	5	replace
1769	[BUG]  [BUGGY]  u  =  d  +  r;  u  =  d  +  x);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  u  =  d  +  x);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  r;  u  =  d  +  x);	  u    =    d    +    x;    u    =    d    +    x);    	non-compiled	[CE]  ';'  expected	18	None	replace
1770	[BUG]  [BUGGY]  d  =  p  *  q  +  r.tol1;  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q  +  r.tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  +  r.tol1;	          d    =    p    *    q;    d    =    p    *    q.tol1;    	non-compiled	[CE]  double  cannot  be  dereferenced	61	None	replace
1771	[BUG]  [BUGGY]  d  =  p  *  q,  r  *  q.tol1;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  q,  r  *  q.tol1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q,  r  *  q.tol1;	          d    =    p    *    q;    d    =    p    *    q.tol1;    	non-compiled	[CE]  ';'  expected	61	None	replace
1772	[BUG]  [BUGGY]  d  =  l  /  r;  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  l  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  l  /  r;	  d    =    m    /    r;    	non-compiled	[CE]  cannot  find  symbol  l	165	None	replace
1773	[BUG]  [BUGGY]  u  =  d  *  x;  int  u  =  d  *  x;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  int  u  =  d  *  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    *    x;    int  u  =  d  *  x;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	148	None	add
1774	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  d  *  X;  [CE]  cannot  find  symbol  X  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  d  *  X;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    *    x;    u  =  d  *  X;	  	non-compiled	[CE]  cannot  find  symbol  X	148	None	add
1775	[BUG]  [BUGGY]  if(isMinimum  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinimum  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinimum  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	177	None	replace
1776	[BUG]  [BUGGY]  if(isMinimum  &&  isMinim  &&  p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinimum  &&  isMinim  &&  p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinimum  &&  isMinim  &&  p  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	177	None	replace
1777	[BUG]  [BUGGY]  if(isMinimum  &&  isMinim  &&  p  >  a  *(x  -  1)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(isMinimum  &&  isMinim  &&  p  >  a  *(x  -  1)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinimum  &&  isMinim  &&  p  >  a  *(x  -  1)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {	  u    =    p    +    d;    u    =    p    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    p    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	177	None	replace
1778	[BUG]  [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  m;  d  =  p  *  q;  d  =  p  *   "q  +  m;  [CE]  unclosed  string  literal  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    *    q;    d  =  p  *  q  +  m;  d  =  p  *  q;  d  =  p  *   "q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        *        q;        d    =    p    *    q    +    m;    d  =  p  *  q;  d  =  p  *   "q  +  m;	  	non-compiled	[CE]  unclosed  string  literal	62	None	add
1779	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  t  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  t  *  d;	  d    =    m    *    d;    	compilable	  [FE]  AssertionError  	93	5	replace
1780	[BUG]  [BUGGY]  d  =  t  *  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  t  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  t  *  d;	  d    =    m    *    d;    	compilable	  [FE]  AssertionError  	93	5	replace
1781	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  a  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  a  *  d;	  d    =    m    *    d;    	compilable	  [FE]  AssertionError  	93	5	replace
1782	[BUG]  [BUGGY]  d  =  a  *  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  a  *  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  a  *  d;	  d    =    m    *    d;    	compilable	  [FE]  AssertionError  	93	5	replace
1783	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  0.5)  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	79	5	replace
1784	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  0.5)  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  0.5)  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  >=  0.5)  {  d  =  p  /  q;  }	  if(p    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	79	5	replace
1785	[BUG]  [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  }  else  {  if  (x  <  =  a)  {  if  (a  <  tol2  ||  b  -  u  <  tol2)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  }  else  {  if  (x  <  =  a)  {  if  (a  <  tol2  ||  b  -  u  <  tol2)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    *    d;    u  =  m  *  d;  }  else  {  if  (x  <  =  a)  {  if  (a  <  tol2  ||  b  -  u  <  tol2)  {  d  =  tol1;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
1786	[BUG]  [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  }  else  {  if  (x  <  =  a)  {  if  (a  <  tol1  ||  b  -  u  <  tol2)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  }  else  {  if  (x  <  =  a)  {  if  (a  <  tol1  ||  b  -  u  <  tol2)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    *    d;    u  =  m  *  d;  }  else  {  if  (x  <  =  a)  {  if  (a  <  tol1  ||  b  -  u  <  tol2)  {  d  =  tol1;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
1787	[BUG]  [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  }  else  {  if  (x  <  =  a)  {  if  (a  <  tol1  ||  b  -  u  <  tol2)  {  d  =  tol2;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  }  else  {  if  (x  <  =  a)  {  if  (a  <  tol1  ||  b  -  u  <  tol2)  {  d  =  tol2;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    *    d;    u  =  m  *  d;  }  else  {  if  (x  <  =  a)  {  if  (a  <  tol1  ||  b  -  u  <  tol2)  {  d  =  tol2;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
1788	[BUG]  [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  }  else  {  if  (x  <  =  a)  {  if  (a  <  tol2  ||  b  -  u  <  tol1)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  *  d;  u  =  m  *  d;  }  else  {  if  (x  <  =  a)  {  if  (a  <  tol2  ||  b  -  u  <  tol1)  {  d  =  tol1;  }  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    *    d;    u  =  m  *  d;  }  else  {  if  (x  <  =  a)  {  if  (a  <  tol2  ||  b  -  u  <  tol1)  {  d  =  tol1;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
1789	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  x;  u  =  m  +  x;	  u    =    d    +    x;    u    =    m    +    x;    	compilable	  [FE]  AssertionError  	213	5	replace
1790	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  m  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  m  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  x;  u  =  m  +  x;	  u    =    d    +    x;    u    =    m    +    x;    	compilable	  [FE]  AssertionError  	213	5	replace
1791	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  m;  u  =  m  +  d;	  u    =    m    +    d;    u    =    m    +    d);    	compilable	  [FE]  AssertionError  	189	4	replace
1792	[BUG]  [BUGGY]  u  =  d  +  m;  u  =  m  +  d;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  u  =  m  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  m;  u  =  m  +  d;	  u    =    m    +    d;    u    =    m    +    d);    	compilable	  [FE]  AssertionError  	189	4	replace
1793	[BUG]  [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  u  =  m  +  d;  u  =  tol1)  +  d;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    m    +    d;    u  =  tol1  +  d;  u  =  m  +  d;  u  =  tol1)  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        m        +        d;        u    =    tol1    +    d;    u  =  m  +  d;  u  =  tol1)  +  d;	  	non-compiled	[CE]  ';'  expected	185	None	add
1794	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    r  =  m  +  d;  d  =  p  +  d;  r  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        +        d;        r    =    m    +    d;    d  =  p  +  d;  r  =  m  +  d;	  	compilable	  [FE]  AssertionError  	204	5	add
1795	[BUG]  [BUGGY]          d    =    m    +    d;    r  =  m  +  d;  d  =  p  +  d;  r  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    +    d;    r  =  m  +  d;  d  =  p  +  d;  r  =  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        +        d;        r    =    m    +    d;    d  =  p  +  d;  r  =  m  +  d;	  	compilable	  [FE]  AssertionError  	204	5	add
1796	[BUG]  [BUGGY]  u    =    a    +    d;    u  =  b  +  d;  u  =  A  +  d;  u  =  b  +  d;  [CE]  cannot  find  symbol  A  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    a    +    d;    u  =  b  +  d;  u  =  A  +  d;  u  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        a        +        d;        u    =    b    +    d;    u  =  A  +  d;  u  =  b  +  d;	  	non-compiled	[CE]  cannot  find  symbol  A	84	None	add
1797	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =   "b  +  d;  [CE]  unclosed  string  literal  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =   "b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    b    +    d;    u  =  q  +  d;  u  =   "b  +  d;	  	non-compiled	[CE]  unclosed  string  literal	41	None	add
1798	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  (b  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u        =        q        +        d;        u    =    b    +    d;    u  =  q  +  d;  u  =  (b  +  d);	  	compilable	  [FE]  AssertionError  	41	4	add
1799	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  (b  +  d);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  (b  +  d);  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    b    +    d;    u  =  q  +  d;  u  =  (b  +  d);	  	compilable	  [FE]  AssertionError  	41	4	add
1800	[BUG]  [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  B  +  d;  [CE]  cannot  find  symbol  B  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u    =    q    +    d;    u  =  b  +  d;  u  =  q  +  d;  u  =  B  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u        =        q        +        d;        u    =    b    +    d;    u  =  q  +  d;  u  =  B  +  d;	  	non-compiled	[CE]  cannot  find  symbol  B	41	None	add
1801	[BUG]  [BUGGY]  u  =  d  +  r;  int  u  =  d  +  r;  [CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  r;  int  u  =  d  +  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    r;    int  u  =  d  +  r;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	150	None	add
1802	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  *  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  /  q;  d  =  p  *  q  +  m;	  	compilable	  [FE]  AssertionError  	117	5	add
1803	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  *  q  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  *  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  /  q;  d  =  p  *  q  +  m;	  	compilable	  [FE]  AssertionError  	117	5	add
1804	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  /  q  +  del;  [CE]  cannot  find  symbol  del  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  /  q;  d  =  p  /  q  +  del;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  /  q;  d  =  p  /  q  +  del;	  	non-compiled	[CE]  cannot  find  symbol  del	117	None	add
1805	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  *  q;  d  =  p  /  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  *  q;  d  =  p  /  q  +  m;	  	compilable	  [FE]  AssertionError  	117	5	add
1806	[BUG]  [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  *  q;  d  =  p  /  q  +  m;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    p    /    q;    d  =  p  /  q  +  m;  d  =  p  *  q;  d  =  p  /  q  +  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        p        /        q;        d    =    p    /    q    +    m;    d  =  p  *  q;  d  =  p  /  q  +  m;	  	compilable	  [FE]  AssertionError  	117	5	add
1807	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  +  q;  d  =  m  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	                d        =        m        /        q;        d    =    m    %    q;    d  =  m  +  q;  d  =  m  %  q;	  	compilable	  [FE]  AssertionError  	124	5	add
1808	[BUG]  [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  +  q;  d  =  m  %  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]          d    =    m    /    q;    d  =  m  %  q;  d  =  m  +  q;  d  =  m  %  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	                d        =        m        /        q;        d    =    m    %    q;    d  =  m  +  q;  d  =  m  %  q;	  	compilable	  [FE]  AssertionError  	124	5	add
1809	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  x;  u  =  r  +  x;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	6	replace
1810	[BUG]  [BUGGY]  u  =  d  *  x;  u  =  r  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  x;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  x;  u  =  r  +  x;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	6	replace
1811	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  w;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  w;  u  =  r  +  x;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	6	replace
1812	[BUG]  [BUGGY]  u  =  d  +  w;  u  =  r  +  x;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  w;  u  =  r  +  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  w;  u  =  r  +  x;	  u    =    d    +    x;    u    =    r    +    x;    	compilable	  [FE]  AssertionError  	22	6	replace
1813	[BUG]  [BUGGY]  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1814	[BUG]  [BUGGY]  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&	  u    =    m    +    d;    u    =    m    +    d;    this.isMinimum    =    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    isMinim    &&    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1815	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  q;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  q;  u  =  d  +  q;	  u    =    d    +    x;    u    =    d    +    q;    	compilable	  [FE]  AssertionError  	20	5	replace
1816	[BUG]  [BUGGY]  u  =  d  *  q;  u  =  d  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  q;  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  q;  u  =  d  +  q;	  u    =    d    +    x;    u    =    d    +    q;    	compilable	  [FE]  AssertionError  	20	5	replace
1817	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  q;  u  =  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  q;  u  =  d  *  q;	  u    =    d    +    x;    u    =    d    +    q;    	compilable	  [FE]  AssertionError  	20	5	replace
1818	[BUG]  [BUGGY]  u  =  d  *  q;  u  =  d  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  q;  u  =  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  q;  u  =  d  *  q;	  u    =    d    +    x;    u    =    d    +    q;    	compilable	  [FE]  AssertionError  	20	5	replace
1819	[BUG]  [BUGGY]  u  =  a  +  d;  U  =  b  +  d;  [CE]  cannot  find  symbol  U  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  d;  U  =  b  +  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  d;  U  =  b  +  d;	  u    =    a    +    d;    U    =    a    +    d;    	non-compiled	[CE]  cannot  find  symbol  U	89	None	replace
1820	[BUG]  [BUGGY]  if(x  <  min)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  min)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  min)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	  if(x    <    a)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	184	None	replace
1821	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  q  /  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d    =    q    /    m;    d  =  q  /  m  +  d;	  	compilable	  [FE]  AssertionError  	208	4	add
1822	[BUG]  [BUGGY]  d  =  q  /  m;  d  =  q  /  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  m;  d  =  q  /  m  +  d;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d    =    q    /    m;    d  =  q  /  m  +  d;	  	compilable	  [FE]  AssertionError  	208	4	add
