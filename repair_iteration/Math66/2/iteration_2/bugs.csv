bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  /  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    /    m;    d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	9	5	add
2	[BUG]  [BUGGY]      d  =  p  /  m;  d  =  p  /  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  /  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    m;    d  =  p  /  m;	  	compilable	  [FE]  AssertionError  	9	5	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  /  m  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    /    m;    d  =  p  /  m  +  d;	  	compilable	  [FE]  AssertionError  	9	5	add
4	[BUG]  [BUGGY]      d  =  p  /  m;  d  =  p  /  m  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  /  m  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    m;    d  =  p  /  m  +  d;	  	compilable	  [FE]  AssertionError  	9	5	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  %  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    /    m;    d  =  p  %  m;	  	compilable	  [FE]  AssertionError  	9	5	add
6	[BUG]  [BUGGY]      d  =  p  /  m;  d  =  p  %  m;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  %  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    m;    d  =  p  %  m;	  	compilable	  [FE]  AssertionError  	9	5	add
7	[BUG]  [BUGGY]      d  =  p  /  m;  d  =  p  /  m);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  /  m);  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    m;    d  =  p  /  m);	  	non-compiled	[CE]  ';'  expected	9	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  /  m  +  a;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    /    m;    d  =  p  /  m  +  a;	  	compilable	  [FE]  AssertionError  	9	5	add
9	[BUG]  [BUGGY]      d  =  p  /  m;  d  =  p  /  m  +  a;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  /  m  +  a;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    m;    d  =  p  /  m  +  a;	  	compilable	  [FE]  AssertionError  	9	5	add
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  u;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  u;	  u    =    u    +    d;    	compilable	  [FE]  AssertionError  	18	5	replace
11	[BUG]  [BUGGY]  u  =  d  +  u;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  u;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  u;	  u    =    u    +    d;    	compilable	  [FE]  AssertionError  	18	5	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  r  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  r  +  d;	  u    =    u    +    d;    	compilable	  [FE]  AssertionError  	18	5	replace
13	[BUG]  [BUGGY]  u  =  r  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  r  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  r  +  d;	  u    =    u    +    d;    	compilable	  [FE]  AssertionError  	18	5	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  d  +  x;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    x;    u  =  d  +  x;	  	compilable	  [FE]  AssertionError  	11	4	add
15	[BUG]  [BUGGY]  u  =  d  +  x;  u  =  d  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  d  +  x;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    x;    u  =  d  +  x;	  	compilable	  [FE]  AssertionError  	11	4	add
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  a  +  x;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    x;    u  =  a  +  x;	  	compilable	  [FE]  AssertionError  	11	4	add
17	[BUG]  [BUGGY]  u  =  d  +  x;  u  =  a  +  x;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  a  +  x;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    x;    u  =  a  +  x;	  	compilable	  [FE]  AssertionError  	11	4	add
18	[BUG]  [BUGGY]  u  =  d  +  x;  u  =  d  +  x);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  d  +  x);  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    x;    u  =  d  +  x);	  	non-compiled	[CE]  ';'  expected	11	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  d  +  q;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    x;    u  =  d  +  q;	  	compilable	  [FE]  AssertionError  	11	4	add
20	[BUG]  [BUGGY]  u  =  d  +  x;  u  =  d  +  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  d  +  q;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    x;    u  =  d  +  q;	  	compilable	  [FE]  AssertionError  	11	4	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  r  +  x;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    x;    u  =  r  +  x;	  	compilable	  [FE]  AssertionError  	11	4	add
22	[BUG]  [BUGGY]  u  =  d  +  x;  u  =  r  +  x;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  r  +  x;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    x;    u  =  r  +  x;	  	compilable	  [FE]  AssertionError  	11	4	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  q;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  q;	  u    =    q    +    d;    	compilable	  [FE]  AssertionError  	20	5	replace
24	[BUG]  [BUGGY]  u  =  d  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  q;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  q;	  u    =    q    +    d;    	compilable	  [FE]  AssertionError  	20	5	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  *  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  q  *  d;	  u    =    q    +    d;    	compilable	  [FE]  AssertionError  	20	5	replace
26	[BUG]  [BUGGY]  u  =  q  *  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  *  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  q  *  d;	  u    =    q    +    d;    	compilable	  [FE]  AssertionError  	20	5	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  r;	      d    =    p    /    q;    	compilable	  [FE]  AssertionError  	2	5	replace
28	[BUG]  [BUGGY]  d  =  p  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  r;	      d    =    p    /    q;    	compilable	  [FE]  AssertionError  	2	5	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  /  q  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  +  1;	      d    =    p    /    q;    	compilable	  [FE]  AssertionError  	2	5	replace
30	[BUG]  [BUGGY]  d  =  p  /  q  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  /  q  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  +  1;	      d    =    p    /    q;    	compilable	  [FE]  AssertionError  	2	5	replace
31	[BUG]  [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
32	[BUG]  [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
33	[BUG]  [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
34	[BUG]  [BUGGY]  if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    q    +    d;    u  =  q  +  d;	  	compilable	  [FE]  AssertionError  	19	4	add
36	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    d;    u  =  q  +  d;	  	compilable	  [FE]  AssertionError  	19	4	add
37	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  q  +  d);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  q  +  d);  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    d;    u  =  q  +  d);	  	non-compiled	[CE]  ';'  expected	19	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  p  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    q    +    d;    u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	19	4	add
39	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  p  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  p  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    d;    u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	19	4	add
40	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  k  +  d;  [CE]  cannot  find  symbol  k  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  k  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    d;    u  =  k  +  d;	  	non-compiled	[CE]  cannot  find  symbol  k	19	None	add
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  b  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    q    +    d;    u  =  b  +  d;	  	compilable	  [FE]  AssertionError  	19	4	add
42	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  b  +  d;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  b  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    d;    u  =  b  +  d;	  	compilable	  [FE]  AssertionError  	19	4	add
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  m;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  m;	  u    =    m    +    d;    	compilable	  [FE]  AssertionError  	16	4	replace
44	[BUG]  [BUGGY]  u  =  d  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  m;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  m;	  u    =    m    +    d;    	compilable	  [FE]  AssertionError  	16	4	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  *  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  *  d;	  u    =    m    +    d;    	compilable	  [FE]  AssertionError  	16	5	replace
46	[BUG]  [BUGGY]  u  =  m  *  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  *  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  *  d;	  u    =    m    +    d;    	compilable	  [FE]  AssertionError  	16	5	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  *  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  m;	      d    =    p    /    m;    	compilable	  [FE]  AssertionError  	10	5	replace
48	[BUG]  [BUGGY]  d  =  p  *  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  *  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  m;	      d    =    p    /    m;    	compilable	  [FE]  AssertionError  	10	5	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  /  m  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  m  +  1;	      d    =    p    /    m;    	compilable	  [FE]  AssertionError  	10	5	replace
50	[BUG]  [BUGGY]  d  =  p  /  m  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  /  m  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  m  +  1;	      d    =    p    /    m;    	compilable	  [FE]  AssertionError  	10	5	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  *  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  r;	      d    =    p    *    q;    	compilable	  [FE]  AssertionError  	4	5	replace
52	[BUG]  [BUGGY]  d  =  p  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  *  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  r;	      d    =    p    *    q;    	compilable	  [FE]  AssertionError  	4	5	replace
53	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  *  q  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  q  +  1;	      d    =    p    *    q;    	compilable	timeout	4	1	replace
54	[BUG]  [BUGGY]  d  =  p  *  q  +  1;  timeout  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  *  q  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  +  1;	      d    =    p    *    q;    	compilable	timeout	4	1	replace
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  d  =  p  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    *    q;    d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	3	5	add
56	[BUG]  [BUGGY]      d  =  p  *  q;  d  =  p  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  d  =  p  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    *    q;    d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	3	5	add
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  d  =  p  *  q  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    *    q;    d  =  p  *  q  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
58	[BUG]  [BUGGY]      d  =  p  *  q;  d  =  p  *  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  d  =  p  *  q  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    *    q;    d  =  p  *  q  +  d;	  	compilable	  [FE]  AssertionError  	3	5	add
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  d  =  p  *  q  +  a;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    *    q;    d  =  p  *  q  +  a;	  	compilable	  [FE]  AssertionError  	3	5	add
60	[BUG]  [BUGGY]      d  =  p  *  q;  d  =  p  *  q  +  a;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  d  =  p  *  q  +  a;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    *    q;    d  =  p  *  q  +  a;	  	compilable	  [FE]  AssertionError  	3	5	add
61	[BUG]  [BUGGY]      d  =  p  *  q;  d  =  p  *  q.tol1;  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  d  =  p  *  q.tol1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    *    q;    d  =  p  *  q.tol1;	  	non-compiled	[CE]  double  cannot  be  dereferenced	3	None	add
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  d  =  p  *  q  +  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    *    q;    d  =  p  *  q  +  m;	  	compilable	  [FE]  AssertionError  	3	5	add
63	[BUG]  [BUGGY]      d  =  p  *  q;  d  =  p  *  q  +  m;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  d  =  p  *  q  +  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    *    q;    d  =  p  *  q  +  m;	  	compilable	  [FE]  AssertionError  	3	5	add
64	[BUG]  [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	replace
65	[BUG]  [BUGGY]  if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	replace
66	[BUG]  [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	replace
67	[BUG]  [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  -  x  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	25	5	replace
69	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	25	5	replace
70	[BUG]  [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
71	[BUG]  [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *  (a  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	22	None	replace
72	[BUG]  [BUGGY]  if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  d  =  m  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    m    +    d;    d  =  m  +  d;	  	compilable	  [FE]  AssertionError  	7	5	add
74	[BUG]  [BUGGY]      d  =  m  +  d;  d  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  d  =  m  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    +    d;    d  =  m  +  d;	  	compilable	  [FE]  AssertionError  	7	5	add
75	[BUG]  [BUGGY]      d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol1;  }  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol1;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    +    d;    if  (m  +  d)  {  d  =  m  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol1;  }	  	non-compiled	[CE]  incompatible  types	7	None	add
76	[BUG]  [BUGGY]      d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  tol1;  }  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  tol1;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    +    d;    if  (m  +  d)  {  d  =  m  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  tol1;  }	  	non-compiled	[CE]  incompatible  types	7	None	add
77	[BUG]  [BUGGY]      d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol2;  }  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol2;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    +    d;    if  (m  +  d)  {  d  =  m  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol2)  {  d  =  tol2;  }	  	non-compiled	[CE]  incompatible  types	7	None	add
78	[BUG]  [BUGGY]      d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  tol2;  }  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  if  (m  +  d)  {  d  =  m  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  tol2;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    +    d;    if  (m  +  d)  {  d  =  m  +  d;  }  else  if(i  >  a  ||  b  -  u  <  tol1)  {  d  =  tol2;  }	  	non-compiled	[CE]  incompatible  types	7	None	add
79	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
80	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
81	[BUG]  [BUGGY]  if(r  <  a  &&  p  <  a  &&  p  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(r  <  a  &&  p  <  a  &&  p  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  <  a  &&  p  <  a  &&  p  <  a  &&  x  <  =  0.5)  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  u  =  a  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    a    +    d;    u  =  a  +  d;	  	compilable	  [FE]  AssertionError  	29	4	add
83	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  a  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  u  =  a  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    d;    u  =  a  +  d;	  	compilable	  [FE]  AssertionError  	29	4	add
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  u  =  b  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    a    +    d;    u  =  b  +  d;	  	compilable	  [FE]  AssertionError  	29	4	add
85	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  b  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  u  =  b  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    d;    u  =  b  +  d;	  	compilable	  [FE]  AssertionError  	29	4	add
86	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  a  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  u  =  a  +  d);  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    d;    u  =  a  +  d);	  	non-compiled	[CE]  ';'  expected	29	None	add
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  u  =  p  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    a    +    d;    u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	29	4	add
88	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  p  +  d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  u  =  p  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    d;    u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	29	4	add
89	[BUG]  [BUGGY]  u  =  a  +  d;  U  =  a  +  d;  [CE]  cannot  find  symbol  U  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  U  =  a  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    d;    U  =  a  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	29	None	add
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  d  +  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  d  +  m;	      d    =    m    +    d;    	compilable	  [FE]  AssertionError  	8	5	replace
91	[BUG]  [BUGGY]  d  =  d  +  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  d  +  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  d  +  m;	      d    =    m    +    d;    	compilable	  [FE]  AssertionError  	8	5	replace
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  m  *  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  *  d;	      d    =    m    +    d;    	compilable	  [FE]  AssertionError  	8	5	replace
93	[BUG]  [BUGGY]  d  =  m  *  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  m  *  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  *  d;	      d    =    m    +    d;    	compilable	  [FE]  AssertionError  	8	5	replace
94	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  +  d;	      d    =    m    +    d;    	compilable	  [FE]  AssertionError  	8	5	replace
95	[BUG]  [BUGGY]  d  =  p  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  +  d;	      d    =    m    +    d;    	compilable	  [FE]  AssertionError  	8	5	replace
96	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
97	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
98	[BUG]  [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(p  <  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  <  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
99	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    p    +    d;    u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	13	4	add
100	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d;    u  =  p  +  d;	  	compilable	  [FE]  AssertionError  	13	4	add
101	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d;    u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;	  	non-compiled	[CE]  ';'  expected	13	None	add
102	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d;    u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;	  	non-compiled	[CE]  ';'  expected	13	None	add
103	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d;    u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  -tol1;  }	  	non-compiled	[CE]  ';'  expected	13	None	add
104	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d;    u  =  p  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim  ||  isMinim)  {  d  =  tol1;	  	non-compiled	[CE]  ';'  expected	13	None	add
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  d;  u  =  u  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    u    +    d;    u  =  u  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
106	[BUG]  [BUGGY]  u  =  u  +  d;  u  =  u  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  d;  u  =  u  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    d;    u  =  u  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
107	[BUG]  [BUGGY]  u  =  u  +  d;  u  =  u  +  d);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  d;  u  =  u  +  d);  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    d;    u  =  u  +  d);	  	non-compiled	[CE]  ';'  expected	17	None	add
108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  d;  u  =  a  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    u    +    d;    u  =  a  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
109	[BUG]  [BUGGY]  u  =  u  +  d;  u  =  a  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  d;  u  =  a  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    d;    u  =  a  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
110	[BUG]  [BUGGY]  u  =  u  +  d;  U  =  u  +  d;  [CE]  cannot  find  symbol  U  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  d;  U  =  u  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    d;    U  =  u  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	17	None	add
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    /    q;    d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	1	4	add
112	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    q;    d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	1	4	add
113	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  %  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    /    q;    d  =  p  %  q;	  	compilable	  [FE]  AssertionError  	1	5	add
114	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  %  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  %  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    q;    d  =  p  %  q;	  	compilable	  [FE]  AssertionError  	1	5	add
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    /    q;    d  =  p  /  q  +  d;	  	compilable	  [FE]  AssertionError  	1	5	add
116	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    q;    d  =  p  /  q  +  d;	  	compilable	  [FE]  AssertionError  	1	5	add
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    /    q;    d  =  p  /  q  +  m;	  	compilable	  [FE]  AssertionError  	1	5	add
118	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  m;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    q;    d  =  p  /  q  +  m;	  	compilable	  [FE]  AssertionError  	1	5	add
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  a;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    /    q;    d  =  p  /  q  +  a;	  	compilable	  [FE]  AssertionError  	1	5	add
120	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  a;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  a;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    q;    d  =  p  /  q  +  a;	  	compilable	  [FE]  AssertionError  	1	5	add
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  /  q;  d  =  m  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    m    /    q;    d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	5	5	add
122	[BUG]  [BUGGY]      d  =  m  /  q;  d  =  m  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  /  q;  d  =  m  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    /    q;    d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	5	5	add
123	[BUG]  [BUGGY]      d  =  m  /  q;  d  =  m  /  q);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  /  q;  d  =  m  /  q);  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    /    q;    d  =  m  /  q);	  	non-compiled	[CE]  ';'  expected	5	None	add
124	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  /  q;  d  =  m  %  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    m    /    q;    d  =  m  %  q;	  	compilable	  [FE]  AssertionError  	5	5	add
125	[BUG]  [BUGGY]      d  =  m  /  q;  d  =  m  %  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  /  q;  d  =  m  %  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    /    q;    d  =  m  %  q;	  	compilable	  [FE]  AssertionError  	5	5	add
126	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  /  q;  d  =  m  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    m    /    q;    d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	5	5	add
127	[BUG]  [BUGGY]      d  =  m  /  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  /  q;  d  =  m  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    /    q;    d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	5	5	add
128	[BUG]  [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
129	[BUG]  [BUGGY]  if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(m  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
130	[BUG]  [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	21	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  a;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  a;	  u    =    a    +    d;    	compilable	  [FE]  AssertionError  	30	5	replace
132	[BUG]  [BUGGY]  u  =  d  +  a;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  a;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  a;	  u    =    a    +    d;    	compilable	  [FE]  AssertionError  	30	5	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  r;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  +  r;	  u    =    a    +    d;    	compilable	  [FE]  AssertionError  	30	5	replace
134	[BUG]  [BUGGY]  u  =  a  +  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  r;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  +  r;	  u    =    a    +    d;    	compilable	  [FE]  AssertionError  	30	5	replace
135	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  *  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  a  *  d;	  u    =    a    +    d;    	compilable	  [FE]  AssertionError  	30	5	replace
136	[BUG]  [BUGGY]  u  =  a  *  d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  *  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  a  *  d;	  u    =    a    +    d;    	compilable	  [FE]  AssertionError  	30	5	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  /  q  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  +  d;	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	compilable	  [FE]  AssertionError  	27	5	replace
138	[BUG]  [BUGGY]  d  =  p  /  q  +  d;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  /  q  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  +  d;	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	compilable	  [FE]  AssertionError  	27	5	replace
139	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
140	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  x))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  x))  {  d  =  p  /  q  +  d;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  x))  {  d  =  p  /  q  +  d;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
141	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  m))  {  d  =  p  /  q  +  d;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
142	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    m    +    d;    u  =  m  +  d;	  	compilable	  [FE]  AssertionError  	15	4	add
143	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    u  =  m  +  d;	  	compilable	  [FE]  AssertionError  	15	4	add
144	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  is	  	non-compiled	[CE]  ';'  expected	15	None	add
145	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [CE]  cannot  find  symbol  isMinimum  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	15	None	add
146	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &  [CE]  cannot  find  symbol  isMinimum  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	15	None	add
147	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMinim  &&  isMaximum)  {  d  =  p  /  q;	  	non-compiled	[CE]  ';'  expected	15	None	add
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  *  x;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  *  x;	  u    =    d    +    x;    	compilable	  [FE]  AssertionError  	12	5	replace
149	[BUG]  [BUGGY]  u  =  d  *  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  *  x;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  *  x;	  u    =    d    +    x;    	compilable	  [FE]  AssertionError  	12	5	replace
150	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  r;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  r;	  u    =    d    +    x;    	compilable	  [FE]  AssertionError  	12	5	replace
151	[BUG]  [BUGGY]  u  =  d  +  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  r;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  r;	  u    =    d    +    x;    	compilable	  [FE]  AssertionError  	12	5	replace
152	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  tol1;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  tol1;	  u    =    d    +    x;    	compilable	  [FE]  AssertionError  	12	5	replace
153	[BUG]  [BUGGY]  u  =  d  +  tol1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  tol1;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  tol1;	  u    =    d    +    x;    	compilable	  [FE]  AssertionError  	12	5	replace
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  tol2;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  tol2;	  u    =    d    +    x;    	compilable	  [FE]  AssertionError  	12	5	replace
155	[BUG]  [BUGGY]  u  =  d  +  tol2;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  tol2;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  tol2;	  u    =    d    +    x;    	compilable	  [FE]  AssertionError  	12	5	replace
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  *  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  *  d;	  u    =    p    +    d;    	compilable	  [FE]  AssertionError  	14	5	replace
157	[BUG]  [BUGGY]  u  =  p  *  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  *  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  *  d;	  u    =    p    +    d;    	compilable	  [FE]  AssertionError  	14	5	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  r;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  r;	  u    =    p    +    d;    	compilable	  [FE]  AssertionError  	14	5	replace
159	[BUG]  [BUGGY]  u  =  p  +  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  r;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  r;	  u    =    p    +    d;    	compilable	  [FE]  AssertionError  	14	5	replace
160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  p;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  d  +  p;	  u    =    p    +    d;    	compilable	  [FE]  AssertionError  	14	5	replace
161	[BUG]  [BUGGY]  u  =  d  +  p;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  p;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  d  +  p;	  u    =    p    +    d;    	compilable	  [FE]  AssertionError  	14	5	replace
162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  q;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  q;	  u    =    p    +    d;    	compilable	  [FE]  AssertionError  	14	5	replace
163	[BUG]  [BUGGY]  u  =  p  +  q;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  q;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  q;	  u    =    p    +    d;    	compilable	  [FE]  AssertionError  	14	5	replace
164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  m  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  /  r;	      d    =    m    /    q;    	compilable	  [FE]  AssertionError  	6	5	replace
165	[BUG]  [BUGGY]  d  =  m  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  m  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  /  r;	      d    =    m    /    q;    	compilable	  [FE]  AssertionError  	6	5	replace
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  r  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  r  /  q;	      d    =    m    /    q;    	compilable	  [FE]  AssertionError  	6	5	replace
167	[BUG]  [BUGGY]  d  =  r  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  r  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  r  /  q;	      d    =    m    /    q;    	compilable	  [FE]  AssertionError  	6	5	replace
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  m  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  m  *  q;	      d    =    m    /    q;    	compilable	  [FE]  AssertionError  	6	5	replace
169	[BUG]  [BUGGY]  d  =  m  *  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  m  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  m  *  q;	      d    =    m    /    q;    	compilable	  [FE]  AssertionError  	6	5	replace
170	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  u  =  m  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    a    +    d;    u  =  m  +  d;	  	compilable	  [FE]  AssertionError  	29	4	add
171	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  m  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  u  =  m  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    d;    u  =  m  +  d;	  	compilable	  [FE]  AssertionError  	29	4	add
172	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d  *  q;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  p  +  d  *  q;	  u    =    p    +    d;    	compilable	  [FE]  AssertionError  	14	5	replace
173	[BUG]  [BUGGY]  u  =  p  +  d  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d  *  q;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  p  +  d  *  q;	  u    =    p    +    d;    	compilable	  [FE]  AssertionError  	14	5	replace
174	[BUG]  [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  a  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
175	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d;    u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  ';'  expected	13	None	add
176	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d;    u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /	  	non-compiled	[CE]  ';'  expected	13	None	add
177	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d;    u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  	  	non-compiled	[CE]  ';'  expected	13	None	add
178	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  *  q  +  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  *  q  +  r;	      d    =    p    *    q;    	compilable	  [FE]  AssertionError  	4	5	replace
179	[BUG]  [BUGGY]  d  =  p  *  q  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  *  q  +  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  *  q  +  r;	      d    =    p    *    q;    	compilable	  [FE]  AssertionError  	4	5	replace
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  tol1;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  u  +  tol1;	  u    =    u    +    d;    	compilable	  [FE]  AssertionError  	18	5	replace
181	[BUG]  [BUGGY]  u  =  u  +  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  tol1;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  u  +  tol1;	  u    =    u    +    d;    	compilable	  [FE]  AssertionError  	18	5	replace
182	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  tol2;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  u  +  tol2;	  u    =    u    +    d;    	compilable	  [FE]  AssertionError  	18	5	replace
183	[BUG]  [BUGGY]  u  =  u  +  tol2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  tol2;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  u  +  tol2;	  u    =    u    +    d;    	compilable	  [FE]  AssertionError  	18	5	replace
184	[BUG]  [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
185	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  tol1  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    m    +    d;    u  =  tol1  +  d;	  	compilable	  [FE]  AssertionError  	15	4	add
186	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  tol1  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  tol1  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    u  =  tol1  +  d;	  	compilable	  [FE]  AssertionError  	15	4	add
187	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  m  =  m  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    m    +    d;    m  =  m  +  d;	  	compilable	  [FE]  AssertionError  	15	4	add
188	[BUG]  [BUGGY]  u  =  m  +  d;  m  =  m  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  m  =  m  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    m  =  m  +  d;	  	compilable	  [FE]  AssertionError  	15	4	add
189	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  m  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  m  +  d);  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    u  =  m  +  d);	  	non-compiled	[CE]  ';'  expected	15	None	add
190	[BUG]  [BUGGY]  u  =  m  +  d;  U  =  m  +  d;  [CE]  cannot  find  symbol  U  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  U  =  m  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    U  =  m  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	15	None	add
191	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  r  =  p  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    *    q;    r  =  p  *  q;	  	compilable	  [FE]  AssertionError  	3	5	add
192	[BUG]  [BUGGY]      d  =  p  *  q;  r  =  p  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  r  =  p  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    *    q;    r  =  p  *  q;	  	compilable	  [FE]  AssertionError  	3	5	add
193	[BUG]  [BUGGY]      d  =  p  *  q;  d  =  p  *  qua;  [CE]  cannot  find  symbol  qua  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  d  =  p  *  qua;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    *    q;    d  =  p  *  qua;	  	non-compiled	[CE]  cannot  find  symbol  qua	3	None	add
194	[BUG]  [BUGGY]      d  =  p  *  q;  dev  =  p  *  q;  [CE]  cannot  find  symbol  dev  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  *  q;  dev  =  p  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    *    q;    dev  =  p  *  q;	  	non-compiled	[CE]  cannot  find  symbol  dev	3	None	add
195	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  /  q  *  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  p  /  q  *  r;	      d    =    p    /    q;    	compilable	  [FE]  AssertionError  	2	5	replace
196	[BUG]  [BUGGY]  d  =  p  /  q  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  /  q  *  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  q  *  r;	      d    =    p    /    q;    	compilable	  [FE]  AssertionError  	2	5	replace
197	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  d;  u  =  tol1  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    u    +    d;    u  =  tol1  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
198	[BUG]  [BUGGY]  u  =  u  +  d;  u  =  tol1  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  d;  u  =  tol1  +  d;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    d;    u  =  tol1  +  d;	  	compilable	  [FE]  AssertionError  	17	4	add
199	[BUG]  [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
200	[BUG]  [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(r  >  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
201	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  /  q;  d  =  m  +  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    m    /    q;    d  =  m  +  q;	  	compilable	  [FE]  AssertionError  	5	5	add
202	[BUG]  [BUGGY]      d  =  m  /  q;  d  =  m  +  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  /  q;  d  =  m  +  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    /    q;    d  =  m  +  q;	  	compilable	  [FE]  AssertionError  	5	5	add
203	[BUG]  [BUGGY]      d  =  m  +  d;  d  =  m  +  d);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  d  =  m  +  d);  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    +    d;    d  =  m  +  d);	  	non-compiled	[CE]  ';'  expected	7	None	add
204	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  r  =  m  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    m    +    d;    r  =  m  +  d;	  	compilable	  [FE]  AssertionError  	7	5	add
205	[BUG]  [BUGGY]      d  =  m  +  d;  r  =  m  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  r  =  m  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    +    d;    r  =  m  +  d;	  	compilable	  [FE]  AssertionError  	7	5	add
206	[BUG]  [BUGGY]      d  =  m  +  d;  dev  =  m  +  d;  [CE]  cannot  find  symbol  dev  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  dev  =  m  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    +    d;    dev  =  m  +  d;	  	non-compiled	[CE]  cannot  find  symbol  dev	7	None	add
207	[BUG]  [BUGGY]      d  =  m  +  d;  (d  =  m  +  d;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  (d  =  m  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    +    d;    (d  =  m  +  d;	  	non-compiled	[CE]  ')'  expected	7	None	add
208	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  q  /  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  q  /  m;	      d    =    m    /    q;    	compilable	  [FE]  AssertionError  	6	5	replace
209	[BUG]  [BUGGY]  d  =  q  /  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  q  /  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  q  /  m;	      d    =    m    /    q;    	compilable	  [FE]  AssertionError  	6	5	replace
210	[BUG]  [BUGGY]  d  =  p  /  g;  [CE]  cannot  find  symbol  g  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  p  /  g;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  p  /  g;	      d    =    p    /    m;    	non-compiled	[CE]  cannot  find  symbol  g	10	None	replace
211	[BUG]  [BUGGY]      d  =  p  /  m;  d  =  p  3/  m;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  3/  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    m;    d  =  p  3/  m;	  	non-compiled	[CE]  ';'  expected	9	None	add
212	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  m  +  x;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    x;    u  =  m  +  x;	  	compilable	  [FE]  AssertionError  	11	4	add
213	[BUG]  [BUGGY]  u  =  d  +  x;  u  =  m  +  x;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  m  +  x;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    x;    u  =  m  +  x;	  	compilable	  [FE]  AssertionError  	11	4	add
214	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  p  +  x;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u    =    d    +    x;    u  =  p  +  x;	  	compilable	  [FE]  AssertionError  	11	4	add
215	[BUG]  [BUGGY]  u  =  d  +  x;  u  =  p  +  x;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  d  +  x;  u  =  p  +  x;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    d    +    x;    u  =  p  +  x;	  	compilable	  [FE]  AssertionError  	11	4	add
216	[BUG]  [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
217	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	26	5	replace
218	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  0.5)  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	compilable	  [FE]  AssertionError  	26	5	replace
219	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  q  <  =  0.5)  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
220	[BUG]  [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  <  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  0.5)  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  tol1;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  m  +  tol1;	  u    =    m    +    d;    	compilable	  [FE]  AssertionError  	16	4	replace
222	[BUG]  [BUGGY]  u  =  m  +  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  tol1;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  m  +  tol1;	  u    =    m    +    d;    	compilable	  [FE]  AssertionError  	16	4	replace
223	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q  +  d;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
224	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q  +  d;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q  +  d;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q    +    d;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  r;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	u  =  q  +  r;	  u    =    q    +    d;    	compilable	  [FE]  AssertionError  	20	5	replace
226	[BUG]  [BUGGY]  u  =  q  +  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  r;  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u  =  q  +  r;	  u    =    q    +    d;    	compilable	  [FE]  AssertionError  	20	5	replace
227	[BUG]  [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(p  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
228	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  r  <  =  Math.abs(1.0  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    r    <    =    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
229	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    d;    u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  not  a  statement	19	None	add
230	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    d;    u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  not  a  statement	19	None	add
231	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    d;    u  =  q  +  d;  this.isMinim  -  a  ||  b  -  u  <  tol1)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  not  a  statement	19	None	add
232	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  x  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  x  +  d;	      d    =    m    +    d;    	compilable	  [FE]  AssertionError  	8	5	replace
233	[BUG]  [BUGGY]  d  =  x  +  d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  x  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  x  +  d;	      d    =    m    +    d;    	compilable	  [FE]  AssertionError  	8	5	replace
234	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    a    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	23	None	replace
235	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  /  m  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    /    m;    d  =  p  /  m  +  1;	  	compilable	  [FE]  AssertionError  	9	5	add
236	[BUG]  [BUGGY]      d  =  p  /  m;  d  =  p  /  m  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  /  m  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    m;    d  =  p  /  m  +  1;	  	compilable	  [FE]  AssertionError  	9	5	add
237	[BUG]  [BUGGY]      d  =  p  /  m;  d  =  p  /  m.;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  m;  d  =  p  /  m.;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    m;    d  =  p  /  m.;	  	non-compiled	[CE]  <identifier>  expected	9	None	add
238	[BUG]  [BUGGY]      d  =  m  /  q;  d  =  m  /  q3;  [CE]  cannot  find  symbol  q3  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  /  q;  d  =  m  /  q3;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    /    q;    d  =  m  /  q3;	  	non-compiled	[CE]  cannot  find  symbol  q3	5	None	add
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	        d    =    p    /    q;    d  =  p  /  q  +  1;	  	compilable	  [FE]  AssertionError  	1	5	add
240	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  /  q  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    q;    d  =  p  /  q  +  1;	  	compilable	  [FE]  AssertionError  	1	5	add
241	[BUG]  [BUGGY]      d  =  p  /  q;  d  =  p  /  q3;  [CE]  cannot  find  symbol  q3  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  p  /  q;  d  =  p  /  q3;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    p    /    q;    d  =  p  /  q3;	  	non-compiled	[CE]  cannot  find  symbol  q3	1	None	add
242	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    d;    u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	29	None	add
243	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    d;    u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  ';'  expected	29	None	add
244	[BUG]  [BUGGY]  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  a  +  d;  u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    a    +    d;    u  =  a  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  t)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	29	None	add
245	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    d;    u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	19	None	add
246	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    d;    u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  ';'  expected	19	None	add
247	[BUG]  [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  q  +  d;  u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    q    +    d;    u  =  q  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  ';'  expected	19	None	add
248	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d;    u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	13	None	add
249	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d;    u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	13	None	add
250	[BUG]  [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  p  +  d;  u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    p    +    d;    u  =  p  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  +  d;  }	  	non-compiled	[CE]  ';'  expected	13	None	add
251	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  b  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	add	d  =  b  /  q;	      d    =    m    /    q;    	compilable	  [FE]  AssertionError  	6	5	replace
252	[BUG]  [BUGGY]  d  =  b  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  d  =  b  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	d  =  b  /  q;	      d    =    m    /    q;    	compilable	  [FE]  AssertionError  	6	5	replace
253	[BUG]  [BUGGY]      d  =  m  +  d;  i  =  m  +  d;  [CE]  cannot  find  symbol  i  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  i  =  m  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    +    d;    i  =  m  +  d;	  	non-compiled	[CE]  cannot  find  symbol  i	7	None	add
254	[BUG]  [BUGGY]      d  =  m  +  d;  d  =  m  +  d.;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]      d  =  m  +  d;  d  =  m  +  d.;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	        d    =    m    +    d;    d  =  m  +  d.;	  	non-compiled	[CE]  <identifier>  expected	7	None	add
255	[BUG]  [BUGGY]  if(d  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(d  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
256	[BUG]  [BUGGY]  if(d  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(d  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  <  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  }	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    b    *    (b    -    x)&&    Math.abs(0.5    *    q    *    r))    {    d    =    p    /    q;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
257	[BUG]  [BUGGY]  if(x  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >=  a)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
258	[BUG]  [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(isMinim)  {  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =	      if(x    >    a    -    r)    {    if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
259	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	15	None	add
260	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	15	None	add
261	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  else  {  d  =  tol2;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  else  {  d  =  tol2;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  else  {  d  =  tol2;  }	  	non-compiled	[CE]  ';'  expected	15	None	add
262	[BUG]  [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  m  +  d;  u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    m    +    d;    u  =  m  +  d;  this.isMinimum  =  isMinim  ||  isMinim  ||  b  -  u  <  tol2)  {  if  (x  <  =  p)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	15	None	add
263	[BUG]  [BUGGY]  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    d;    u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  	non-compiled	[CE]  ';'  expected	17	None	add
264	[BUG]  [BUGGY]  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    d;    u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  ';'  expected	17	None	add
265	[BUG]  [BUGGY]  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    d;    u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  m)  {  d  =  tol1;  }	  	non-compiled	[CE]  ';'  expected	17	None	add
266	[BUG]  [BUGGY]  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  u  =  u  +  d;  u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }  [BUGGY]      if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	u    =    u    +    d;    u  =  u  +  d;  this.isMinimum  =  isMinim  &&  isMinim  &&  isMinim  &&  b  -  u  <  tol2)  {  if  (x  <  =  a)  {  d  =  p  /  q;  }	  	non-compiled	[CE]  ';'  expected	17	None	add
267	[BUG]  [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(d  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  /  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
268	[BUG]  [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;    [BUGGY]  if(x  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	if(x  >  a  &&  p  <  a  &&  b  <  a  &&  d  <  =  0.5)  {  d  =  p  *  q;  }	      if(x    >    a    &&    p    <    a    &&    b    <    a    &&    d    <    =    0.5)    {    d    =    p    /    q;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
