bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t  +  1;  t  =  t  +  1;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	        t    =    t    +    1;    t  =  t  +  1;	  	compilable	  [FE]  AssertionError  	22	7	add
2	[BUG]  [BUGGY]      t  =  t  +  1;  t  =  t  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t  +  1;  t  =  t  +  1;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t    +    1;    t  =  t  +  1;	  	compilable	  [FE]  AssertionError  	22	7	add
3	[BUG]  [BUGGY]      t  =  t  +  1;  t  =  t  +  1;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException(t);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t  +  1;  t  =  t  +  1;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException(t);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t    +    1;    t  =  t  +  1;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException(t);  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
4	[BUG]  [BUGGY]      t  =  t  +  1;  t  =  t  +  1;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t  +  1;  t  =  t  +  1;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException( " ");  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t    +    1;    t  =  t  +  1;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
5	[BUG]  [BUGGY]      t  =  t  +  1;  t  =  t  +  1;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException(t.getMessage());  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t  +  1;  t  =  t  +  1;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException(t.getMessage());  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t    +    1;    t  =  t  +  1;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException(t.getMessage());  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
6	[BUG]  [BUGGY]      t  =  t  +  1;  t  =  t  +  1;  }  else  if(lo  <  mid)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t  +  1;  t  =  t  +  1;  }  else  if(lo  <  mid)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t    +    1;    t  =  t  +  1;  }  else  if(lo  <  mid)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
7	[BUG]  [BUGGY]  t  =  fx.getMask();  [CE]  cannot  find  symbol  fx  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  fx.getMask();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  fx.getMask();	      t    =    t.getMask();    	non-compiled	[CE]  cannot  find  symbol  fx	26	None	replace
8	[BUG]  [BUGGY]  t  =  t.getMask()  +  1;  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  t.getMask()  +  1;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  t.getMask()  +  1;	      t    =    t.getMask();    	non-compiled	[CE]  double  cannot  be  dereferenced	26	None	replace
9	[BUG]  [BUGGY]  t  =  m.getMask();  [CE]  cannot  find  symbol  m  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  m.getMask();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  m.getMask();	      t    =    t.getMask();    	non-compiled	[CE]  cannot  find  symbol  m	26	None	replace
10	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  [Delete]  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	[Delete]	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
11	[BUG]  [BUGGY]  degree  =  Math.max(degree,  hi);  [CE]  cannot  find  symbol  degree  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  degree  =  Math.max(degree,  hi);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	degree  =  Math.max(degree,  hi);	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    	non-compiled	[CE]  cannot  find  symbol  degree	16	None	replace
12	[BUG]  [BUGGY]  degree  =  Math.max(degree,  hi  +  1);  [CE]  cannot  find  symbol  degree  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  degree  =  Math.max(degree,  hi  +  1);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	degree  =  Math.max(degree,  hi  +  1);	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    	non-compiled	[CE]  cannot  find  symbol  degree	16	None	replace
13	[BUG]  [BUGGY]  degree  =  Math.max(degree,  0);  [CE]  cannot  find  symbol  degree  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  degree  =  Math.max(degree,  0);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	degree  =  Math.max(degree,  0);	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    	non-compiled	[CE]  cannot  find  symbol  degree	16	None	replace
14	[BUG]  [BUGGY]  While(mid  <  =  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(mid  <  =  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(mid  <  =  0)  {  throw  new  NotStrictlyPositiveException(mid);  }	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  While(lo  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(lo  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(lo  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
16	[BUG]  [BUGGY]  While(lo  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(lo  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(lo  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  a  =  hi;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	a    =    hi;    a  =  hi;	  	compilable	  [FE]  AssertionError  	7	4	add
18	[BUG]  [BUGGY]  a  =  hi;  a  =  hi;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  a  =  hi;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    hi;    a  =  hi;	  	compilable	  [FE]  AssertionError  	7	4	add
19	[BUG]  [BUGGY]  a  =  hi;  a  =  hi;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException(t);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  a  =  hi;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException(t);  }  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    hi;    a  =  hi;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException(t);  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
20	[BUG]  [BUGGY]  a  =  hi;  a  =  hi;  }  else  if(lo  <  MILLIS)  {  throw  new  MaxIterationsExceededException(t);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  a  =  hi;  }  else  if(lo  <  MILLIS)  {  throw  new  MaxIterationsExceededException(t);  }  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    hi;    a  =  hi;  }  else  if(lo  <  MILLIS)  {  throw  new  MaxIterationsExceededException(t);  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
21	[BUG]  [BUGGY]  a  =  hi;  a  =  hi;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  a  =  hi;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException( " ");  }  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    hi;    a  =  hi;  }  else  if(lo  <  mid)  {  throw  new  NotStrictlyPositiveException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
22	[BUG]  [BUGGY]  a  =  hi;  a  =  hi;  }  else  if(lo  >  mid)  {  throw  new  NotStrictlyPositiveException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  a  =  hi;  }  else  if(lo  >  mid)  {  throw  new  NotStrictlyPositiveException( " ");  }  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    hi;    a  =  hi;  }  else  if(lo  >  mid)  {  throw  new  NotStrictlyPositiveException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
23	[BUG]  [BUGGY]  if(lo  >  0)  {  throw  new  NotStrictlyLimitException(mid);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  if(lo  >  0)  {  throw  new  NotStrictlyLimitException(mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	if(lo  >  0)  {  throw  new  NotStrictlyLimitException(mid);  }	      if(mid    >    0)    {    throw    new    NotStrictlyLimitException(mid);    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
24	[BUG]  [BUGGY]  While(mid  >  0)  {  throw  new  NotStrictlyLimitException(mid);  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(mid  >  0)  {  throw  new  NotStrictlyLimitException(mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(mid  >  0)  {  throw  new  NotStrictlyLimitException(mid);  }	      if(mid    >    0)    {    throw    new    NotStrictlyLimitException(mid);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
25	[BUG]  [BUGGY]  while(mid  >  0)  {  throw  new  NotStrictlyLimitException(mid);  }  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  while(mid  >  0)  {  throw  new  NotStrictlyLimitException(mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	while(mid  >  0)  {  throw  new  NotStrictlyLimitException(mid);  }	      if(mid    >    0)    {    throw    new    NotStrictlyLimitException(mid);    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
26	[BUG]  [BUGGY]  a  =  LONG;  [CE]  cannot  find  symbol  LONG  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  LONG;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  LONG;	      a    =    mid;    	non-compiled	[CE]  cannot  find  symbol  LONG	2	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi  +  1;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	a  =  hi  +  1;	  a    =    hi;    	compilable	  [FE]  AssertionError  	8	6	replace
28	[BUG]  [BUGGY]  a  =  hi  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi  +  1;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  hi  +  1;	  a    =    hi;    	compilable	  [FE]  AssertionError  	8	6	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  t  =  t;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	        t    =    t;    t  =  t;	  	compilable	  [FE]  AssertionError  	24	4	add
30	[BUG]  [BUGGY]      t  =  t;  t  =  t;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  t  =  t;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t;    t  =  t;	  	compilable	  [FE]  AssertionError  	24	4	add
31	[BUG]  [BUGGY]      t  =  t;  t  =  t;  this.isMinimum  =  isMinim  ||  isMinim;  [CE]  cannot  find  symbol  isMinimum  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  t  =  t;  this.isMinimum  =  isMinim  ||  isMinim;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t;    t  =  t;  this.isMinimum  =  isMinim  ||  isMinim;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	24	None	add
32	[BUG]  [BUGGY]      t  =  t;  t  =  t;  this.isMinimum  =  isMaximum  ||  isMinim;  [CE]  cannot  find  symbol  isMinimum  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  t  =  t;  this.isMinimum  =  isMaximum  ||  isMinim;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t;    t  =  t;  this.isMinimum  =  isMaximum  ||  isMinim;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	24	None	add
33	[BUG]  [BUGGY]      t  =  t;  t  =  t;  this.isMinimum  =  isMinim?  true  :  false;  [CE]  cannot  find  symbol  isMinimum  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  t  =  t;  this.isMinimum  =  isMinim?  true  :  false;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t;    t  =  t;  this.isMinimum  =  isMinim?  true  :  false;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	24	None	add
34	[BUG]  [BUGGY]      t  =  t;  t  =  t;  this.isMinimum  =  isMinim;  [CE]  cannot  find  symbol  isMinimum  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  t  =  t;  this.isMinimum  =  isMinim;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t;    t  =  t;  this.isMinimum  =  isMinim;	  	non-compiled	[CE]  cannot  find  symbol  isMinimum	24	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  lo  +  GOLDEN_SECTION;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	a  =  lo  +  GOLDEN_SECTION;	  a    =    GOLDEN_SECTION    +    lo;    	compilable	  [FE]  AssertionError  	21	6	replace
36	[BUG]  [BUGGY]  a  =  lo  +  GOLDEN_SECTION;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  lo  +  GOLDEN_SECTION;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  lo  +  GOLDEN_SECTION;	  a    =    GOLDEN_SECTION    +    lo;    	compilable	  [FE]  AssertionError  	21	6	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi  +  lo;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	a  =  hi  +  lo;	  a    =    GOLDEN_SECTION    +    lo;    	compilable	  [FE]  AssertionError  	21	5	replace
38	[BUG]  [BUGGY]  a  =  hi  +  lo;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi  +  lo;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  hi  +  lo;	  a    =    GOLDEN_SECTION    +    lo;    	compilable	  [FE]  AssertionError  	21	5	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  mid  +  lo;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	a  =  mid  +  lo;	  a    =    GOLDEN_SECTION    +    lo;    	compilable	  [FE]  AssertionError  	21	5	replace
40	[BUG]  [BUGGY]  a  =  mid  +  lo;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  mid  +  lo;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  mid  +  lo;	  a    =    GOLDEN_SECTION    +    lo;    	compilable	  [FE]  AssertionError  	21	5	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi  +  GOLDEN_SECTION;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	a  =  hi  +  GOLDEN_SECTION;	  a    =    GOLDEN_SECTION    +    lo;    	compilable	  [FE]  AssertionError  	21	6	replace
42	[BUG]  [BUGGY]  a  =  hi  +  GOLDEN_SECTION;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi  +  GOLDEN_SECTION;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  hi  +  GOLDEN_SECTION;	  a    =    GOLDEN_SECTION    +    lo;    	compilable	  [FE]  AssertionError  	21	6	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }	  	compilable	  [FE]  AssertionError  	11	7	add
44	[BUG]  [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }	  	compilable	  [FE]  AssertionError  	11	7	add
45	[BUG]  [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  If(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  If(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    If(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }	  	non-compiled	[CE]  ';'  expected	11	None	add
46	[BUG]  [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid;  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid;  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid;  }	  	non-compiled	[CE]  ')'  expected	11	None	add
47	[BUG]  [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  if(mid  >  0)  ==  throw  new  NotStrictlyPositiveException(mid);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  if(mid  >  0)  ==  throw  new  NotStrictlyPositiveException(mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    if(mid  >  0)  ==  throw  new  NotStrictlyPositiveException(mid);  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
48	[BUG]  [BUGGY]  b  =  lo.getLowerBound();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  b  =  lo.getLowerBound();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	b  =  lo.getLowerBound();	      b    =    fx.getLowerBound();    	non-compiled	[CE]  double  cannot  be  dereferenced	14	None	replace
49	[BUG]  [BUGGY]  b  =  fw.getLowerBound();  [CE]  cannot  find  symbol  fw  [FE]              AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  b  =  fw.getLowerBound();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	b  =  fw.getLowerBound();	      b    =    fx.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol  fw	14	None	replace
50	[BUG]  [BUGGY]  b  =  fv.getLowerBound();  [CE]  cannot  find  symbol  fv  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  b  =  fv.getLowerBound();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	b  =  fv.getLowerBound();	      b    =    fx.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol  fv	14	None	replace
51	[BUG]  [BUGGY]  b  =  hi.getLowerBound();  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  b  =  hi.getLowerBound();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	b  =  hi.getLowerBound();	      b    =    fx.getLowerBound();    	non-compiled	[CE]  double  cannot  be  dereferenced	14	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	a    =    GOLDEN_SECTION;    a  =  GOLDEN_SECTION;	  	compilable	  [FE]  AssertionError  	18	4	add
53	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION;    a  =  GOLDEN_SECTION;	  	compilable	  [FE]  AssertionError  	18	4	add
54	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  }  else  if(lo  <  hi)  {  throw  new  MaxIterationsExceededException(t);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  }  else  if(lo  <  hi)  {  throw  new  MaxIterationsExceededException(t);  }  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION;    a  =  GOLDEN_SECTION;  }  else  if(lo  <  hi)  {  throw  new  MaxIterationsExceededException(t);  }	  	non-compiled	[CE]  illegal  start  of  type	18	None	add
55	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  }  else  if(lo  >  hi)  {  throw  new  MaxIterationsExceededException(t);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  }  else  if(lo  >  hi)  {  throw  new  MaxIterationsExceededException(t);  }  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION;    a  =  GOLDEN_SECTION;  }  else  if(lo  >  hi)  {  throw  new  MaxIterationsExceededException(t);  }	  	non-compiled	[CE]  illegal  start  of  type	18	None	add
56	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  }  else  if(lo  <  hi)  {  throw  new  NotStrictlyPositiveException(t);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  }  else  if(lo  <  hi)  {  throw  new  NotStrictlyPositiveException(t);  }  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION;    a  =  GOLDEN_SECTION;  }  else  if(lo  <  hi)  {  throw  new  NotStrictlyPositiveException(t);  }	  	non-compiled	[CE]  illegal  start  of  type	18	None	add
57	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  }  else  {  a  =  GOLDEN_SECTION;  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  }  else  {  a  =  GOLDEN_SECTION;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION;    a  =  GOLDEN_SECTION;  }  else  {  a  =  GOLDEN_SECTION;	  	non-compiled	[CE]  'else'  without  'if'	18	None	add
58	[BUG]  [BUGGY]  a  =  b;  [CE]  variable  b  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  b;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  b;	  a    =    GOLDEN_SECTION;    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	19	None	replace
59	[BUG]  [BUGGY]  b  =  f.getUpperBound();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  b  =  f.getUpperBound();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	b  =  f.getUpperBound();	      b    =    f.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
60	[BUG]  [BUGGY]  b  =  lo.getLowerCase();  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  b  =  lo.getLowerCase();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	b  =  lo.getLowerCase();	      b    =    fx.getLowerCase();    	non-compiled	[CE]  double  cannot  be  dereferenced	27	None	replace
61	[BUG]  [BUGGY]  b  =  fw.getLowerCase();  [CE]  cannot  find  symbol  fw  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  b  =  fw.getLowerCase();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	b  =  fw.getLowerCase();	      b    =    fx.getLowerCase();    	non-compiled	[CE]  cannot  find  symbol  fw	27	None	replace
62	[BUG]  [BUGGY]  b  =  hi.getLowerCase();  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  b  =  hi.getLowerCase();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	b  =  hi.getLowerCase();	      b    =    fx.getLowerCase();    	non-compiled	[CE]  double  cannot  be  dereferenced	27	None	replace
63	[BUG]  [BUGGY]  b  =  fv.getLowerCase();  [CE]  cannot  find  symbol  fv  [FE]                    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  b  =  fv.getLowerCase();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	b  =  fv.getLowerCase();	      b    =    fx.getLowerCase();    	non-compiled	[CE]  cannot  find  symbol  fv	27	None	replace
64	[BUG]  [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  mid);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  mid);  }	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    mid);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  While(mid  <  =  1)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  mid);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(mid  <  =  1)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(mid  <  =  1)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  mid);  }	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    mid);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  mid);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  mid);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  mid);	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    mid);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }	  	compilable	  [FE]  AssertionError  	15	7	add
68	[BUG]  [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }	  	compilable	  [FE]  AssertionError  	15	7	add
69	[BUG]  [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  If(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  If(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    If(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }	  	non-compiled	[CE]  ';'  expected	15	None	add
70	[BUG]  [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(no);  }  [CE]  cannot  find  symbol  no  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(no);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(no);  }	  	non-compiled	[CE]  cannot  find  symbol  no	15	None	add
71	[BUG]  [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  intmid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  intmid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    intmid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }	  	non-compiled	[CE]  not  a  statement	15	None	add
72	[BUG]  [BUGGY]  t  =  mid  +  1;  [CE]  variable  a  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  mid  +  1;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  mid  +  1;	      t    =    t    +    1;    	non-compiled	[CE]  variable  a  might  not  have  been  initialized	23	None	replace
73	[BUG]  [BUGGY]  t  =  hi  +  1;  [CE]  variable  a  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  hi  +  1;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  hi  +  1;	      t    =    t    +    1;    	non-compiled	[CE]  variable  a  might  not  have  been  initialized	23	None	replace
74	[BUG]  [BUGGY]  t  =  t  +  2;  [CE]  variable  a  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  t  +  2;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  t  +  2;	      t    =    t    +    1;    	non-compiled	[CE]  variable  a  might  not  have  been  initialized	23	None	replace
75	[BUG]  [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null.   ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null.   ");  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null.   ");  }	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
76	[BUG]  [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null.. ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null.. ");  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null.. ");  }	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      a  =  mid;  a  =  mid;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	        a    =    mid;    a  =  mid;	  	compilable	  [FE]  AssertionError  	1	4	add
78	[BUG]  [BUGGY]      a  =  mid;  a  =  mid;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      a  =  mid;  a  =  mid;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        a    =    mid;    a  =  mid;	  	compilable	  [FE]  AssertionError  	1	4	add
79	[BUG]  [BUGGY]      a  =  mid;  a  =  mid;  }  else  {  a  =  lo;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      a  =  mid;  a  =  mid;  }  else  {  a  =  lo;  b  =  lo;  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        a    =    mid;    a  =  mid;  }  else  {  a  =  lo;  b  =  lo;  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
80	[BUG]  [BUGGY]      a  =  mid;  a  =  mid;  }  else  {  a  =  lo;  b  =  lo;  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      a  =  mid;  a  =  mid;  }  else  {  a  =  lo;  b  =  lo;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        a    =    mid;    a  =  mid;  }  else  {  a  =  lo;  b  =  lo;	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
81	[BUG]  [BUGGY]      a  =  mid;  a  =  mid;  }  else  if(lo  <  hi)  {  [CE]  variable  b  might  not  have  been  initialized  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      a  =  mid;  a  =  mid;  }  else  if(lo  <  hi)  {  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        a    =    mid;    a  =  mid;  }  else  if(lo  <  hi)  {	  	non-compiled	[CE]  variable  b  might  not  have  been  initialized	1	None	add
82	[BUG]  [BUGGY]      a  =  mid;  a  =  mid;  }  else  {  a  =  lo;  b  =  hi;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      a  =  mid;  a  =  mid;  }  else  {  a  =  lo;  b  =  hi;  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        a    =    mid;    a  =  mid;  }  else  {  a  =  lo;  b  =  hi;  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
83	[BUG]  [BUGGY]  t  =  a;  [CE]  variable  a  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  a;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  a;	      t    =    t;    	non-compiled	[CE]  variable  a  might  not  have  been  initialized	25	None	replace
84	[BUG]  [BUGGY]  t  =  0;  [CE]  variable  a  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  0;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  0;	      t    =    t;    	non-compiled	[CE]  variable  a  might  not  have  been  initialized	25	None	replace
85	[BUG]  [BUGGY]  t  =  mid;  [CE]  variable  a  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  mid;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  mid;	      t    =    t;    	non-compiled	[CE]  variable  a  might  not  have  been  initialized	25	None	replace
86	[BUG]  [BUGGY]  t  =  1;  [CE]  variable  a  might  not  have  been  initialized  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  1;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  1;	      t    =    t;    	non-compiled	[CE]  variable  a  might  not  have  been  initialized	25	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  a  =  GOLDEN_SECTION  +  lo;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	a    =    GOLDEN_SECTION    +    lo;    a  =  GOLDEN_SECTION  +  lo;	  	compilable	  [FE]  AssertionError  	20	4	add
88	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  a  =  GOLDEN_SECTION  +  lo;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  a  =  GOLDEN_SECTION  +  lo;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION    +    lo;    a  =  GOLDEN_SECTION  +  lo;	  	compilable	  [FE]  AssertionError  	20	4	add
89	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  int  a  =  GOLDEN_SECTION  +  lo;  [CE]  variable  a  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  int  a  =  GOLDEN_SECTION  +  lo;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION    +    lo;    int  a  =  GOLDEN_SECTION  +  lo;	  	non-compiled	[CE]  variable  a  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	20	None	add
90	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  a  =  GOLDEN_SECTION  +  lo);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  a  =  GOLDEN_SECTION  +  lo);  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION    +    lo;    a  =  GOLDEN_SECTION  +  lo);	  	non-compiled	[CE]  ';'  expected	20	None	add
91	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  a  =  GOLDEN_SECTION  +  lo.;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  a  =  GOLDEN_SECTION  +  lo.;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION    +    lo;    a  =  GOLDEN_SECTION  +  lo.;	  	non-compiled	[CE]  <identifier>  expected	20	None	add
92	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  A  =  GOLDEN_SECTION  +  lo;  [CE]  cannot  find  symbol  A  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  A  =  GOLDEN_SECTION  +  lo;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION    +    lo;    A  =  GOLDEN_SECTION  +  lo;	  	non-compiled	[CE]  cannot  find  symbol  A	20	None	add
93	[BUG]  [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  numeric.   ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  numeric.   ");  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  numeric.   ");  }	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    numeric.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
94	[BUG]  [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  numeric.   ");  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  numeric.   ");  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  numeric.   ");	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    numeric.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
95	[BUG]  [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  lo);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  lo);  }	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    lo);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
96	[BUG]  [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  hi);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  hi);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	While(lo  <  =  0)  {  throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  hi);  }	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    lo);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
97	[BUG]  [BUGGY]      t  =  t  +  1;  int  t  =  t  +  1;  [CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t  +  1;  int  t  =  t  +  1;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t    +    1;    int  t  =  t  +  1;	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	22	None	add
98	[BUG]  [BUGGY]      t  =  t  +  1;  (t  =  t  +  1;  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t  +  1;  (t  =  t  +  1;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t    +    1;    (t  =  t  +  1;	  	non-compiled	[CE]  ')'  expected	22	None	add
99	[BUG]  [BUGGY]      t  =  t  +  1;  (t  =  t  +  1);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t  +  1;  (t  =  t  +  1);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t    +    1;    (t  =  t  +  1);	  	non-compiled	[CE]  not  a  statement	22	None	add
100	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  safeThan  <  =  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	safeThan  <  =  0)  {  throw  new  NotStrictlyPositiveException(lo);  }	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
101	[BUG]  [BUGGY]  luate(mid,  b)>  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  luate(mid,  b)>  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	luate(mid,  b)>  0)  {  throw  new  NotStrictlyPositiveException(lo);  }	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
102	[BUG]  [BUGGY]  luate(mid,  b)  {  throw  new  NotStrictlyPositiveException(lo);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  luate(mid,  b)  {  throw  new  NotStrictlyPositiveException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	luate(mid,  b)  {  throw  new  NotStrictlyPositiveException(lo);  }	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
103	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  NotStrictlyPositiveException(hi);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  safeThan  <  =  0)  {  throw  new  NotStrictlyPositiveException(hi);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	safeThan  <  =  0)  {  throw  new  NotStrictlyPositiveException(hi);  }	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
104	[BUG]  [BUGGY]  if(mid  >  0)  {  throw  new  NotStrictlyLimitException(lo);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  if(mid  >  0)  {  throw  new  NotStrictlyLimitException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	if(mid  >  0)  {  throw  new  NotStrictlyLimitException(lo);  }	      if(mid    >    0)    {    throw    new    NotStrictlyLimitException(mid);    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
105	[BUG]  [BUGGY]  if(hi  >  0)  {  throw  new  NotStrictlyLimitException(mid);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  if(hi  >  0)  {  throw  new  NotStrictlyLimitException(mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	if(hi  >  0)  {  throw  new  NotStrictlyLimitException(mid);  }	      if(mid    >    0)    {    throw    new    NotStrictlyLimitException(mid);    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
106	[BUG]  [BUGGY]  a  =  hi;  int  a  =  hi;  [CE]  variable  a  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  int  a  =  hi;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    hi;    int  a  =  hi;	  	non-compiled	[CE]  variable  a  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	7	None	add
107	[BUG]  [BUGGY]  a  =  hi;  a  =  hi.combine(lo,  b);  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  a  =  hi.combine(lo,  b);  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    hi;    a  =  hi.combine(lo,  b);	  	non-compiled	[CE]  double  cannot  be  dereferenced	7	None	add
108	[BUG]  [BUGGY]  a  =  hi;  a  =  hi.combine(lo,  fx);  [CE]  cannot  find  symbol  fx  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  a  =  hi.combine(lo,  fx);  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    hi;    a  =  hi.combine(lo,  fx);	  	non-compiled	[CE]  cannot  find  symbol  fx	7	None	add
109	[BUG]  [BUGGY]  a  =  hi;  a  =  hi.combine(fx,  fx);  [CE]  cannot  find  symbol  fx  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  a  =  hi.combine(fx,  fx);  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    hi;    a  =  hi.combine(fx,  fx);	  	non-compiled	[CE]  cannot  find  symbol  fx	7	None	add
110	[BUG]  [BUGGY]  ettyPositiveException( "mid  is  minimal  and  can  not  be  numeric.   ");  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  ettyPositiveException( "mid  is  minimal  and  can  not  be  numeric.   ");  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	ettyPositiveException( "mid  is  minimal  and  can  not  be  numeric.   ");	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    numeric.   ");    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
111	[BUG]  [BUGGY]  MutableToJavaIdentifier.checkLimit(lo, "mid  is  minimal  and  can  not  be  numeric. ");  [CE]  cannot  find  symbol  MutableToJavaIdentifier  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToJavaIdentifier.checkLimit(lo, "mid  is  minimal  and  can  not  be  numeric. ");  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToJavaIdentifier.checkLimit(lo, "mid  is  minimal  and  can  not  be  numeric. ");	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    numeric.   ");    }    	non-compiled	[CE]  cannot  find  symbol  MutableToJavaIdentifier	5	None	replace
112	[BUG]  [BUGGY]  ettyPositiveException( "mid  is  minimal  and  can  not  be  numeric.. ");  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  ettyPositiveException( "mid  is  minimal  and  can  not  be  numeric.. ");  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	ettyPositiveException( "mid  is  minimal  and  can  not  be  numeric.. ");	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    numeric.   ");    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
113	[BUG]  [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  if(mid  >  0)  {  Throw  new  NotStrictlyPositiveException(lo);  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  if(mid  >  0)  {  Throw  new  NotStrictlyPositiveException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    if(mid  >  0)  {  Throw  new  NotStrictlyPositiveException(lo);  }	  	non-compiled	[CE]  not  a  statement	15	None	add
114	[BUG]  [BUGGY]  b  =  f.getLowerCase();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  b  =  f.getLowerCase();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	b  =  f.getLowerCase();	      b    =    fx.getLowerCase();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
115	[BUG]  [BUGGY]  t  =  t  +  1L;  [CE]  variable  a  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  t  +  1L;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  t  +  1L;	      t    =    t    +    1;    	non-compiled	[CE]  variable  a  might  not  have  been  initialized	23	None	replace
116	[BUG]  [BUGGY]      a  =  mid;  a  =  mid;  }  else  if(lo  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      a  =  mid;  a  =  mid;  }  else  if(lo  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        a    =    mid;    a  =  mid;  }  else  if(lo  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
117	[BUG]  [BUGGY]      a  =  mid;  a  =  mid;  }  else  if(lo  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException(t);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      a  =  mid;  a  =  mid;  }  else  if(lo  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException(t);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        a    =    mid;    a  =  mid;  }  else  if(lo  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException(t);  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
118	[BUG]  [BUGGY]      a  =  mid;  a  =  mid;  }  else  if(lo  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      a  =  mid;  a  =  mid;  }  else  if(lo  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        a    =    mid;    a  =  mid;  }  else  if(lo  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException(null);  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
119	[BUG]  [BUGGY]      a  =  mid;  a  =  mid;  }  else  if(lo  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException(x);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      a  =  mid;  a  =  mid;  }  else  if(lo  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException(x);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        a    =    mid;    a  =  mid;  }  else  if(lo  >  GOLDEN_SECTION)  {  throw  new  MaxIterationsExceededException(x);  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION  +  mid;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	a  =  GOLDEN_SECTION  +  mid;	  a    =    GOLDEN_SECTION    +    lo;    	compilable	  [FE]  AssertionError  	21	6	replace
121	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION  +  mid;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION  +  mid;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  GOLDEN_SECTION  +  mid;	  a    =    GOLDEN_SECTION    +    lo;    	compilable	  [FE]  AssertionError  	21	6	replace
122	[BUG]  [BUGGY]  ettyPositiveException( "mid  is  less  than  1: "  +  lo);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  ettyPositiveException( "mid  is  less  than  1: "  +  lo);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	ettyPositiveException( "mid  is  less  than  1: "  +  lo);	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    lo);    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
123	[BUG]  [BUGGY]  MutableToJavaType.throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  lo);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToJavaType.throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  lo);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToJavaType.throw  new  NotStrictlyPositiveException( "mid  is  less  than  1: "  +  lo);	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    lo);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
124	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION;  int  a  =  GOLDEN_SECTION;  [CE]  variable  a  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION;  int  a  =  GOLDEN_SECTION;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION;    int  a  =  GOLDEN_SECTION;	  	non-compiled	[CE]  variable  a  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	18	None	add
125	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  this.lo  =  lo;  [CE]  cannot  find  symbol  lo  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  this.lo  =  lo;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION;    a  =  GOLDEN_SECTION;  this.lo  =  lo;	  	non-compiled	[CE]  cannot  find  symbol  lo	18	None	add
126	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION;  (  a  =  GOLDEN_SECTION;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION;  (  a  =  GOLDEN_SECTION;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION;    (  a  =  GOLDEN_SECTION;	  	non-compiled	[CE]  ')'  expected	18	None	add
127	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  setLo(lo);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION;  a  =  GOLDEN_SECTION;  setLo(lo);  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION;    a  =  GOLDEN_SECTION;  setLo(lo);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
128	[BUG]  [BUGGY]  t  =  f;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  f;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  f;	      t    =    t;    	non-compiled	[CE]  incompatible  types	25	None	replace
129	[BUG]  [BUGGY]      t  =  t;  int  t  =  t;  [CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  int  t  =  t;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t;    int  t  =  t;	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	24	None	add
130	[BUG]  [BUGGY]      t  =  t;  (t  =  t;  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  (t  =  t;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t;    (t  =  t;	  	non-compiled	[CE]  ')'  expected	24	None	add
131	[BUG]  [BUGGY]      t  =  t;  t  =  t.m;  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  t  =  t.m;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t;    t  =  t.m;	  	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	add
132	[BUG]  [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  intmid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  intmid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    intmid  >  0)  {  throw  new  NotStrictlyPositiveException(mid);  }	  	non-compiled	[CE]  not  a  statement	11	None	add
133	[BUG]  [BUGGY]  t  =  f.getMask();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  f.getMask();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  f.getMask();	      t    =    t.getMask();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
134	[BUG]  [BUGGY]  t  =  fw.getMask();  [CE]  cannot  find  symbol  fw  [FE]              AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  fw.getMask();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  fw.getMask();	      t    =    t.getMask();    	non-compiled	[CE]  cannot  find  symbol  fw	26	None	replace
135	[BUG]  [BUGGY]  t  =  fv.getMask();  [CE]  cannot  find  symbol  fv  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  fv.getMask();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  fv.getMask();	      t    =    t.getMask();    	non-compiled	[CE]  cannot  find  symbol  fv	26	None	replace
136	[BUG]  [BUGGY]  a  =  min;  [CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  min;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  min;	      a    =    mid;    	non-compiled	[CE]  min  has  private  access  in  AbstractUnivariateRealOptimizer	2	None	replace
137	[BUG]  [BUGGY]  ettyPositiveException( "mid  is  minimal  and  can  not  be  null.   ");  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  ettyPositiveException( "mid  is  minimal  and  can  not  be  null.   ");  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	ettyPositiveException( "mid  is  minimal  and  can  not  be  null.   ");	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    null.   ");    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
138	[BUG]  [BUGGY]  ettyPositiveException( "mid  is  minimal  and  can  not  be  null.. ");  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  ettyPositiveException( "mid  is  minimal  and  can  not  be  null.. ");  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	ettyPositiveException( "mid  is  minimal  and  can  not  be  null.. ");	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    null.   ");    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
139	[BUG]  [BUGGY]  TasksUiExpression.checkState(lo  <  =  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  TasksUiExpression.checkState(lo  <  =  0);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	TasksUiExpression.checkState(lo  <  =  0);	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
140	[BUG]  [BUGGY]  MutableToLowerCase.isMinimum(lo)  {  throw  new  NotStrictlyPositiveException(lo);  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToLowerCase.isMinimum(lo)  {  throw  new  NotStrictlyPositiveException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToLowerCase.isMinimum(lo)  {  throw  new  NotStrictlyPositiveException(lo);  }	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
141	[BUG]  [BUGGY]  MutableToLowerCase.isMinimum(lo)  {  throw  new  NotStrictlyPositiveException(mid);  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToLowerCase.isMinimum(lo)  {  throw  new  NotStrictlyPositiveException(mid);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToLowerCase.isMinimum(lo)  {  throw  new  NotStrictlyPositiveException(mid);  }	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
142	[BUG]  [BUGGY]  ettyPositiveException( "mid  is  less  than  1: "  +  mid);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  ettyPositiveException( "mid  is  less  than  1: "  +  mid);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	ettyPositiveException( "mid  is  less  than  1: "  +  mid);	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    mid);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
143	[BUG]  [BUGGY]  ettyPositiveException( "mid  is  less  than  1: "  +  hi);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  ettyPositiveException( "mid  is  less  than  1: "  +  hi);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	ettyPositiveException( "mid  is  less  than  1: "  +  hi);	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    mid);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
144	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  (  a  =  GOLDEN_SECTION  +  lo;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  (  a  =  GOLDEN_SECTION  +  lo;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION    +    lo;    (  a  =  GOLDEN_SECTION  +  lo;	  	non-compiled	[CE]  ')'  expected	20	None	add
145	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION;  (  a  =  GOLDEN_SECTION);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION;  (  a  =  GOLDEN_SECTION);  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION;    (  a  =  GOLDEN_SECTION);	  	non-compiled	[CE]  not  a  statement	18	None	add
146	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION;  A  =  GOLDEN_SECTION;  [CE]  cannot  find  symbol  A  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION;  A  =  GOLDEN_SECTION;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION;    A  =  GOLDEN_SECTION;	  	non-compiled	[CE]  cannot  find  symbol  A	18	None	add
147	[BUG]  [BUGGY]  t  =  eps;  [CE]  variable  a  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  eps;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  eps;	      t    =    t;    	non-compiled	[CE]  variable  a  might  not  have  been  initialized	25	None	replace
148	[BUG]  [BUGGY]  t  =  fx;  [CE]  cannot  find  symbol  fx  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  fx;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  fx;	      t    =    t;    	non-compiled	[CE]  cannot  find  symbol  fx	25	None	replace
149	[BUG]  [BUGGY]  MutableToLowerCase.isMinimumToLowerCase(lo))  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null. ");  }  [CE]  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToLowerCase.isMinimumToLowerCase(lo))  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null. ");  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToLowerCase.isMinimumToLowerCase(lo))  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null. ");  }	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    null.   ");    }    	non-compiled	[CE]  	3	None	replace
150	[BUG]  [BUGGY]  MutableToLowerCase.isMinimumToLowerCase(lo)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null. ");  }  [CE]  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToLowerCase.isMinimumToLowerCase(lo)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null. ");  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToLowerCase.isMinimumToLowerCase(lo)  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null. ");  }	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    null.   ");    }    	non-compiled	[CE]  	3	None	replace
151	[BUG]  [BUGGY]  MutableToLowerCase.isMinimumToLowerCase(lo))  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null. ");  [CE]  [FE]              AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToLowerCase.isMinimumToLowerCase(lo))  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null. ");  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToLowerCase.isMinimumToLowerCase(lo))  {  throw  new  NotStrictlyPositiveException( "mid  is  minimal  and  can  not  be  null. ");	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    null.   ");    }    	non-compiled	[CE]  	3	None	replace
152	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  (  a  =  GOLDEN_SECTION  +  lo);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION  +  lo;  (  a  =  GOLDEN_SECTION  +  lo);  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    GOLDEN_SECTION    +    lo;    (  a  =  GOLDEN_SECTION  +  lo);	  	non-compiled	[CE]  not  a  statement	20	None	add
153	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  0;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	a  =  0;	  a    =    GOLDEN_SECTION;    	compilable	  [FE]  AssertionError  	19	5	replace
154	[BUG]  [BUGGY]  a  =  0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  0;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  0;	  a    =    GOLDEN_SECTION;    	compilable	  [FE]  AssertionError  	19	5	replace
155	[BUG]  [BUGGY]  a  =  hi;  a  =  hi.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  a  =  hi.doubleValue();  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    hi;    a  =  hi.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	7	None	add
156	[BUG]  [BUGGY]  a  =  hi;  a  =  hi.doubleValue(lo);  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  a  =  hi.doubleValue(lo);  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    hi;    a  =  hi.doubleValue(lo);	  	non-compiled	[CE]  double  cannot  be  dereferenced	7	None	add
157	[BUG]  [BUGGY]  a  =  hi;  int  a  =  hi.doubleValue();  [CE]  variable  a  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  hi;  int  a  =  hi.doubleValue();  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a    =    hi;    int  a  =  hi.doubleValue();	  	non-compiled	[CE]  variable  a  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	7	None	add
158	[BUG]  [BUGGY]      a  =  mid;  a  =  mid;  }  else  {  a  =  hi;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      a  =  mid;  a  =  mid;  }  else  {  a  =  hi;  b  =  lo;  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        a    =    mid;    a  =  mid;  }  else  {  a  =  hi;  b  =  lo;  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
159	[BUG]  [BUGGY]  MutableToJava2D(lo,  a,  b,  t);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToJava2D(lo,  a,  b,  t);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToJava2D(lo,  a,  b,  t);	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
160	[BUG]  [BUGGY]  MutableToJava2D(lo,  t,  a,  b,  w,  hi);  [CE]  cannot  find  symbol  w  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToJava2D(lo,  t,  a,  b,  w,  hi);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToJava2D(lo,  t,  a,  b,  w,  hi);	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    	non-compiled	[CE]  cannot  find  symbol  w	12	None	replace
161	[BUG]  [BUGGY]  MutableToJava2D(lo,  t,  a,  b,  d);  [CE]  cannot  find  symbol  d  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToJava2D(lo,  t,  a,  b,  d);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToJava2D(lo,  t,  a,  b,  d);	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(mid);    }    	non-compiled	[CE]  cannot  find  symbol  d	12	None	replace
162	[BUG]  [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  if(mid  >  0)  ==  throw  new  NotStrictlyPositiveException(lo);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  if(mid  >  0)  ==  throw  new  NotStrictlyPositiveException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    if(mid  >  0)  ==  throw  new  NotStrictlyPositiveException(lo);  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
163	[BUG]  [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  if(mid  >  0)  {  throw  new  NotStritlyPositiveException(lo);  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      if(mid  >  0)  {  throw  new  NotStrictlyPositiveException(lo);  }  if(mid  >  0)  {  throw  new  NotStritlyPositiveException(lo);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    if(mid  >  0)  {  throw  new  NotStritlyPositiveException(lo);  }	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
164	[BUG]  [BUGGY]  a  =  LAST;  [CE]  cannot  find  symbol  LAST  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  LAST;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  LAST;	  a    =    low;    	non-compiled	[CE]  cannot  find  symbol  LAST	10	None	replace
165	[BUG]  [BUGGY]  t  =  t  +  3;  [CE]  variable  a  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  t  +  3;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  t  +  3;	      t    =    t    +    1;    	non-compiled	[CE]  variable  a  might  not  have  been  initialized	23	None	replace
166	[BUG]  [BUGGY]  t  =  t  *  1;  [CE]  variable  a  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  t  =  t  *  1;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	t  =  t  *  1;	      t    =    t    +    1;    	non-compiled	[CE]  variable  a  might  not  have  been  initialized	23	None	replace
167	[BUG]  [BUGGY]  aughtException(t,  a,  b);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  aughtException(t,  a,  b);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	aughtException(t,  a,  b);	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
168	[BUG]  [BUGGY]  aughtException(t,  a,  hi);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  aughtException(t,  a,  hi);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	aughtException(t,  a,  hi);	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
169	[BUG]  [BUGGY]  aughtException(lo,  eps);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  aughtException(lo,  eps);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	aughtException(lo,  eps);	      if(mid    >    0)    {    throw    new    NotStrictlyPositiveException(lo);    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
170	[BUG]  [BUGGY]  if(mid  >  0)  {  throw  new  NotStrictlyLimitException(mid,  b);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  if(mid  >  0)  {  throw  new  NotStrictlyLimitException(mid,  b);  }  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	if(mid  >  0)  {  throw  new  NotStrictlyLimitException(mid,  b);  }	      if(mid    >    0)    {    throw    new    NotStrictlyLimitException(mid);    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
171	[BUG]  [BUGGY]  a  =  LOCALE_SECTION;  [CE]  cannot  find  symbol  LOCALE_SECTION  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  LOCALE_SECTION;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  LOCALE_SECTION;	      a    =    mid;    	non-compiled	[CE]  cannot  find  symbol  LOCALE_SECTION	2	None	replace
172	[BUG]  [BUGGY]      t  =  t;  t  =  t.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  t  =  t.doubleValue();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t;    t  =  t.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	add
173	[BUG]  [BUGGY]      t  =  t;  t  =  t.getValue();  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  t  =  t.getValue();  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t;    t  =  t.getValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	add
174	[BUG]  [BUGGY]      t  =  t;  double  t  =  t;  [CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  double  t  =  t;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t;    double  t  =  t;	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	24	None	add
175	[BUG]  [BUGGY]      t  =  t;  t  =  t.next;  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t;  t  =  t.next;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t;    t  =  t.next;	  	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	add
176	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION  +  lo  +  1;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	add	a  =  GOLDEN_SECTION  +  lo  +  1;	  a    =    GOLDEN_SECTION    +    lo;    	compilable	  [FE]  AssertionError  	21	6	replace
177	[BUG]  [BUGGY]  a  =  GOLDEN_SECTION  +  lo  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  GOLDEN_SECTION  +  lo  +  1;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  GOLDEN_SECTION  +  lo  +  1;	  a    =    GOLDEN_SECTION    +    lo;    	compilable	  [FE]  AssertionError  	21	6	replace
178	[BUG]  [BUGGY]  a  =  LAST_VALID;  [CE]  cannot  find  symbol  LAST_VALID  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  a  =  LAST_VALID;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	a  =  LAST_VALID;	  a    =    hi;    	non-compiled	[CE]  cannot  find  symbol  LAST_VALID	8	None	replace
179	[BUG]  [BUGGY]      t  =  t  +  1;  double  t  =  t  +  1;  [CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t  +  1;  double  t  =  t  +  1;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t    +    1;    double  t  =  t  +  1;	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	22	None	add
180	[BUG]  [BUGGY]      t  =  t  +  1;  int  =  t  +  1;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]      t  =  t  +  1;  int  =  t  +  1;  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	        t    =    t    +    1;    int  =  t  +  1;	  	non-compiled	[CE]  not  a  statement	22	None	add
181	[BUG]  [BUGGY]  aughtException( "mid  is  less  than  1: "  +  lo);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  aughtException( "mid  is  less  than  1: "  +  lo);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	aughtException( "mid  is  less  than  1: "  +  lo);	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    lo);    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
182	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(lo  <  =  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToJavaIdentifiers.checkState(lo  <  =  0);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToJavaIdentifiers.checkState(lo  <  =  0);	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    lo);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
183	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(hi  <  =  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToJavaIdentifiers.checkState(hi  <  =  0);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToJavaIdentifiers.checkState(hi  <  =  0);	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    lo);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
184	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkLocal(mid,  t);  [CE]  cannot  find  symbol  MutableToJavaIdentifiers  [FE]              AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToJavaIdentifiers.checkLocal(mid,  t);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToJavaIdentifiers.checkLocal(mid,  t);	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    numeric.   ");    }    	non-compiled	[CE]  cannot  find  symbol  MutableToJavaIdentifiers	5	None	replace
185	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkLimit(lo);  [CE]  cannot  find  symbol  MutableToJavaIdentifiers  [FE]                AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToJavaIdentifiers.checkLimit(lo);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToJavaIdentifiers.checkLimit(lo);	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    minimal    and    can    not    be    numeric.   ");    }    	non-compiled	[CE]  cannot  find  symbol  MutableToJavaIdentifiers	5	None	replace
186	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkLocal(mid,  a,  b);  [CE]  cannot  find  symbol  MutableToJavaIdentifiers  [FE]            AssertionError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  if  (eps  <=  0)  {  throw  new  NotStrictlyPositiveException(eps);  }  if  (t  <=  0)  {  throw  new  NotStrictlyPositiveException(t);  }  double  a,  b;  if  (lo  <  hi)  {    [BUGGY]  MutableToJavaIdentifiers.checkLocal(mid,  a,  b);  [BUGGY]    a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	107	107	4	replace	MutableToJavaIdentifiers.checkLocal(mid,  a,  b);	      if(mid    <    =    0)    {    throw    new    NotStrictlyPositiveException(   "mid    is    less    than    1:   "    +    mid);    }    	non-compiled	[CE]  cannot  find  symbol  MutableToJavaIdentifiers	4	None	replace
