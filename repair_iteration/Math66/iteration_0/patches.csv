bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]    if(d  >  a)  {  if(m  >  x)  {  d  =  -tol1;  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  [BUGGY]    if(d  >  a)  {  if(m  >  x)  {  d  =  -tol1;  }  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	    if(d  >  a)  {  if(m  >  x)  {  d  =  -tol1;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	add
2	[BUG]  [BUGGY]    if(x  >  m)  {  if(d  >  a  ||  b  >  a)  {  d  =  -tol1;  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  [BUGGY]    if(x  >  m)  {  if(d  >  a  ||  b  >  a)  {  d  =  -tol1;  }  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	    if(x  >  m)  {  if(d  >  a  ||  b  >  a)  {  d  =  -tol1;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	add
3	[BUG]  [BUGGY]    if(d  >  a)  {  if(m  >  x)  {  d  =  -tol1;  }  else  {  d  =  -tol1;  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  [BUGGY]    if(d  >  a)  {  if(m  >  x)  {  d  =  -tol1;  }  else  {  d  =  -tol1;  }  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	    if(d  >  a)  {  if(m  >  x)  {  d  =  -tol1;  }  else  {  d  =  -tol1;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	add
4	[BUG]  [BUGGY]    if(x  >  m)  {  if(d  >  a  ||  b  >  a)  {  d  =  -tol2;  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  [BUGGY]    if(x  >  m)  {  if(d  >  a  ||  b  >  a)  {  d  =  -tol2;  }  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	    if(x  >  m)  {  if(d  >  a  ||  b  >  a)  {  d  =  -tol2;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	add
5	[BUG]  [BUGGY]    if(d  >  a)  {  if(m  >  x)  {  d  =  -tol2;  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  [BUGGY]    if(d  >  a)  {  if(m  >  x)  {  d  =  -tol2;  }  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	159	159	4	replace	    if(d  >  a)  {  if(m  >  x)  {  d  =  -tol2;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  testQuinticMin  [CONTEXT]  public  BrentOptimizer()  {  setMaxEvaluations(Integer.MAX_VALUE);  setMaximalIterationCount(100);  setAbsoluteAccuracy(1E-10);  [BUGGY]    setAbsoluteAccuracy(1E-15);  [BUGGY]  setRelativeAccuracy(1.0e-14);  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  BrentOptimizer()  [VARIABLES]  double  GOLDEN_SECTION  boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	47	47	4	add	    setAbsoluteAccuracy(1E-15);		compilable	  [FE]  AssertionError  testQuinticMin	18	4
12	[BUG]  [BUGGY]    setAbsoluteAccuracy(1E-15);  [FE]  AssertionError  testQuinticMin  [CONTEXT]  public  BrentOptimizer()  {  setMaxEvaluations(Integer.MAX_VALUE);  setMaximalIterationCount(100);  setAbsoluteAccuracy(1E-10);  [BUGGY]    setAbsoluteAccuracy(1E-15);  [BUGGY]  setRelativeAccuracy(1.0e-14);  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  BrentOptimizer()  [VARIABLES]  double  GOLDEN_SECTION  boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	47	47	4	replace	    setAbsoluteAccuracy(1E-15);		compilable	  [FE]  AssertionError  testQuinticMin	18	4	add
12	[BUG]  [BUGGY]  [FE]  AssertionError  testQuinticMin  [CONTEXT]  public  BrentOptimizer()  {  setMaxEvaluations(Integer.MAX_VALUE);  setMaximalIterationCount(100);  setAbsoluteAccuracy(1E-10);  [BUGGY]    setAbsoluteAccuracy(1E-11);  [BUGGY]  setRelativeAccuracy(1.0e-14);  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  BrentOptimizer()  [VARIABLES]  double  GOLDEN_SECTION  boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	47	47	4	add	    setAbsoluteAccuracy(1E-11);		compilable	  [FE]  AssertionError  testQuinticMin	18	4
13	[BUG]  [BUGGY]    setAbsoluteAccuracy(1E-11);  [FE]  AssertionError  testQuinticMin  [CONTEXT]  public  BrentOptimizer()  {  setMaxEvaluations(Integer.MAX_VALUE);  setMaximalIterationCount(100);  setAbsoluteAccuracy(1E-10);  [BUGGY]    setAbsoluteAccuracy(1E-11);  [BUGGY]  setRelativeAccuracy(1.0e-14);  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  BrentOptimizer()  [VARIABLES]  double  GOLDEN_SECTION  boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	47	47	4	replace	    setAbsoluteAccuracy(1E-11);		compilable	  [FE]  AssertionError  testQuinticMin	18	4	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  testQuinticMin  [CONTEXT]  public  BrentOptimizer()  {  setMaxEvaluations(Integer.MAX_VALUE);  setMaximalIterationCount(100);  setAbsoluteAccuracy(1E-10);  [BUGGY]    setAbsoluteAccuracy(1E-9);  [BUGGY]  setRelativeAccuracy(1.0e-14);  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  BrentOptimizer()  [VARIABLES]  double  GOLDEN_SECTION  boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	47	47	4	add	    setAbsoluteAccuracy(1E-9);		compilable	  [FE]  AssertionError  testQuinticMin	18	4
14	[BUG]  [BUGGY]    setAbsoluteAccuracy(1E-9);  [FE]  AssertionError  testQuinticMin  [CONTEXT]  public  BrentOptimizer()  {  setMaxEvaluations(Integer.MAX_VALUE);  setMaximalIterationCount(100);  setAbsoluteAccuracy(1E-10);  [BUGGY]    setAbsoluteAccuracy(1E-9);  [BUGGY]  setRelativeAccuracy(1.0e-14);  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  BrentOptimizer()  [VARIABLES]  double  GOLDEN_SECTION  boolean  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	47	47	4	replace	    setAbsoluteAccuracy(1E-9);		compilable	  [FE]  AssertionError  testQuinticMin	18	4	add
