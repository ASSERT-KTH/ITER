bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  w,  d);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  w,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  w,  d);	  f    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)	59	None	replace
2	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  d,  w);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  d,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  d,  w);	  f    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)	59	None	replace
3	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  d,  v);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  d,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  d,  v);	  f    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)	58	None	replace
4	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(f,  y);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(f,  y);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(f,  y);	  double    f    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	68	None	replace
5	[BUG]  [BUGGY]  t  =  computeInternalValue(f,  d);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeInternalValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeInternalValue(f,  d);	  t    =    computeInternalValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
6	[BUG]  [BUGGY]  t  =  computeInternalValue(f,  w);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeInternalValue(f,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeInternalValue(f,  w);	  t    =    computeInternalValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
7	[BUG]  [BUGGY]  t  =  computeInternalValue(f,  v);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeInternalValue(f,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeInternalValue(f,  v);	  t    =    computeInternalValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
8	[BUG]  [BUGGY]  t  =  computeInternalValue(f,  y);  [CE]  cannot  find  symbol  y  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeInternalValue(f,  y);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeInternalValue(f,  y);	  t    =    computeInternalValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol  y	85	None	replace
9	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  w,  v);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  w,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  w,  v);	  f    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)	60	None	replace
10	[BUG]  [BUGGY]  int  fx  =  computeObjectiveValue(f,  a);  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  int  fx  =  computeObjectiveValue(f,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	int  fx  =  computeObjectiveValue(f,  a);	  double    fx    =    computeObjectiveValue(f,    a);    int    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  possible  loss  of  precision	52	None	replace
11	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(f,  a);  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  fx  =  computeObjectiveValue(f,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	fx  =  computeObjectiveValue(f,  a);	  double    fx    =    computeObjectiveValue(f,    a);    int    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol  fx	52	None	replace
12	[BUG]  [BUGGY]  Integer  fx  =  computeObjectiveValue(f,  a);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Integer  fx  =  computeObjectiveValue(f,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	Integer  fx  =  computeObjectiveValue(f,  a);	  double    fx    =    computeObjectiveValue(f,    a);    int    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  incompatible  types	52	None	replace
13	[BUG]  [BUGGY]  if(isMinim)  {  int  max  =  computeObjectiveValue(f,  x);  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  int  max  =  computeObjectiveValue(f,  x);  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  int  max  =  computeObjectiveValue(f,  x);  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    b;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
14	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  hi;  }  [CE]  reached  end  of  file  while  parsing  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  hi;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  hi;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    b;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Double  fx  =  computeObjectiveValue(f,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	Double  fx  =  computeObjectiveValue(f,  a);	  double    fx    =    computeObjectiveValue(f,    a);    Double    fx    =    computeObjectiveValue(f,    a);    	compilable	  [FE]  AssertionError  	51	5	replace
16	[BUG]  [BUGGY]  Double  fx  =  computeObjectiveValue(f,  a);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Double  fx  =  computeObjectiveValue(f,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	Double  fx  =  computeObjectiveValue(f,  a);	  double    fx    =    computeObjectiveValue(f,    a);    Double    fx    =    computeObjectiveValue(f,    a);    	compilable	  [FE]  AssertionError  	51	5	replace
17	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  Double  fx  =  computeObjectiveValue(f,  a);  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  Double  fx  =  computeObjectiveValue(f,  a);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  Double  fx  =  computeObjectiveValue(f,  a);  }	  double    fx    =    computeObjectiveValue(f,    a);    Double    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	51	None	replace
18	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(f,  d);  [CE]  cannot  find  symbol  fx  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  fx  =  computeObjectiveValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	fx  =  computeObjectiveValue(f,  d);	  double    fx    =    computeObjectiveValue(f,    d);    double    fx    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol  fx	21	None	replace
19	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(a,  f);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(a,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(a,  f);	  double    fx    =    computeFunctionValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
20	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(lo,  a);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(lo,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(lo,  a);	  double    fx    =    computeFunctionValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
21	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(f,  a,  v);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(f,  a,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(f,  a,  v);	  double    fx    =    computeFunctionValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
22	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  w,  d);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(f,  w,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(f,  w,  d);	  double    fx    =    computeObjectiveValue(f,    w);    double    fx    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)	1	None	replace
23	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(f,  w);  [CE]  cannot  find  symbol  fx  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  fx  =  computeObjectiveValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	fx  =  computeObjectiveValue(f,  w);	  double    fx    =    computeObjectiveValue(f,    w);    double    fx    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  cannot  find  symbol  fx	1	None	replace
24	[BUG]  [BUGGY]  int  fx  =  computeObjectiveValue(f,  t);  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  int  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	int  fx  =  computeObjectiveValue(f,  t);	  double    fx    =    computeObjectiveValue(f,    t);    int    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  possible  loss  of  precision	64	None	replace
25	[BUG]  [BUGGY]  Integer  fx  =  computeObjectiveValue(f,  t);  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Integer  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	Integer  fx  =  computeObjectiveValue(f,  t);	  double    fx    =    computeObjectiveValue(f,    t);    int    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  incompatible  types	64	None	replace
26	[BUG]  [BUGGY]  int  fx  =  computeIntegerValue(f,  t);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  int  fx  =  computeIntegerValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	int  fx  =  computeIntegerValue(f,  t);	  double    fx    =    computeObjectiveValue(f,    t);    int    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
27	[BUG]  [BUGGY]  b  =  lo;  [CE]  cannot  find  symbol  fx  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  b  =  lo;  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	b  =  lo;	  a    =    lo;    b    =    lo;    	non-compiled	[CE]  cannot  find  symbol  fx	15	None	replace
28	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  v,  x);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  v,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  v,  x);	  f    =    computeObjectiveValue(f,    x,    v);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)	89	None	replace
29	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  w,  x,  v);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  w,  x,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  w,  x,  v);	  f    =    computeObjectiveValue(f,    x,    v);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)	89	None	replace
30	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  x,  w,  v);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  x,  w,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  x,  w,  v);	  f    =    computeObjectiveValue(f,    x,    v);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)	89	None	replace
31	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.MAXIMIZE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fx  [FE]                      AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.MAXIMIZE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim  &&  goalType  ==  GoalType.MAXIMIZE)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim    &&    goalType    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  fx	55	None	replace
32	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.MINIMUM)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  MINIMUM  [FE]                        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.MINIMUM)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim  &&  goalType  ==  GoalType.MINIMUM)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim    &&    goalType    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  MINIMUM	55	None	replace
33	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  SECTION  [FE]                          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim  &&  goalType  ==  GoalType.SECTION)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim    &&    goalType    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  SECTION	55	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    d);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);	  	compilable	  [FE]  AssertionError  	8	4	add
35	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    d);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);	  	compilable	  [FE]  AssertionError  	8	4	add
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    d);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  d);	  	compilable	  [FE]  AssertionError  	8	4	add
37	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  d);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    d);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  d);	  	compilable	  [FE]  AssertionError  	8	4	add
38	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  y);  t  =  computeObjectiveValue(f,  d);  [CE]  cannot  find  symbol  y  [FE]        AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  y);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    d);    t  =  computeObjectiveValue(f,  y);  t  =  computeObjectiveValue(f,  d);	  	non-compiled	[CE]  cannot  find  symbol  y	8	None	add
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    d);    t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  d);	  	compilable	  [FE]  AssertionError  	8	4	add
40	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  d);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    d);    t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  d);	  	compilable	  [FE]  AssertionError  	8	4	add
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    d);    t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  d);	  	compilable	  [FE]  AssertionError  	8	4	add
42	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  d);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    d);    t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  d);	  	compilable	  [FE]  AssertionError  	8	4	add
43	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(f,  t);  [CE]  cannot  find  symbol  fx  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	fx  =  computeObjectiveValue(f,  t);	  double    fx    =    computeObjectiveValue(f,    t);    double    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol  fx	62	None	replace
44	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  }	  double    fx    =    computeObjectiveValue(f,    t);    double    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	62	None	replace
45	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  v);  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  v);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  v);  }	  double    fx    =    computeObjectiveValue(f,    t);    double    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	62	None	replace
46	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MINIMUM)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  MINIMUM  [FE]                      AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.MINIMUM)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.MINIMUM)  {  throw  new  IllegalArgumentException( " ");  }	  if(goalType    ==    GoalType.NUMBER)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  MINIMUM	73	None	replace
47	[BUG]  [BUGGY]  If(goalType  ==  GoalType.NUMBER)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  If(goalType  ==  GoalType.NUMBER)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	If(goalType  ==  GoalType.NUMBER)  {  throw  new  IllegalArgumentException( " ");  }	  if(goalType    ==    GoalType.NUMBER)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	73	None	replace
48	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  w);  f  =  computeObjectiveValue(f,  x);  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeObjectiveValue(f,  w);  f  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeObjectiveValue(f,  w);  f  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    f    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  incompatible  types	75	None	replace
49	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  v);  f  =  computeObjectiveValue(f,  x);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeObjectiveValue(f,  v);  f  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeObjectiveValue(f,  v);  f  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    f    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  incompatible  types	75	None	replace
50	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  d);  f  =  computeObjectiveValue(f,  x);  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeObjectiveValue(f,  d);  f  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeObjectiveValue(f,  d);  f  =  computeObjectiveValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    f    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  incompatible  types	75	None	replace
51	[BUG]  [BUGGY]  double  eps  =  computeObjectiveValue(f,  y);  [CE]  variable  eps  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  eps  =  computeObjectiveValue(f,  y);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  eps  =  computeObjectiveValue(f,  y);	  double    eps    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  variable  eps  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	31	None	replace
52	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(d,  f);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(d,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(d,  f);	  double    fx    =    computeLocalValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
53	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(l,  d);  [CE]  cannot  find  symbol  l  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(l,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(l,  d);	  double    fx    =    computeLocalValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol  l	32	None	replace
54	[BUG]  [BUGGY]  double  fx  =  computeIntegerValue(t,  f);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeIntegerValue(t,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeIntegerValue(t,  f);	  double    fx    =    computeIntegerValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
55	[BUG]  [BUGGY]  double  fx  =  computeIntegerValue(lo,  f,  t);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeIntegerValue(lo,  f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeIntegerValue(lo,  f,  t);	  double    fx    =    computeIntegerValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
56	[BUG]  [BUGGY]  double  fx  =  computeIntegerValue(v,  t);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeIntegerValue(v,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeIntegerValue(v,  t);	  double    fx    =    computeIntegerValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
57	[BUG]  [BUGGY]  double  fx  =  computeIntegerValue(l,  t);  [CE]  cannot  find  symbol  l  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeIntegerValue(l,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeIntegerValue(l,  t);	  double    fx    =    computeIntegerValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol  l	38	None	replace
58	[BUG]  [BUGGY]  fx  =  computeLocalValue(f,  a);  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  fx  =  computeLocalValue(f,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	fx  =  computeLocalValue(f,  a);	  double    fx    =    computeObjectiveValue(f,    a);    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol  fx	53	None	replace
59	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(f,  v);  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  fx  =  computeObjectiveValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	fx  =  computeObjectiveValue(f,  v);	  double    fx    =    computeObjectiveValue(f,    v);    fx    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  cannot  find  symbol  fx	45	None	replace
60	[BUG]  [BUGGY]  fx  =  computeFunctionValue(f,  v);  [CE]  cannot  find  symbol  fx  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  fx  =  computeFunctionValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	fx  =  computeFunctionValue(f,  v);	  double    fx    =    computeObjectiveValue(f,    v);    fx    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  cannot  find  symbol  fx	45	None	replace
61	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MINIMUM)  {  a  =  mid;  b  =  lo;  }  [CE]  cannot  find  symbol  MINIMUM  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.MINIMUM)  {  a  =  mid;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.MINIMUM)  {  a  =  mid;  b  =  lo;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    a    =    mid;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  MINIMUM	13	None	replace
62	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(v,  f);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(v,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(v,  f);	  double    fx    =    computeLocalValue(f,    v);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
63	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(t,  v);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(t,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(t,  v);	  double    fx    =    computeLocalValue(f,    v);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
64	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  v);  [CE]  cannot  find  symbol  fx  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeObjectiveValue(f,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeObjectiveValue(f,  v);	          t    =    computeObjectiveValue(f,    x);    t    =    computeObjectiveValue(f,    q);    	non-compiled	[CE]  cannot  find  symbol  fx	10	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Double  fx  =  computeObjectiveValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	Double  fx  =  computeObjectiveValue(f,  d);	  double    fx    =    computeObjectiveValue(f,    d);    Double    fx    =    computeObjectiveValue(f,    d);    	compilable	  [FE]  AssertionError  	22	6	replace
66	[BUG]  [BUGGY]  Double  fx  =  computeObjectiveValue(f,  d);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Double  fx  =  computeObjectiveValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	Double  fx  =  computeObjectiveValue(f,  d);	  double    fx    =    computeObjectiveValue(f,    d);    Double    fx    =    computeObjectiveValue(f,    d);    	compilable	  [FE]  AssertionError  	22	6	replace
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Double  fx  =  computeObjectiveValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	Double  fx  =  computeObjectiveValue(f,  w);	  double    fx    =    computeObjectiveValue(f,    d);    Double    fx    =    computeObjectiveValue(f,    d);    	compilable	  [FE]  AssertionError  	22	4	replace
68	[BUG]  [BUGGY]  Double  fx  =  computeObjectiveValue(f,  w);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Double  fx  =  computeObjectiveValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	Double  fx  =  computeObjectiveValue(f,  w);	  double    fx    =    computeObjectiveValue(f,    d);    Double    fx    =    computeObjectiveValue(f,    d);    	compilable	  [FE]  AssertionError  	22	4	replace
69	[BUG]  [BUGGY]  int  fx  =  computeObjectiveValue(f,  d);  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  int  fx  =  computeObjectiveValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	int  fx  =  computeObjectiveValue(f,  d);	  double    fx    =    computeObjectiveValue(f,    w);    int    fx    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
70	[BUG]  [BUGGY]  int  fx  =  computeObjectiveValue(f,  w);  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  int  fx  =  computeObjectiveValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	int  fx  =  computeObjectiveValue(f,  w);	  double    fx    =    computeObjectiveValue(f,    w);    int    fx    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
71	[BUG]  [BUGGY]  Integer  fx  =  computeObjectiveValue(f,  w);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Integer  fx  =  computeObjectiveValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	Integer  fx  =  computeObjectiveValue(f,  w);	  double    fx    =    computeObjectiveValue(f,    w);    int    fx    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  incompatible  types	3	None	replace
72	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  w,  d,  x);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  w,  d,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  w,  d,  x);	  f    =    computeObjectiveValue(f,    d,    x);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)	61	None	replace
73	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  d,  w,  x);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)  [FE]                      AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  d,  w,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  d,  w,  x);	  f    =    computeObjectiveValue(f,    d,    x);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)	61	None	replace
74	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  x,  d);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)  [FE]                        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  x,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  x,  d);	  f    =    computeObjectiveValue(f,    d,    x);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)	61	None	replace
75	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  v,  d,  x);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)  [FE]                          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  v,  d,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  v,  d,  x);	  f    =    computeObjectiveValue(f,    d,    x);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)	61	None	replace
76	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SYNTHETIC)  {  a  =  b;  b  =  lo;  }  [CE]  cannot  find  symbol  SYNTHETIC  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.SYNTHETIC)  {  a  =  b;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.SYNTHETIC)  {  a  =  b;  b  =  lo;  }	  if(goalType    ==    GoalType.SECTION)    {    a    =    b;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC	14	None	replace
77	[BUG]  [BUGGY]  t  =  computeRealFunction(f,  w);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeRealFunction(f,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeRealFunction(f,  w);	  t    =    computeRealFunction(f,    x);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
78	[BUG]  [BUGGY]  t  =  computeRealFunction(f,  d);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeRealFunction(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeRealFunction(f,  d);	  t    =    computeRealFunction(f,    x);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
79	[BUG]  [BUGGY]  t  =  computeRealFunction(f,  v);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeRealFunction(f,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeRealFunction(f,  v);	  t    =    computeRealFunction(f,    x);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
80	[BUG]  [BUGGY]  t  =  computeRealFunction(f,  e);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeRealFunction(f,  e);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeRealFunction(f,  e);	  t    =    computeRealFunction(f,    x);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
81	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(a,  f);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(a,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(a,  f);	  double    fx    =    computeLocalValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
82	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(lo,  a);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(lo,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(lo,  a);	  double    fx    =    computeLocalValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
83	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(t,  a);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(t,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(t,  a);	  double    fx    =    computeLocalValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
84	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(l,  a);  [CE]  cannot  find  symbol  l  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(l,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(l,  a);	  double    fx    =    computeLocalValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol  l	19	None	replace
85	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  b);  double  fx  =  computeObjectiveValue(f,  b);  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(f,  b);  double  fx  =  computeObjectiveValue(f,  b);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double    fx    =    computeObjectiveValue(f,    b);    double  fx  =  computeObjectiveValue(f,  b);	  	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	79	None	add
86	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  b);  Double  fx  =  computeObjectiveValue(f,  b);  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]      AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(f,  b);  Double  fx  =  computeObjectiveValue(f,  b);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double    fx    =    computeObjectiveValue(f,    b);    Double  fx  =  computeObjectiveValue(f,  b);	  	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	79	None	add
87	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  b);  int  fx  =  computeObjectiveValue(f,  b);  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(f,  b);  int  fx  =  computeObjectiveValue(f,  b);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double    fx    =    computeObjectiveValue(f,    b);    int  fx  =  computeObjectiveValue(f,  b);	  	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	79	None	add
88	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  b);  fx  =  computeObjectiveValue(f,  b);  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(f,  b);  fx  =  computeObjectiveValue(f,  b);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double    fx    =    computeObjectiveValue(f,    b);    fx  =  computeObjectiveValue(f,  b);	  	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	79	None	add
89	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SEMI)  {  a  =  mid;  b  =  lo;  }  [CE]  cannot  find  symbol  SEMI  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.SEMI)  {  a  =  mid;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.SEMI)  {  a  =  mid;  b  =  lo;  }	  if(goalType    ==    GoalType.SECTION)    {    a    =    mid;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  SEMI	16	None	replace
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Double  fx  =  computeObjectiveValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	Double  fx  =  computeObjectiveValue(f,  v);	  double    fx    =    computeObjectiveValue(f,    v);    Double    fx    =    computeObjectiveValue(f,    v);    	compilable	  [FE]  AssertionError  	43	4	replace
91	[BUG]  [BUGGY]  Double  fx  =  computeObjectiveValue(f,  v);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Double  fx  =  computeObjectiveValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	Double  fx  =  computeObjectiveValue(f,  v);	  double    fx    =    computeObjectiveValue(f,    v);    Double    fx    =    computeObjectiveValue(f,    v);    	compilable	  [FE]  AssertionError  	43	4	replace
92	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(t,  f);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(t,  f);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(t,  f);	  double    f    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	91	None	replace
93	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(t,  w);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(t,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(t,  w);	  double    f    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	91	None	replace
94	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(v,  t);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(v,  t);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(v,  t);	  double    f    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	91	None	replace
95	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(t,  a);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(t,  a);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(t,  a);	  double    f    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	91	None	replace
96	[BUG]  [BUGGY]  fx  =  computeLocalValue(f,  t);  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  fx  =  computeLocalValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	fx  =  computeLocalValue(f,  t);	  double    fx    =    computeObjectiveValue(f,    t);    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol  fx	65	None	replace
97	[BUG]  [BUGGY]  fx  =  computeFunctionValue(f,  t);  [CE]  cannot  find  symbol  fx  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  fx  =  computeFunctionValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	fx  =  computeFunctionValue(f,  t);	  double    fx    =    computeObjectiveValue(f,    t);    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol  fx	65	None	replace
98	[BUG]  [BUGGY]  t  =  computeIntermediateValue(f,  d);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeIntermediateValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeIntermediateValue(f,  d);	          t    =    computeObjectiveValue(f,    x);    t    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
99	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(w,  f);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(w,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(w,  f);	  double    fx    =    computeLocalValue(f,    w);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
100	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(f,  w,  d);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(f,  w,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(f,  w,  d);	  double    fx    =    computeLocalValue(f,    w);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
101	[BUG]  [BUGGY]  if(isMinim)  {  a  =  mid;  b  =  lo;  }  [CE]  cannot  find  symbol  fx  [FE]                      AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  a  =  mid;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  a  =  mid;  b  =  lo;  }	  if(isMinim)    {    a    =    hi;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  fx	78	None	replace
102	[BUG]  [BUGGY]  a  =  isMinim;  b  =  lo;  [CE]  incompatible  types  [FE]                        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  a  =  isMinim;  b  =  lo;  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	a  =  isMinim;  b  =  lo;	  if(isMinim)    {    a    =    hi;    b    =    lo;    }    	non-compiled	[CE]  incompatible  types	78	None	replace
103	[BUG]  [BUGGY]  while(isMinim)  {  a  =  mid;  b  =  lo;  }  [CE]  cannot  find  symbol  fx  [FE]                          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  while(isMinim)  {  a  =  mid;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	while(isMinim)  {  a  =  mid;  b  =  lo;  }	  if(isMinim)    {    a    =    hi;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  fx	78	None	replace
104	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	5	1	add
105	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  timeout  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	5	1	add
106	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	5	1	add
107	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);  timeout  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	5	1	add
108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);	  timeout    	compilable	  [FE]  AssertionError  	5	4	add
109	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);	  timeout    	compilable	  [FE]  AssertionError  	5	4	add
110	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);  t  =  computeObjectiveValue(f,  x);  [CE]  cannot  find  symbol  y  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  y);  t  =  computeObjectiveValue(f,  x);	  timeout    	non-compiled	[CE]  cannot  find  symbol  y	5	None	add
111	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);  [CE]  cannot  find  symbol  y  [FE]                      AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  y);	  timeout    	non-compiled	[CE]  cannot  find  symbol  y	5	None	add
112	[BUG]  [BUGGY]  t  =  computeLocalValue(f,  w);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeLocalValue(f,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeLocalValue(f,  w);	  t    =    computeLocalValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
113	[BUG]  [BUGGY]  t  =  computeLocalValue(f,  d);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeLocalValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeLocalValue(f,  d);	  t    =    computeLocalValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
114	[BUG]  [BUGGY]  t  =  computeLocalValue(f,  v);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeLocalValue(f,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeLocalValue(f,  v);	  t    =    computeLocalValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
115	[BUG]  [BUGGY]  t  =  computeLocalValue(f,  x,  w);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeLocalValue(f,  x,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeLocalValue(f,  x,  w);	  t    =    computeLocalValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
116	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(a,  b);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double)  [FE]    AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(a,  b);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(a,  b);	  double    fx    =    computeObjectiveValue(f,    b);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double)	80	None	replace
117	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(f,  b);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(f,  b);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(f,  b);	  double    fx    =    computeObjectiveValue(f,    b);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
118	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(x,  v);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(x,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(x,  v);	  double    f    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	81	None	replace
119	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  a  =  hi;  b  =  lo;  }  [CE]  cannot  find  symbol  SECTION  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.SECTION)  {  a  =  hi;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.SECTION)  {  a  =  hi;  b  =  lo;  }	  if(goalType    ==    GoalType.GOLDEN_FOR)    {    a    =    hi;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  SECTION	77	None	replace
120	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  b;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  b;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  b;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    b;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
121	[BUG]  [BUGGY]  while(isMinim)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  while(isMinim)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	while(isMinim)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    b;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
122	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  count;  i++)  {  a  =  b;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  count;  i++)  {  a  =  b;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  for(int  i  =  0;  i  <  count;  i++)  {  a  =  b;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    b;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
123	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  b;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  b;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  b;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    for(int    i    =    0;    i    <    mid;    i++)    {    a    =    b;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	40	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  b;  }  [CE]  cannot  find  symbol  fx  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  b;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	for(int  i  =  0;  i  <  mid;  i++)  {  a  =  b;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    for(int    i    =    0;    i    <    mid;    i++)    {    a    =    b;    }    	non-compiled	[CE]  cannot  find  symbol  fx	40	None	replace
125	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(t,  d);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(t,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(t,  d);	  double    f    =    computeObjectiveValue(t,    x);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	66	None	replace
126	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(t,  v);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(t,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(t,  v);	  double    f    =    computeObjectiveValue(t,    x);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	66	None	replace
127	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(t,  y);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(t,  y);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(t,  y);	  double    f    =    computeObjectiveValue(t,    x);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	66	None	replace
128	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(w,  x);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(w,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(w,  x);	  double    f    =    computeObjectiveValue(v,    x);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	67	None	replace
129	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(v,  d);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(v,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(v,  d);	  double    f    =    computeObjectiveValue(v,    x);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	67	None	replace
130	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(v,  w);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(v,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(v,  w);	  double    f    =    computeObjectiveValue(v,    x);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	67	None	replace
131	[BUG]  [BUGGY]  Integer  fx  =  computeObjectiveValue(f,  d);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Integer  fx  =  computeObjectiveValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	Integer  fx  =  computeObjectiveValue(f,  d);	  double    fx    =    computeObjectiveValue(f,    d);    int    fx    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  incompatible  types	23	None	replace
132	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(t,  f);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(t,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(t,  f);	  double    fx    =    computeLocalValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
133	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(lo,  f,  t);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(lo,  f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(lo,  f,  t);	  double    fx    =    computeLocalValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
134	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(lo,  t);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(lo,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(lo,  t);	  double    fx    =    computeLocalValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
135	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(l,  t);  [CE]  cannot  find  symbol  l  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(l,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(l,  t);	  double    fx    =    computeLocalValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol  l	36	None	replace
136	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(a,  v,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(a,  v,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(a,  v,  f);	  double    fx    =    computeObjectiveValue(a,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	18	None	replace
137	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(a,  f,  w);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction,double)  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(a,  f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(a,  f,  w);	  double    fx    =    computeObjectiveValue(a,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction,double)	18	None	replace
138	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(a,  f,  v);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction,double)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(a,  f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(a,  f,  v);	  double    fx    =    computeObjectiveValue(a,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction,double)	18	None	replace
139	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(a,  w,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(a,  w,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(a,  w,  f);	  double    fx    =    computeObjectiveValue(a,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	18	None	replace
140	[BUG]  [BUGGY]  if(b  ==  GoalType.GOLDEN_SECTION)  {  a  =  mid;  b  =  lo;  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(b  ==  GoalType.GOLDEN_SECTION)  {  a  =  mid;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(b  ==  GoalType.GOLDEN_SECTION)  {  a  =  mid;  b  =  lo;  }	  if(b    ==    GoalType.GOLDEN_SECTION)    {    a    =    b;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	90	None	replace
141	[BUG]  [BUGGY]  if(b  ==  GoalType.GOLDEN_SECTION)  {  a  =  hi;  b  =  lo;  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(b  ==  GoalType.GOLDEN_SECTION)  {  a  =  hi;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(b  ==  GoalType.GOLDEN_SECTION)  {  a  =  hi;  b  =  lo;  }	  if(b    ==    GoalType.GOLDEN_SECTION)    {    a    =    b;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	90	None	replace
142	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(l,  w);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(l,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(l,  w);	  double    f    =    computeObjectiveValue(l,    x);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	82	None	replace
143	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(l,  v);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(l,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(l,  v);	  double    f    =    computeObjectiveValue(l,    x);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	82	None	replace
144	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(l,  d);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(l,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(l,  d);	  double    f    =    computeObjectiveValue(l,    x);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	82	None	replace
145	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(t,  w,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(t,  w,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(t,  w,  f);	  double    fx    =    computeObjectiveValue(t,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	35	None	replace
146	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(t,  a,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(t,  a,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(t,  a,  f);	  double    fx    =    computeObjectiveValue(t,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	35	None	replace
147	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(t,  v,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(t,  v,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(t,  v,  f);	  double    fx    =    computeObjectiveValue(t,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	35	None	replace
148	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(t,  d,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(t,  d,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(t,  d,  f);	  double    fx    =    computeObjectiveValue(t,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	35	None	replace
149	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(f,  w);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(f,  w);	  double    fx    =    computeFunctionValue(f,    v);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
150	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(v,  f);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(v,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(v,  f);	  double    fx    =    computeFunctionValue(f,    v);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
151	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  w,  x);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  w,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  w,  x);	  f    =    computeObjectiveValue(f,    x,    w);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)	83	None	replace
152	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  v,  w);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  v,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  v,  w);	  f    =    computeObjectiveValue(f,    x,    w);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)	83	None	replace
153	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  x,  d,  w);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  x,  d,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  x,  d,  w);	  f    =    computeObjectiveValue(f,    x,    w);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)	83	None	replace
154	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  hi;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  hi;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  hi;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    hi;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	replace
155	[BUG]  [BUGGY]  while(isMinim)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  hi;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  while(isMinim)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  hi;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	while(isMinim)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  hi;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    hi;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	replace
156	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  count;  i++)  {  a  =  hi;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  count;  i++)  {  a  =  hi;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  for(int  i  =  0;  i  <  count;  i++)  {  a  =  hi;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    hi;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	replace
157	[BUG]  [BUGGY]  t  =  computeIntermediateValue(f,  w);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeIntermediateValue(f,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeIntermediateValue(f,  w);	  t    =    computeIntermediateValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
158	[BUG]  [BUGGY]  t  =  computeIntermediateValue(f,  v);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeIntermediateValue(f,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeIntermediateValue(f,  v);	  t    =    computeIntermediateValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
159	[BUG]  [BUGGY]  t  =  computeIntermediateValue(f,  y);  [CE]  cannot  find  symbol  y  [FE]                      AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeIntermediateValue(f,  y);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeIntermediateValue(f,  y);	  t    =    computeIntermediateValue(f,    x);    	non-compiled	[CE]  cannot  find  symbol  y	48	None	replace
160	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(a,  t,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(a,  t,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(a,  t,  f);	  double    fx    =    computeObjectiveValue(f,    t,    a);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	87	None	replace
161	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(t,  f,  a);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction,double)  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(t,  f,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(t,  f,  a);	  double    fx    =    computeObjectiveValue(f,    t,    a);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction,double)	87	None	replace
162	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(a,  f,  t);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction,double)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(a,  f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(a,  f,  t);	  double    fx    =    computeObjectiveValue(f,    t,    a);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction,double)	87	None	replace
163	[BUG]  [BUGGY]  Double  fx  =  computeObjectiveValue(a,  t,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Double  fx  =  computeObjectiveValue(a,  t,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	Double  fx  =  computeObjectiveValue(a,  t,  f);	  double    fx    =    computeObjectiveValue(f,    t,    a);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	87	None	replace
164	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(t,  f);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(t,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(t,  f);	  double    fx    =    computeFunctionValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
165	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(lo,  f,  t);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(lo,  f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(lo,  f,  t);	  double    fx    =    computeFunctionValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Double  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	Double  fx  =  computeObjectiveValue(f,  t);	  double    fx    =    computeObjectiveValue(f,    t);    Double    fx    =    computeObjectiveValue(f,    t);    	compilable	  [FE]  AssertionError  	63	6	replace
167	[BUG]  [BUGGY]  Double  fx  =  computeObjectiveValue(f,  t);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Double  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	Double  fx  =  computeObjectiveValue(f,  t);	  double    fx    =    computeObjectiveValue(f,    t);    Double    fx    =    computeObjectiveValue(f,    t);    	compilable	  [FE]  AssertionError  	63	6	replace
168	[BUG]  [BUGGY]  int  fx  =  computeObjectiveValue(f,  v);  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  int  fx  =  computeObjectiveValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	int  fx  =  computeObjectiveValue(f,  v);	  double    fx    =    computeObjectiveValue(f,    v);    int    fx    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  possible  loss  of  precision	44	None	replace
169	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(x,  d);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(x,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(x,  d);	  double    f    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	69	None	replace
170	[BUG]  [BUGGY]  double  f  =  computeObjectiveValue(w,  d);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  f  =  computeObjectiveValue(w,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  f  =  computeObjectiveValue(w,  d);	  double    f    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	69	None	replace
171	[BUG]  [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  While(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	While(isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	54	None	replace
172	[BUG]  [BUGGY]  while(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fx  [FE]                      AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  while(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	while(isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  fx	54	None	replace
173	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(d,  w,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(d,  w,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(d,  w,  f);	  double    fx    =    computeObjectiveValue(d,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	34	None	replace
174	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(d,  v,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(d,  v,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(d,  v,  f);	  double    fx    =    computeObjectiveValue(d,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	34	None	replace
175	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(d,  f,  w);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction,double)  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(d,  f,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(d,  f,  w);	  double    fx    =    computeObjectiveValue(d,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction,double)	34	None	replace
176	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(d,  f);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(d,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(d,  f);	  double    fx    =    computeFunctionValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
177	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(f,  d,  w);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(f,  d,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(f,  d,  w);	  double    fx    =    computeFunctionValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
178	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  double  fx  =  computeObjectiveValue(f,  a);  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  double  fx  =  computeObjectiveValue(f,  a);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  double  fx  =  computeObjectiveValue(f,  a);  }	  double    fx    =    computeObjectiveValue(f,    a);    double    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	50	None	replace
179	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  double  fx  =  computeObjectiveValue(f,  a);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  double  fx  =  computeObjectiveValue(f,  a);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  double  fx  =  computeObjectiveValue(f,  a);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    fx    =    computeObjectiveValue(f,    a);    double    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	50	None	replace
180	[BUG]  [BUGGY]  t  =  computeDigits(f,  x);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeDigits(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeDigits(f,  x);	          t    =    computeObjectiveValue(f,    x);    t    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
181	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(a,  b,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(a,  b,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(a,  b,  f);	  double    fx    =    computeObjectiveValue(a,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	18	None	replace
182	[BUG]  [BUGGY]  double  fx  =  computeIntegerValue(lo,  t);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeIntegerValue(lo,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeIntegerValue(lo,  t);	  double    fx    =    computeIntegerValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
183	[BUG]  [BUGGY]  double  fx  =  computeIntegerValue(f,  mid);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeIntegerValue(f,  mid);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeIntegerValue(f,  mid);	  double    fx    =    computeIntegerValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
184	[BUG]  [BUGGY]  double  fx  =  computeIntegerValue(f,  v);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeIntegerValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeIntegerValue(f,  v);	  double    fx    =    computeIntegerValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
185	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(lo,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(lo,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(lo,  f);	  double    fx    =    computeObjectiveValue(d,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction)	34	None	replace
186	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(l,  f);  [CE]  cannot  find  symbol  l  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(l,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(l,  f);	  double    fx    =    computeObjectiveValue(d,    f);    	non-compiled	[CE]  cannot  find  symbol  l	34	None	replace
187	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  double  fx  =  computeObjectiveValue(f,  b);  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  double  fx  =  computeObjectiveValue(f,  b);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  double  fx  =  computeObjectiveValue(f,  b);  }	  double    fx    =    computeObjectiveValue(f,    a);    double    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	50	None	replace
188	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  x,  v,  w);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  x,  v,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  x,  v,  w);	  f    =    computeObjectiveValue(f,    x,    w);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)	83	None	replace
189	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  a,  t);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(f,  a,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(f,  a,  t);	  double    fx    =    computeObjectiveValue(f,    t,    a);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)	87	None	replace
190	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  b,  t);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(f,  b,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(f,  b,  t);	  double    fx    =    computeObjectiveValue(f,    t,    a);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)	87	None	replace
191	[BUG]  [BUGGY]  a  =  low;  b  =  lo;  [CE]  cannot  find  symbol  low  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  a  =  low;  b  =  lo;  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	a  =  low;  b  =  lo;	  a    =    b;    b    =    lo;    	non-compiled	[CE]  cannot  find  symbol  low	12	None	replace
192	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  hi;  i++)  {  a  =  b;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  hi;  i++)  {  a  =  b;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  for(int  i  =  0;  i  <  hi;  i++)  {  a  =  b;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    b;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
193	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(f,  b);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(f,  b);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(f,  b);	  double    fx    =    computeFunctionValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
194	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(f,  a,  f);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(f,  a,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(f,  a,  f);	  double    fx    =    computeFunctionValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
195	[BUG]  [BUGGY]  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fx  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  fx	54	None	replace
196	[BUG]  [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  if(goalType!=  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  if(goalType!=  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    b;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
197	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(f,  t,  a);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(f,  t,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(f,  t,  a);	  double    fx    =    computeFunctionValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
198	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  int  fx  =  computeObjectiveValue(f,  a);  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  int  fx  =  computeObjectiveValue(f,  a);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  int  fx  =  computeObjectiveValue(f,  a);  }	  double    fx    =    computeObjectiveValue(f,    a);    int    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	52	None	replace
199	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }	  double    fx    =    computeObjectiveValue(f,    t);    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol  fx	65	None	replace
200	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  v);  }  [CE]  cannot  find  symbol  fx  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  v);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  v);  }	  double    fx    =    computeObjectiveValue(f,    t);    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol  fx	65	None	replace
201	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fx  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    fx    =    computeObjectiveValue(f,    t);    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol  fx	65	None	replace
202	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(f,  t,  a);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(f,  t,  a);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(f,  t,  a);	  double    fx    =    computeLocalValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
203	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  x);  f  =  computeObjectiveValue(f,  v);  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeObjectiveValue(f,  x);  f  =  computeObjectiveValue(f,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeObjectiveValue(f,  x);  f  =  computeObjectiveValue(f,  v);	          t    =    computeObjectiveValue(f,    x);    f    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  incompatible  types	75	None	replace
204	[BUG]  [BUGGY]  t  =  computeRealFunction(f,  x,  e);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeRealFunction(f,  x,  e);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeRealFunction(f,  x,  e);	  t    =    computeRealFunction(f,    x);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
205	[BUG]  [BUGGY]  fx  =  computeFunctionValue(f,  d);  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  fx  =  computeFunctionValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	fx  =  computeFunctionValue(f,  d);	  double    fx    =    computeObjectiveValue(f,    d);    fx    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol  fx	24	None	replace
206	[BUG]  [BUGGY]  a  =  Mid;  b  =  lo;  [CE]  cannot  find  symbol  Mid  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  a  =  Mid;  b  =  lo;  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	a  =  Mid;  b  =  lo;	  a    =    hi;    b    =    lo;    	non-compiled	[CE]  cannot  find  symbol  Mid	70	None	replace
207	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  Double  fx  =  computeObjectiveValue(f,  d);  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  Double  fx  =  computeObjectiveValue(f,  d);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  Double  fx  =  computeObjectiveValue(f,  d);  }	  double    fx    =    computeObjectiveValue(f,    d);    Double    fx    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	22	None	replace
208	[BUG]  [BUGGY]  double  fx  =  computeFunctionValue(f,  d,  v);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeFunctionValue(f,  d,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeFunctionValue(f,  d,  v);	  double    fx    =    computeFunctionValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
209	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  d,  x,  v);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  d,  x,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  d,  x,  v);	  f    =    computeObjectiveValue(f,    x,    v);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)	89	None	replace
210	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  x,  d,  v);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  x,  d,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  x,  d,  v);	  f    =    computeObjectiveValue(f,    x,    v);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double,double)	89	None	replace
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  a  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    d);    a  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);	  	compilable	  [FE]  AssertionError  	8	5	add
212	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  a  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  a  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    d);    a  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);	  	compilable	  [FE]  AssertionError  	8	5	add
213	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  f  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  d);  f  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    d);    f  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  d);	  	non-compiled	[CE]  incompatible  types	8	None	add
214	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_FOR)  {  a  =  mid;  b  =  lo;  }  [CE]  cannot  find  symbol  GOLDEN_FOR  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.GOLDEN_FOR)  {  a  =  mid;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.GOLDEN_FOR)  {  a  =  mid;  b  =  lo;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    a    =    mid;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  GOLDEN_FOR	13	None	replace
215	[BUG]  [BUGGY]  if(isMinim)  {  a  =  lo;  b  =  lo;  }  else  {  computeObjectiveValue(f,  x);  }  [CE]  cannot  find  symbol  fx  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  a  =  lo;  b  =  lo;  }  else  {  computeObjectiveValue(f,  x);  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  a  =  lo;  b  =  lo;  }  else  {  computeObjectiveValue(f,  x);  }	  a    =    lo;    b    =    lo;    	non-compiled	[CE]  cannot  find  symbol  fx	15	None	replace
216	[BUG]  [BUGGY]  if(isMinim)  {  a  =  lo;  b  =  lo;  }  else  {  computeObjectiveValue(f,  t);  }  [CE]  cannot  find  symbol  fx  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  a  =  lo;  b  =  lo;  }  else  {  computeObjectiveValue(f,  t);  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  a  =  lo;  b  =  lo;  }  else  {  computeObjectiveValue(f,  t);  }	  a    =    lo;    b    =    lo;    	non-compiled	[CE]  cannot  find  symbol  fx	15	None	replace
217	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SYNTHETIC)  {  a  =  mid;  b  =  lo;  }  [CE]  cannot  find  symbol  SYNTHETIC  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.SYNTHETIC)  {  a  =  mid;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.SYNTHETIC)  {  a  =  mid;  b  =  lo;  }	  if(goalType    ==    GoalType.SECTION)    {    a    =    mid;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC	16	None	replace
218	[BUG]  [BUGGY]  if(isMinim)  {  a  =  low;  b  =  lo;  }  [CE]  cannot  find  symbol  low  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  a  =  low;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  a  =  low;  b  =  lo;  }	  if(isMinim)    {    a    =    lo;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  low	17	None	replace
219	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  fx  =  computeObjectiveValue(f,  a);  }  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  fx  =  computeObjectiveValue(f,  a);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  fx  =  computeObjectiveValue(f,  a);  }	  double    fx    =    computeObjectiveValue(f,    a);    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol  fx	53	None	replace
220	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  fx  =  computeObjectiveValue(f,  a);  }  else  {  fx  =  computeObjectiveValue(f,  a);  }  [CE]  cannot  find  symbol  fx  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  fx  =  computeObjectiveValue(f,  a);  }  else  {  fx  =  computeObjectiveValue(f,  a);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  fx  =  computeObjectiveValue(f,  a);  }  else  {  fx  =  computeObjectiveValue(f,  a);  }	  double    fx    =    computeObjectiveValue(f,    a);    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol  fx	53	None	replace
221	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  fx  =  computeObjectiveValue(f,  a);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fx  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  fx  =  computeObjectiveValue(f,  a);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  fx  =  computeObjectiveValue(f,  a);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    fx    =    computeObjectiveValue(f,    a);    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol  fx	53	None	replace
222	[BUG]  [BUGGY]  Integer  fx  =  computeObjectiveValue(f,  v);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Integer  fx  =  computeObjectiveValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	Integer  fx  =  computeObjectiveValue(f,  v);	  double    fx    =    computeObjectiveValue(f,    v);    int    fx    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  incompatible  types	44	None	replace
223	[BUG]  [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.MINIMIZE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fx  [FE]                      AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim  &&  goalType  ==  GoalType.MINIMIZE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim  &&  goalType  ==  GoalType.MINIMIZE)  {  throw  new  IllegalArgumentException( " ");  }	  if(isMinim    &&    goalType    ==    GoalType.GOLDEN_SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  fx	55	None	replace
224	[BUG]  [BUGGY]  if(isMinim)  {  a  =  GOLDEN_SECTION;  b  =  lo;  }  [CE]  cannot  find  symbol  fx  [FE]                      AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  a  =  GOLDEN_SECTION;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  a  =  GOLDEN_SECTION;  b  =  lo;  }	  if(isMinim)    {    a    =    hi;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  fx	78	None	replace
225	[BUG]  [BUGGY]  if(isMinim)  {  a  =  isMinim;  b  =  lo;  }  [CE]  incompatible  types  [FE]                        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  a  =  isMinim;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  a  =  isMinim;  b  =  lo;  }	  if(isMinim)    {    a    =    hi;    b    =    lo;    }    	non-compiled	[CE]  incompatible  types	78	None	replace
226	[BUG]  [BUGGY]  if(b  ==  GoalType.MINIMUM)  {  a  =  b;  b  =  lo;  }  [CE]  cannot  find  symbol  MINIMUM  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(b  ==  GoalType.MINIMUM)  {  a  =  b;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(b  ==  GoalType.MINIMUM)  {  a  =  b;  b  =  lo;  }	  if(b    ==    GoalType.GOLDEN_SECTION)    {    a    =    b;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  MINIMUM	90	None	replace
227	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(t,  b,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(t,  b,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(t,  b,  f);	  double    fx    =    computeObjectiveValue(t,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	35	None	replace
228	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(t,  lo,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(t,  lo,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(t,  lo,  f);	  double    fx    =    computeObjectiveValue(t,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	35	None	replace
229	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  a  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    a  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	5	1	add
230	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  a  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  timeout  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  a  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    a  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	5	1	add
231	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  Double  fx  =  computeObjectiveValue(f,  t);  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  Double  fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  Double  fx  =  computeObjectiveValue(f,  t);  }	  double    fx    =    computeObjectiveValue(f,    t);    Double    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	63	None	replace
232	[BUG]  [BUGGY]  a  =  mid;  b  =  hi;  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  a  =  mid;  b  =  hi;  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	a  =  mid;  b  =  hi;	  a    =    mid;    b    =    lo;    	non-compiled	[CE]  cannot  find  symbol  fx	26	None	replace
233	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(f,  mid);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(f,  mid);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(f,  mid);	  double    fx    =    computeLocalValue(f,    w);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
234	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  lo;  i++)  {  a  =  hi;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  lo;  i++)  {  a  =  hi;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  for(int  i  =  0;  i  <  lo;  i++)  {  a  =  hi;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    hi;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	replace
235	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  hi;  i++)  {  a  =  hi;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  hi;  i++)  {  a  =  hi;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  for(int  i  =  0;  i  <  hi;  i++)  {  a  =  hi;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    hi;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	replace
236	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  double  fx  =  computeObjectiveValue(f,  d);  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  double  fx  =  computeObjectiveValue(f,  d);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  double  fx  =  computeObjectiveValue(f,  d);  }	  double    fx    =    computeObjectiveValue(f,    d);    double    fx    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	21	None	replace
237	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  double  fx  =  computeObjectiveValue(f,  d);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  double  fx  =  computeObjectiveValue(f,  d);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  double  fx  =  computeObjectiveValue(f,  d);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    fx    =    computeObjectiveValue(f,    d);    double    fx    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	21	None	replace
238	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SEMI)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  SEMI  [FE]                        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.SEMI)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.SEMI)  {  throw  new  IllegalArgumentException( " ");  }	  if(goalType    ==    GoalType.SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  SEMI	74	None	replace
239	[BUG]  [BUGGY]  int  fx  =  computeObjectiveValue(f,  w  +  1);  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  int  fx  =  computeObjectiveValue(f,  w  +  1);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	int  fx  =  computeObjectiveValue(f,  w  +  1);	  double    fx    =    computeObjectiveValue(f,    w);    int    fx    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
240	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  fx  =  computeObjectiveValue(f,  b);  }  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  fx  =  computeObjectiveValue(f,  b);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  a);  fx  =  computeObjectiveValue(f,  b);  }	  double    fx    =    computeObjectiveValue(f,    a);    fx    =    computeObjectiveValue(f,    a);    	non-compiled	[CE]  cannot  find  symbol  fx	53	None	replace
241	[BUG]  [BUGGY]  t  =  computeRealFunction(f,  x,  v);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeRealFunction(f,  x,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeRealFunction(f,  x,  v);	  t    =    computeRealFunction(f,    x);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
242	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  w);  double  fx  =  computeObjectiveValue(f,  w);  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  w);  double  fx  =  computeObjectiveValue(f,  w);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  w);  double  fx  =  computeObjectiveValue(f,  w);  }	  double    fx    =    computeObjectiveValue(f,    w);    double    fx    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	1	None	replace
243	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  v);  double  fx  =  computeObjectiveValue(f,  v);  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  v);  double  fx  =  computeObjectiveValue(f,  v);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  v);  double  fx  =  computeObjectiveValue(f,  v);  }	  double    fx    =    computeObjectiveValue(f,    v);    double    fx    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	42	None	replace
244	[BUG]  [BUGGY]  if(v  <  =  0)  {  double  fx  =  computeObjectiveValue(f,  v);  double  fx  =  computeObjectiveValue(f,  v);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(v  <  =  0)  {  double  fx  =  computeObjectiveValue(f,  v);  double  fx  =  computeObjectiveValue(f,  v);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(v  <  =  0)  {  double  fx  =  computeObjectiveValue(f,  v);  double  fx  =  computeObjectiveValue(f,  v);  }	  double    fx    =    computeObjectiveValue(f,    v);    double    fx    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
245	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(lo,  d);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(lo,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(lo,  d);	  double    fx    =    computeLocalValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
246	[BUG]  [BUGGY]  double  dx  =  computeLocalValue(f,  d);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  dx  =  computeLocalValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  dx  =  computeLocalValue(f,  d);	  double    fx    =    computeLocalValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
247	[BUG]  [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  hi;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  hi;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  mid;  i++)  {  a  =  hi;  }	  if(goalType    ==    GoalType.GOLDEN_SECTION)    {    for(int    i    =    0;    i    <    mid;    i++)    {    a    =    b;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	40	None	replace
248	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(d,  f,  v);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction,double)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeObjectiveValue(d,  f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(d,  f,  v);	  double    fx    =    computeObjectiveValue(d,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,UnivariateRealFunction,double)	34	None	replace
249	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SIZE)  {  a  =  mid;  b  =  lo;  }  [CE]  cannot  find  symbol  SIZE  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.SIZE)  {  a  =  mid;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.SIZE)  {  a  =  mid;  b  =  lo;  }	  if(goalType    ==    GoalType.SECTION)    {    a    =    mid;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  SIZE	16	None	replace
250	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  fx  =  computeObjectiveValue(f,  d);  }  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  fx  =  computeObjectiveValue(f,  d);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  fx  =  computeObjectiveValue(f,  d);  }	  double    fx    =    computeObjectiveValue(f,    d);    fx    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol  fx	24	None	replace
251	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  fx  =  computeObjectiveValue(f,  d);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fx  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  fx  =  computeObjectiveValue(f,  d);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  fx  =  computeObjectiveValue(f,  d);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    fx    =    computeObjectiveValue(f,    d);    fx    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol  fx	24	None	replace
252	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  fx  =  computeObjectiveValue(f,  d);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  fx  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  fx  =  computeObjectiveValue(f,  d);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  d);  fx  =  computeObjectiveValue(f,  d);  }  else  {  throw  new  IllegalStateException( " ");  }	  double    fx    =    computeObjectiveValue(f,    d);    fx    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol  fx	24	None	replace
253	[BUG]  [BUGGY]  if(goalType  ==  GoalType.MINIMUM)  {  a  =  b;  b  =  lo;  }  [CE]  cannot  find  symbol  MINIMUM  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.MINIMUM)  {  a  =  b;  b  =  lo;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.MINIMUM)  {  a  =  b;  b  =  lo;  }	  if(goalType    ==    GoalType.MINIMUM)    {    a    =    hi;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  MINIMUM	71	None	replace
254	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  w;  i++)  {  a  =  hi;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  w;  i++)  {  a  =  hi;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  for(int  i  =  0;  i  <  w;  i++)  {  a  =  hi;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    hi;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	replace
255	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  b;  i++)  {  a  =  hi;  }  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  b;  i++)  {  a  =  hi;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  for(int  i  =  0;  i  <  b;  i++)  {  a  =  hi;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    hi;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	replace
256	[BUG]  [BUGGY]  double  eps  =  computeObjectiveValue(f,  d,  v);  [CE]  variable  eps  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  eps  =  computeObjectiveValue(f,  d,  v);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  eps  =  computeObjectiveValue(f,  d,  v);	  double    eps    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  variable  eps  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	28	None	replace
257	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  w;  i++)  {  a  =  b;  }  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  w;  i++)  {  a  =  b;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  for(int  i  =  0;  i  <  w;  i++)  {  a  =  b;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    b;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
258	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SIZE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  SIZE  [FE]                        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.SIZE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.SIZE)  {  throw  new  IllegalArgumentException( " ");  }	  if(goalType    ==    GoalType.SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  SIZE	74	None	replace
259	[BUG]  [BUGGY]  if(goalType  ==  GoalType.SYNTHETIC)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  SYNTHETIC  [FE]                          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(goalType  ==  GoalType.SYNTHETIC)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(goalType  ==  GoalType.SYNTHETIC)  {  throw  new  IllegalArgumentException( " ");  }	  if(goalType    ==    GoalType.SECTION)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC	74	None	replace
260	[BUG]  [BUGGY]  double  t  =  computeIntegerValue(f,  t);  [CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  t  =  computeIntegerValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  t  =  computeIntegerValue(f,  t);	  double    fx    =    computeIntegerValue(f,    t);    	non-compiled	[CE]  variable  t  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	38	None	replace
261	[BUG]  [BUGGY]  float  fx  =  computeObjectiveValue(f,  d);  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  float  fx  =  computeObjectiveValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	float  fx  =  computeObjectiveValue(f,  d);	  double    fx    =    computeObjectiveValue(f,    d);    int    fx    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
262	[BUG]  [BUGGY]  t  =  computeNumberValue(f,  x);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeNumberValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeNumberValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    t    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
263	[BUG]  [BUGGY]  t  =  computeIntValue(f,  x);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeIntValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeIntValue(f,  x);	          t    =    computeObjectiveValue(f,    x);    t    =    computeObjectiveValue(f,    x);    timeout    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
264	[BUG]  [BUGGY]  float  fx  =  computeObjectiveValue(f,  t);  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  float  fx  =  computeObjectiveValue(f,  t);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	float  fx  =  computeObjectiveValue(f,  t);	  double    fx    =    computeObjectiveValue(f,    t);    int    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  possible  loss  of  precision	64	None	replace
265	[BUG]  [BUGGY]  t  =  computeInitialValue(f,  x);  t  =  computeInitialValue(f,  d);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeInitialValue(f,  x);  t  =  computeInitialValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeInitialValue(f,  x);  t  =  computeInitialValue(f,  d);	          t    =    computeObjectiveValue(f,    x);    t    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
266	[BUG]  [BUGGY]  t  =  computeLocalValue(f,  x);  t  =  computeLocalValue(f,  d);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeLocalValue(f,  x);  t  =  computeLocalValue(f,  d);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeLocalValue(f,  x);  t  =  computeLocalValue(f,  d);	          t    =    computeObjectiveValue(f,    x);    t    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
267	[BUG]  [BUGGY]  a  =  lo;  b  =  hi;  [CE]  cannot  find  symbol  fx  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  a  =  lo;  b  =  hi;  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	a  =  lo;  b  =  hi;	  a    =    hi;    b    =    lo;    	non-compiled	[CE]  cannot  find  symbol  fx	70	None	replace
268	[BUG]  [BUGGY]  float  fx  =  computeObjectiveValue(f,  v);  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  float  fx  =  computeObjectiveValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	float  fx  =  computeObjectiveValue(f,  v);	  double    fx    =    computeObjectiveValue(f,    v);    int    fx    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  possible  loss  of  precision	44	None	replace
269	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  v);  fx  =  computeObjectiveValue(f,  v);  }  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  v);  fx  =  computeObjectiveValue(f,  v);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  v);  fx  =  computeObjectiveValue(f,  v);  }	  double    fx    =    computeObjectiveValue(f,    v);    fx    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  cannot  find  symbol  fx	45	None	replace
270	[BUG]  [BUGGY]  if(v  <  =  0)  {  double  fx  =  computeObjectiveValue(f,  v);  fx  =  computeObjectiveValue(f,  v);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(v  <  =  0)  {  double  fx  =  computeObjectiveValue(f,  v);  fx  =  computeObjectiveValue(f,  v);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(v  <  =  0)  {  double  fx  =  computeObjectiveValue(f,  v);  fx  =  computeObjectiveValue(f,  v);  }	  double    fx    =    computeObjectiveValue(f,    v);    fx    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
271	[BUG]  [BUGGY]  if(v  <  =  0)  {  double  fx  =  computeObjectiveValue(f,  v);  fx  =  computeObjectiveValue(f,  v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(v  <  =  0)  {  double  fx  =  computeObjectiveValue(f,  v);  fx  =  computeObjectiveValue(f,  v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(v  <  =  0)  {  double  fx  =  computeObjectiveValue(f,  v);  fx  =  computeObjectiveValue(f,  v);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    fx    =    computeObjectiveValue(f,    v);    fx    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
272	[BUG]  [BUGGY]  double  v  =  computeLocalValue(f,  v);  [CE]  variable  v  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  v  =  computeLocalValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  v  =  computeLocalValue(f,  v);	  double    fx    =    computeLocalValue(f,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	56	None	replace
273	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(lo,  v);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(lo,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(lo,  v);	  double    fx    =    computeLocalValue(f,    v);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
274	[BUG]  [BUGGY]  double  fx  =  computeLocalValue(lo,  w);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocalValue(lo,  w);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocalValue(lo,  w);	  double    fx    =    computeLocalValue(f,    w);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
275	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  w);  fx  =  computeObjectiveValue(f,  w);  }  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  w);  fx  =  computeObjectiveValue(f,  w);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  w);  fx  =  computeObjectiveValue(f,  w);  }	  double    fx    =    computeObjectiveValue(f,    w);    fx    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  cannot  find  symbol  fx	4	None	replace
276	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  w);  fx  =  computeObjectiveValue(f,  w);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  fx  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  w);  fx  =  computeObjectiveValue(f,  w);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  w);  fx  =  computeObjectiveValue(f,  w);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    fx    =    computeObjectiveValue(f,    w);    fx    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  cannot  find  symbol  fx	4	None	replace
277	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  w);  fx  =  computeObjectiveValue(f,  w);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  fx  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  w);  fx  =  computeObjectiveValue(f,  w);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  w);  fx  =  computeObjectiveValue(f,  w);  }  else  {  throw  new  IllegalStateException( " ");  }	  double    fx    =    computeObjectiveValue(f,    w);    fx    =    computeObjectiveValue(f,    w);    	non-compiled	[CE]  cannot  find  symbol  fx	4	None	replace
278	[BUG]  [BUGGY]  t  =  computeObjectiveValue(f,  x);  f  =  computeObjectiveValue(f,  w);  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  t  =  computeObjectiveValue(f,  x);  f  =  computeObjectiveValue(f,  w);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	t  =  computeObjectiveValue(f,  x);  f  =  computeObjectiveValue(f,  w);	          t    =    computeObjectiveValue(f,    x);    f    =    computeObjectiveValue(f,    x);    	non-compiled	[CE]  incompatible  types	75	None	replace
279	[BUG]  [BUGGY]  if(v  <  =  0)  {  double  fx  =  computeObjectiveValue(f,  v);  Double  fx  =  computeObjectiveValue(f,  v);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(v  <  =  0)  {  double  fx  =  computeObjectiveValue(f,  v);  Double  fx  =  computeObjectiveValue(f,  v);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(v  <  =  0)  {  double  fx  =  computeObjectiveValue(f,  v);  Double  fx  =  computeObjectiveValue(f,  v);  }	  double    fx    =    computeObjectiveValue(f,    v);    Double    fx    =    computeObjectiveValue(f,    v);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
280	[BUG]  [BUGGY]  double  v  =  computeFunctionValue(f,  v);  [CE]  variable  v  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  v  =  computeFunctionValue(f,  v);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  v  =  computeFunctionValue(f,  v);	  double    fx    =    computeFunctionValue(f,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	57	None	replace
281	[BUG]  [BUGGY]  double  fx  =  computeLocal(t,  f);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  fx  =  computeLocal(t,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeLocal(t,  f);	  double    fx    =    computeLocalValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
282	[BUG]  [BUGGY]  if(isMinim)  {  while(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  while(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  while(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }	  if(isMinim)    {    if(goalType    ==    GoalType.GOLDEN_SECTION)    {    for(int    i    =    0;    i    <    max;    i++)    {    a    =    b;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
283	[BUG]  [BUGGY]  if(isMinimum)  {  double  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  }  [CE]  cannot  find  symbol  isMinimum  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinimum)  {  double  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinimum)  {  double  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  }	  double    fx    =    computeObjectiveValue(f,    t);    double    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol  isMinimum	62	None	replace
284	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  double  fx  =  computeObjectiveValue(f,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    fx    =    computeObjectiveValue(f,    t);    double    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  variable  fx  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	62	None	replace
285	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	5	1	add
286	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);  timeout  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  v);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	5	1	add
287	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	5	1	add
288	[BUG]  [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  x);  timeout  [FE]                AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]          t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  x);  t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  x);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	                t        =        computeObjectiveValue(f,        x);        t    =    computeObjectiveValue(f,    x);    t  =  computeObjectiveValue(f,  w);  t  =  computeObjectiveValue(f,  x);	  timeout    	compilable	timeout	5	1	add
289	[BUG]  [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  fx  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  double  fx  =  computeObjectiveValue(f,  t);  fx  =  computeObjectiveValue(f,  t);  }  else  {  throw  new  IllegalStateException( " ");  }	  double    fx    =    computeObjectiveValue(f,    t);    fx    =    computeObjectiveValue(f,    t);    	non-compiled	[CE]  cannot  find  symbol  fx	65	None	replace
290	[BUG]  [BUGGY]  double  dx  =  computeFunctionValue(f,  d);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  double  dx  =  computeFunctionValue(f,  d);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  dx  =  computeFunctionValue(f,  d);	  double    fx    =    computeFunctionValue(f,    d);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
291	[BUG]  [BUGGY]  f  =  computeObjectiveValue(f,  d,  t);  [CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)  [FE]              AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  f  =  computeObjectiveValue(f,  d,  t);  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	f  =  computeObjectiveValue(f,  d,  t);	  f    =    computeObjectiveValue(f,    d);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(UnivariateRealFunction,double,double)	58	None	replace
292	[BUG]  [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(x));  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]                    AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(x));  }  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	if(isMinim)  {  throw  new  IllegalArgumentException( " ".equals(x));  }	  if(isMinim)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	54	None	replace
293	[BUG]  [BUGGY]  Double  fx  =  computeObjectiveValue(t,  a,  f);  [CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)  [FE]        AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  Double  fx  =  computeObjectiveValue(t,  a,  f);  [BUGGY]      if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	Double  fx  =  computeObjectiveValue(t,  a,  f);	  double    fx    =    computeObjectiveValue(t,    f);    	non-compiled	[CE]  no  suitable  method  found  for  computeObjectiveValue(double,double,UnivariateRealFunction)	35	None	replace
294	[BUG]  [BUGGY]  a  =  isMinimum;  b  =  lo;  [CE]  cannot  find  symbol  isMinimum  [FE]                      AssertionError      [CONTEXT]      }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;      [BUGGY]  a  =  isMinimum;  b  =  lo;  [BUGGY]      double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	a  =  isMinimum;  b  =  lo;	  if(isMinim)    {    a    =    hi;    b    =    lo;    }    	non-compiled	[CE]  cannot  find  symbol  isMinimum	78	None	replace
