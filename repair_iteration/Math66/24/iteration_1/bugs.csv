bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    double  eps  =  computeObjectiveValue(f,  x);  [CE]  variable  eps  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]    double  eps  =  computeObjectiveValue(f,  x);  [BUGGY]  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	    double  eps  =  computeObjectiveValue(f,  x);		non-compiled	[CE]  variable  eps  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	48	None	add
2	[BUG]  [BUGGY]  timeout  [FE]      AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]    t  =  computeObjectiveValue(f,  x);  [BUGGY]  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	    t  =  computeObjectiveValue(f,  x);		compilable	timeout	48	1	add
3	[BUG]  [BUGGY]    t  =  computeObjectiveValue(f,  x);  timeout  [FE]      AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]    t  =  computeObjectiveValue(f,  x);  [BUGGY]  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	    t  =  computeObjectiveValue(f,  x);		compilable	timeout	48	1	add
4	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  lo;  b  =  lo;  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]        AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  lo;  b  =  lo;  }  [BUGGY]  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  lo;  b  =  lo;  }		non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	48	None	add
5	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  hi;  b  =  lo;  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]          AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  hi;  b  =  lo;  }  [BUGGY]  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  hi;  b  =  lo;  }		non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	48	None	add
6	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]            AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	48	None	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]  double  fx  =  computeObjectiveValue(f,  d);  [BUGGY]  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	double  fx  =  computeObjectiveValue(f,  d);	double  fx  =  computeObjectiveValue(f,  x);  	compilable	  [FE]  AssertionError  	47	6	replace
8	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  d);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]  double  fx  =  computeObjectiveValue(f,  d);  [BUGGY]  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(f,  d);	double  fx  =  computeObjectiveValue(f,  x);  	compilable	  [FE]  AssertionError  	47	6	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]  double  fx  =  computeObjectiveValue(f,  w);  [BUGGY]  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	double  fx  =  computeObjectiveValue(f,  w);	double  fx  =  computeObjectiveValue(f,  x);  	compilable	  [FE]  AssertionError  	47	4	replace
10	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  w);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]  double  fx  =  computeObjectiveValue(f,  w);  [BUGGY]  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(f,  w);	double  fx  =  computeObjectiveValue(f,  x);  	compilable	  [FE]  AssertionError  	47	4	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]  double  fx  =  computeObjectiveValue(f,  v);  [BUGGY]  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	double  fx  =  computeObjectiveValue(f,  v);	double  fx  =  computeObjectiveValue(f,  x);  	compilable	  [FE]  AssertionError  	47	4	replace
12	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  v);  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]  double  fx  =  computeObjectiveValue(f,  v);  [BUGGY]  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(f,  v);	double  fx  =  computeObjectiveValue(f,  x);  	compilable	  [FE]  AssertionError  	47	4	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]  double  fx  =  computeObjectiveValue(f,  t);  [BUGGY]  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	double  fx  =  computeObjectiveValue(f,  t);	double  fx  =  computeObjectiveValue(f,  x);  	compilable	  [FE]  AssertionError  	47	6	replace
14	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  t);  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]  double  fx  =  computeObjectiveValue(f,  t);  [BUGGY]  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(f,  t);	double  fx  =  computeObjectiveValue(f,  x);  	compilable	  [FE]  AssertionError  	47	6	replace
15	[BUG]  [BUGGY]    double  f  =  computeObjectiveValue(f,  x);  [CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]    double  f  =  computeObjectiveValue(f,  x);  [BUGGY]  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	    double  f  =  computeObjectiveValue(f,  x);		non-compiled	[CE]  variable  f  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	48	None	add
16	[BUG]  [BUGGY]    f  =  computeObjectiveValue(f,  x);  [CE]  incompatible  types  [FE]      AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]    f  =  computeObjectiveValue(f,  x);  [BUGGY]  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	    f  =  computeObjectiveValue(f,  x);		non-compiled	[CE]  incompatible  types	48	None	add
17	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  b;  b  =  lo;  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]        AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  b;  b  =  lo;  }  [BUGGY]  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  b;  b  =  lo;  }		non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	48	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]  double  fx  =  computeObjectiveValue(f,  a);  [BUGGY]  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	add	double  fx  =  computeObjectiveValue(f,  a);	double  fx  =  computeObjectiveValue(f,  x);  	compilable	  [FE]  AssertionError  	47	5	replace
19	[BUG]  [BUGGY]  double  fx  =  computeObjectiveValue(f,  a);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]  double  fx  =  computeObjectiveValue(f,  a);  [BUGGY]  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	double  fx  =  computeObjectiveValue(f,  a);	double  fx  =  computeObjectiveValue(f,  x);  	compilable	  [FE]  AssertionError  	47	5	replace
20	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  a;  b  =  lo;  }  [CE]  cannot  find  symbol  GOLDEN_SECTION  [FE]    AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  a;  b  =  lo;  }  [BUGGY]  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  a  =  a;  b  =  lo;  }		non-compiled	[CE]  cannot  find  symbol  GOLDEN_SECTION	48	None	add
21	[BUG]  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError  [CONTEXT]  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [BUGGY]    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }  [BUGGY]  double  fx  =  computeObjectiveValue(f,  x);  if  (goalType  ==  GoalType.MAXIMIZE)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  int  count  =  0;  while  (count  <  maximalIterationCount)  {  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  eps  *  Math.abs(x)  +  t;  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.7559289460184544	119	119	4	replace	    if(goalType  ==  GoalType.GOLDEN_SECTION)  {  for(int  i  =  0;  i  <  max;  i++)  {  a  =  b;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	48	None	add
