bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  p  /  r;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  r;	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	4	replace
2	[BUG]  [BUGGY]  d  =  p  /  r;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  p  /  r;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  r;	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	4	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  p  *  q;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  q;	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	5	replace
4	[BUG]  [BUGGY]  d  =  p  *  q;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  p  *  q;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  q;	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	5	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  m  /  q;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  /  q;	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	5	replace
6	[BUG]  [BUGGY]  d  =  m  /  q;  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  m  /  q;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  /  q;	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	5	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  d  /  q;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  q;	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	5	replace
8	[BUG]  [BUGGY]  d  =  d  /  q;  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  d  /  q;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  q;	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	5	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]    [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	  	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	5	replace
10	[BUG]  [BUGGY]    [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]    [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	  	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	5	replace
11	[BUG]  [BUGGY]    if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	    if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {		non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	add
12	[BUG]  [BUGGY]    if(x  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	    if(x  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {		non-compiled	[CE]  ')'  expected	2	None	add
13	[BUG]  [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	    if(x  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {		non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	add
14	[BUG]  [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	    if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {		non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  q  /  p;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  q  /  p;	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	5	replace
16	[BUG]  [BUGGY]  d  =  q  /  p;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  q  /  p;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  q  /  p;	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	5	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  r  /  q;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  r  /  q;	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	5	replace
18	[BUG]  [BUGGY]  d  =  r  /  q;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  r  /  q;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  /  q;	d  =  p  /  q;  	compilable	  [FE]  AssertionError  	1	5	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }		compilable	  [FE]  AssertionError  	2	4	add
20	[BUG]  [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }		compilable	  [FE]  AssertionError  	2	4	add
21	[BUG]  [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	    if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {		non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	add
22	[BUG]  [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {		non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	add
23	[BUG]  [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	    if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {		non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	add
