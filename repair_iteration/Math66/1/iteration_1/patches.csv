bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
2	[BUG]  [BUGGY]  if(x  <  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  <  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	12	None	replace
3	[BUG]  [BUGGY]  if(p  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(p  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	12	None	replace
4	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	replace
5	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  m)  <  =  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
6	[BUG]  [BUGGY]      if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
7	[BUG]  [BUGGY]      if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)||  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
8	[BUG]  [BUGGY]      if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(m)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
9	[BUG]  [BUGGY]      if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
10	[BUG]  [BUGGY]      if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(x  >  a  ||  p  <  a  ||  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  tol  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  r  /  p;	  d    =    q    /    p;    	compilable	  [FE]  AssertionError  	16	5	replace
12	[BUG]  [BUGGY]  d  =  r  /  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  /  p;	  d    =    q    /    p;    	compilable	  [FE]  AssertionError  	16	5	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  p;	  d    =    q    /    p;    	compilable	  [FE]  AssertionError  	16	5	replace
14	[BUG]  [BUGGY]  d  =  d  /  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  p;	  d    =    q    /    p;    	compilable	  [FE]  AssertionError  	16	5	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  /  p;	  d    =    q    /    p;    	compilable	  [FE]  AssertionError  	16	5	replace
16	[BUG]  [BUGGY]  d  =  m  /  p;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  /  p;	  d    =    q    /    p;    	compilable	  [FE]  AssertionError  	16	5	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  *  r;	  d    =    p    /    r;    	compilable	  [FE]  AssertionError  	2	5	replace
18	[BUG]  [BUGGY]  d  =  p  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  *  r;	  d    =    p    /    r;    	compilable	  [FE]  AssertionError  	2	5	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  r  +  1;	  d    =    p    /    r;    	compilable	  [FE]  AssertionError  	2	5	replace
20	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  r  +  1;	  d    =    p    /    r;    	compilable	  [FE]  AssertionError  	2	5	replace
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  /  r;	  d    =    p    /    r;    	compilable	  [FE]  AssertionError  	2	5	replace
22	[BUG]  [BUGGY]  d  =  m  /  r;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  /  r;	  d    =    p    /    r;    	compilable	  [FE]  AssertionError  	2	5	replace
23	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
24	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  =  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
25	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  r  *  q;	  d    =    r    /    q;    	compilable	  [FE]  AssertionError  	18	5	replace
27	[BUG]  [BUGGY]  d  =  r  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  r  *  q;	  d    =    r    /    q;    	compilable	  [FE]  AssertionError  	18	5	replace
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    /    q;    d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	17	4	add
29	[BUG]  [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    q;    d  =  r  /  q;	  	compilable	  [FE]  AssertionError  	17	4	add
30	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	17	1	add
31	[BUG]  [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	17	1	add
32	[BUG]  [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  cannot  find  symbol  y  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  cannot  find  symbol  y	17	None	add
33	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {	  	compilable	timeout	17	1	add
34	[BUG]  [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  timeout  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  m))  {	  	compilable	timeout	17	1	add
35	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  	compilable	timeout	17	1	add
36	[BUG]  [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  timeout  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    q;    d  =  r  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  	compilable	timeout	17	1	add
37	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  m  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
38	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(w  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(w  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  b  *(w  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
39	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  d  =  p  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    *    q;    d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	3	4	add
41	[BUG]  [BUGGY]  d  =  p  *  q;  d  =  p  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  d  =  p  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    d  =  p  *  q;	  	compilable	  [FE]  AssertionError  	3	4	add
42	[BUG]  [BUGGY]  d  =  p  *  q;  d  =  p  *  q;  }  else  if(isMinim)  {  d  =  p  *  q;  }  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  d  =  p  *  q;  }  else  if(isMinim)  {  d  =  p  *  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    d  =  p  *  q;  }  else  if(isMinim)  {  d  =  p  *  q;  }	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
43	[BUG]  [BUGGY]  d  =  p  *  q;  d  =  p  *  q;  }  else  if(l  >  a)  {  d  =  p  *  q;  }  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  d  =  p  *  q;  }  else  if(l  >  a)  {  d  =  p  *  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    d  =  p  *  q;  }  else  if(l  >  a)  {  d  =  p  *  q;  }	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
44	[BUG]  [BUGGY]  d  =  p  *  q;  d  =  p  *  q;  }  else  if(x  >  a)  {  d  =  p  *  q;  }  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  d  =  p  *  q;  }  else  if(x  >  a)  {  d  =  p  *  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    d  =  p  *  q;  }  else  if(x  >  a)  {  d  =  p  *  q;  }	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
45	[BUG]  [BUGGY]  d  =  p  *  q;  d  =  p  *  q;  }  else  if(isMinim)  {  d  =  tol1  +  d;  }  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  d  =  p  *  q;  }  else  if(isMinim)  {  d  =  tol1  +  d;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    d  =  p  *  q;  }  else  if(isMinim)  {  d  =  tol1  +  d;  }	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  m  *  q;	  d    =    p    *    q;    	compilable	  [FE]  AssertionError  	4	5	replace
47	[BUG]  [BUGGY]  d  =  m  *  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  m  *  q;	  d    =    p    *    q;    	compilable	  [FE]  AssertionError  	4	5	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  *  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  q  *  p;	  d    =    p    *    q;    	compilable	  [FE]  AssertionError  	4	5	replace
49	[BUG]  [BUGGY]  d  =  q  *  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  *  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  q  *  p;	  d    =    p    *    q;    	compilable	  [FE]  AssertionError  	4	5	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  d  =  q  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    p;    d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	15	4	add
51	[BUG]  [BUGGY]  d  =  q  /  p;  d  =  q  /  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  d  =  q  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    p;    d  =  q  /  p;	  	compilable	  [FE]  AssertionError  	15	4	add
52	[BUG]  [BUGGY]  d  =  q  /  p;  d  =  q  /  p;  }  else  if(isMinim)  {  d  =  q  /  p;  }  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  d  =  q  /  p;  }  else  if(isMinim)  {  d  =  q  /  p;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    p;    d  =  q  /  p;  }  else  if(isMinim)  {  d  =  q  /  p;  }	  	non-compiled	[CE]  'else'  without  'if'	15	None	add
53	[BUG]  [BUGGY]  d  =  q  /  p;  d  =  q  /  p;  }  else  if(i  >  a  -  x)  {  d  =  q  /  p;  }  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  d  =  q  /  p;  }  else  if(i  >  a  -  x)  {  d  =  q  /  p;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    p;    d  =  q  /  p;  }  else  if(i  >  a  -  x)  {  d  =  q  /  p;  }	  	non-compiled	[CE]  'else'  without  'if'	15	None	add
54	[BUG]  [BUGGY]  d  =  q  /  p;  d  =  q  /  p;  }  else  if(i  >  a  -  x)  {  d  =  m  /  p;  }  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  d  =  q  /  p;  }  else  if(i  >  a  -  x)  {  d  =  m  /  p;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    p;    d  =  q  /  p;  }  else  if(i  >  a  -  x)  {  d  =  m  /  p;  }	  	non-compiled	[CE]  'else'  without  'if'	15	None	add
55	[BUG]  [BUGGY]  d  =  q  /  p;  d  =  q  /  p;  }  else  if(isMinim)  {  d  =  tol1  /  p;  }  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  d  =  q  /  p;  }  else  if(isMinim)  {  d  =  tol1  /  p;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    p;    d  =  q  /  p;  }  else  if(isMinim)  {  d  =  tol1  /  p;  }	  	non-compiled	[CE]  'else'  without  'if'	15	None	add
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  d  =  m  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    q;    d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	5	4	add
57	[BUG]  [BUGGY]  d  =  m  /  q;  d  =  m  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  d  =  m  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    q;    d  =  m  /  q;	  	compilable	  [FE]  AssertionError  	5	4	add
58	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	5	1	add
59	[BUG]  [BUGGY]  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	5	1	add
60	[BUG]  [BUGGY]  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  cannot  find  symbol  y  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  y)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  cannot  find  symbol  y	5	None	add
61	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  	compilable	timeout	5	1	add
62	[BUG]  [BUGGY]  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  timeout  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    q;    d  =  m  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  t))  {	  	compilable	timeout	5	1	add
63	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  /  m)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
64	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
65	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
66	[BUG]  [BUGGY]  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
67	[BUG]  [BUGGY]  if(x  <  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  <  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
68	[BUG]  [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (lo  -  x)&&  p  <  r  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	20	5	replace
70	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	20	5	replace
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	20	5	replace
72	[BUG]  [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(a  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	20	5	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	20	5	replace
74	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	20	5	replace
75	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	19	4	add
76	[BUG]  [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	19	4	add
77	[BUG]  [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
78	[BUG]  [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  If(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    If(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ';'  expected	19	None	add
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    r;    d  =  p  /  r;	  	compilable	  [FE]  AssertionError  	1	4	add
80	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    d  =  p  /  r;	  	compilable	  [FE]  AssertionError  	1	4	add
81	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  }  else  if(isMinim)  {  d  =  p  /  r;  }  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  }  else  if(isMinim)  {  d  =  p  /  r;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    d  =  p  /  r;  }  else  if(isMinim)  {  d  =  p  /  r;  }	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
82	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  }  else  if(i  >  a  -  x)  {  d  =  p  /  r;  }  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  }  else  if(i  >  a  -  x)  {  d  =  p  /  r;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    d  =  p  /  r;  }  else  if(i  >  a  -  x)  {  d  =  p  /  r;  }	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
83	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  }  else  if(x  >  a)  {  d  =  p  /  r;  }  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  }  else  if(x  >  a)  {  d  =  p  /  r;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    d  =  p  /  r;  }  else  if(x  >  a)  {  d  =  p  /  r;  }	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
84	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  }  else  if(l  >  a)  {  d  =  p  /  r;  }  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  d  =  p  /  r;  }  else  if(l  >  a)  {  d  =  p  /  r;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    d  =  p  /  r;  }  else  if(l  >  a)  {  d  =  p  /  r;  }	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
85	[BUG]  [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  <  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
86	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
87	[BUG]  [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  q  /  m;	  d    =    m    /    q;    	compilable	  [FE]  AssertionError  	6	5	replace
89	[BUG]  [BUGGY]  d  =  q  /  m;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  m;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  q  /  m;	  d    =    m    /    q;    	compilable	  [FE]  AssertionError  	6	5	replace
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q;  d  =  d  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    q;    d  =  d  /  q;	  	compilable	  [FE]  AssertionError  	7	4	add
91	[BUG]  [BUGGY]  d  =  d  /  q;  d  =  d  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q;  d  =  d  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    q;    d  =  d  /  q;	  	compilable	  [FE]  AssertionError  	7	4	add
92	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	7	1	add
93	[BUG]  [BUGGY]  d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  timeout  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q;  d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    q;    d  =  d  /  q;  }  else  if(p  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	compilable	timeout	7	1	add
94	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  r;	  d    =    d    /    q;    	compilable	  [FE]  AssertionError  	8	5	replace
95	[BUG]  [BUGGY]  d  =  d  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  r;	  d    =    d    /    q;    	compilable	  [FE]  AssertionError  	8	5	replace
96	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  *  q;	  d    =    d    /    q;    	compilable	  [FE]  AssertionError  	8	5	replace
97	[BUG]  [BUGGY]  d  =  d  *  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  *  q;	  d    =    d    /    q;    	compilable	  [FE]  AssertionError  	8	5	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  2;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  2;	  d    =    d    /    q;    	compilable	  [FE]  AssertionError  	8	5	replace
99	[BUG]  [BUGGY]  d  =  d  /  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  2;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  2;	  d    =    d    /    q;    	compilable	  [FE]  AssertionError  	8	5	replace
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  q  +  1;	  d    =    d    /    q;    	compilable	  [FE]  AssertionError  	8	5	replace
101	[BUG]  [BUGGY]  d  =  d  /  q  +  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q  +  1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  q  +  1;	  d    =    d    /    q;    	compilable	  [FE]  AssertionError  	8	5	replace
102	[BUG]  [BUGGY]  d  =  m  /  q;  int  d  =  m  /  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  int  d  =  m  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    q;    int  d  =  m  /  q;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	5	None	add
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  d  =  m  /  q  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    q;    d  =  m  /  q  +  d;	  	compilable	  [FE]  AssertionError  	5	4	add
104	[BUG]  [BUGGY]  d  =  m  /  q;  d  =  m  /  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  d  =  m  /  q  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    q;    d  =  m  /  q  +  d;	  	compilable	  [FE]  AssertionError  	5	4	add
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    m    /    q;    d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	5	4	add
106	[BUG]  [BUGGY]  d  =  m  /  q;  d  =  m  *  q;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  d  =  m  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    q;    d  =  m  *  q;	  	compilable	  [FE]  AssertionError  	5	4	add
107	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  q  /  r;	  d    =    p    /    r;    	compilable	  [FE]  AssertionError  	2	5	replace
108	[BUG]  [BUGGY]  d  =  q  /  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  q  /  r;	  d    =    p    /    r;    	compilable	  [FE]  AssertionError  	2	5	replace
109	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  =  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
110	[BUG]  [BUGGY]  d  =  p  *  q;  int  d  =  p  *  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  int  d  =  p  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    int  d  =  p  *  q;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	3	None	add
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  d  =  p  *  q  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    *    q;    d  =  p  *  q  +  d;	  	compilable	  [FE]  AssertionError  	3	4	add
112	[BUG]  [BUGGY]  d  =  p  *  q;  d  =  p  *  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  d  =  p  *  q  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    d  =  p  *  q  +  d;	  	compilable	  [FE]  AssertionError  	3	4	add
113	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  d  =  p  *  q  +  a;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    *    q;    d  =  p  *  q  +  a;	  	compilable	  [FE]  AssertionError  	3	4	add
114	[BUG]  [BUGGY]  d  =  p  *  q;  d  =  p  *  q  +  a;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  d  =  p  *  q  +  a;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    d  =  p  *  q  +  a;	  	compilable	  [FE]  AssertionError  	3	4	add
115	[BUG]  [BUGGY]  d  =  p  *  q;  dev  =  p  *  q;  [CE]  cannot  find  symbol  dev  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  dev  =  p  *  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    dev  =  p  *  q;	  	non-compiled	[CE]  cannot  find  symbol  dev	3	None	add
116	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  m)  <  =  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	20	5	replace
118	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	20	5	replace
119	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
120	[BUG]  [BUGGY]  if(x  >  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  lo  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	12	None	replace
121	[BUG]  [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(l  -  x)&&  p  <  r  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  a  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  /  q;	  d    =    r    /    q;    	compilable	  [FE]  AssertionError  	18	5	replace
123	[BUG]  [BUGGY]  d  =  a  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  a  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  /  q;	  d    =    r    /    q;    	compilable	  [FE]  AssertionError  	18	5	replace
124	[BUG]  [BUGGY]      if(p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(p  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
125	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
126	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
127	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	replace
128	[BUG]  [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
129	[BUG]  [BUGGY]  d  =  q  /  p;  int  d  =  q  /  p;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  int  d  =  q  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    p;    int  d  =  q  /  p;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	15	None	add
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  d  =  p  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    p;    d  =  p  /  p;	  	compilable	  [FE]  AssertionError  	15	4	add
131	[BUG]  [BUGGY]  d  =  q  /  p;  d  =  p  /  p;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  d  =  p  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    p;    d  =  p  /  p;	  	compilable	  [FE]  AssertionError  	15	4	add
132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  d  =  q  %  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    p;    d  =  q  %  p;	  	compilable	  [FE]  AssertionError  	15	4	add
133	[BUG]  [BUGGY]  d  =  q  /  p;  d  =  q  %  p;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  d  =  q  %  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    p;    d  =  q  %  p;	  	compilable	  [FE]  AssertionError  	15	4	add
134	[BUG]  [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (lo  -  x)&&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  =  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
135	[BUG]  [BUGGY]  d  =  p  /  r;  int  d  =  p  /  r;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  int  d  =  p  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    int  d  =  p  /  r;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	1	None	add
136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  r  =  p  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    /    r;    r  =  p  /  r;	  	compilable	  [FE]  AssertionError  	1	4	add
137	[BUG]  [BUGGY]  d  =  p  /  r;  r  =  p  /  r;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  r  =  p  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    r  =  p  /  r;	  	compilable	  [FE]  AssertionError  	1	4	add
138	[BUG]  [BUGGY]  d  =  p  /  r;  d  =  p  /  r);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  d  =  p  /  r);  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    d  =  p  /  r);	  	non-compiled	[CE]  ';'  expected	1	None	add
139	[BUG]  [BUGGY]  d  =  p  /  r;  dev  =  p  /  r;  [CE]  cannot  find  symbol  dev  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  dev  =  p  /  r;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    dev  =  p  /  r;	  	non-compiled	[CE]  cannot  find  symbol  dev	1	None	add
140	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  a  *(lo  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p    -    r)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q;  d  =  p  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    q;    d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	7	4	add
142	[BUG]  [BUGGY]  d  =  d  /  q;  d  =  p  /  q;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q;  d  =  p  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    q;    d  =  p  /  q;	  	compilable	  [FE]  AssertionError  	7	4	add
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q;  d  =  d  %  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    q;    d  =  d  %  q;	  	compilable	  [FE]  AssertionError  	7	4	add
144	[BUG]  [BUGGY]  d  =  d  /  q;  d  =  d  %  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q;  d  =  d  %  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    q;    d  =  d  %  q;	  	compilable	  [FE]  AssertionError  	7	4	add
145	[BUG]  [BUGGY]  d  =  d  /  q;  dev  =  d  /  q;  [CE]  cannot  find  symbol  dev  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q;  dev  =  d  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    q;    dev  =  d  /  q;	  	non-compiled	[CE]  cannot  find  symbol  dev	7	None	add
146	[BUG]  [BUGGY]  d  =  r  /  q;  int  d  =  r  /  q;  [CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  int  d  =  r  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    q;    int  d  =  r  /  q;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  localMin(boolean,UnivariateRealFunction,GoalType,double,double,double,double,double)	17	None	add
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  r  =  r  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    /    q;    r  =  r  /  q;	  	compilable	  [FE]  AssertionError  	17	4	add
148	[BUG]  [BUGGY]  d  =  r  /  q;  r  =  r  /  q;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  r  =  r  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    q;    r  =  r  /  q;	  	compilable	  [FE]  AssertionError  	17	4	add
149	[BUG]  [BUGGY]  d  =  r  /  q;  d  =  l  /  q;  [CE]  cannot  find  symbol  l  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  d  =  l  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    q;    d  =  l  /  q;	  	non-compiled	[CE]  cannot  find  symbol  l	17	None	add
150	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  tol1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  d  /  tol1;	  d    =    d    /    q;    	compilable	  [FE]  AssertionError  	8	5	replace
151	[BUG]  [BUGGY]  d  =  d  /  tol1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  tol1;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  d  /  tol1;	  d    =    d    /    q;    	compilable	  [FE]  AssertionError  	8	5	replace
152	[BUG]  [BUGGY]  if(x  >=  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >=  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >=  a  *(l  lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	12	None	replace
153	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(l  lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(l  lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  q  *(l  lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(l    lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  ')'  expected	12	None	replace
154	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  a  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    a    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
155	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  r)  <  Math.abs(0.5  *  q  *  r))  {	      	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
156	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  d)  <  Math.abs(0.5  *  q  *  r))  {	      	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
157	[BUG]  [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  -  m)  <  Math.abs(0.5  *  q  *  r))  {	      	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
158	[BUG]  [BUGGY]  d  =  d  /  q;  if  (d  =  d  /  q;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q;  if  (d  =  d  /  q;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    q;    if  (d  =  d  /  q;	  	non-compiled	[CE]  ')'  expected	7	None	add
159	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q;  d  =  d  /  q  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    d    /    q;    d  =  d  /  q  +  d;	  	compilable	  [FE]  AssertionError  	7	4	add
160	[BUG]  [BUGGY]  d  =  d  /  q;  d  =  d  /  q  +  d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  d  /  q;  d  =  d  /  q  +  d;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    d    /    q;    d  =  d  /  q  +  d;	  	compilable	  [FE]  AssertionError  	7	4	add
161	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  2;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  p  /  2;	  d    =    p    /    r;    	compilable	  [FE]  AssertionError  	2	6	replace
162	[BUG]  [BUGGY]  d  =  p  /  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  2;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  p  /  2;	  d    =    p    /    r;    	compilable	  [FE]  AssertionError  	2	6	replace
163	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	19	4	add
164	[BUG]  [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(1.0  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	19	4	add
165	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	19	4	add
166	[BUG]  [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    if(x  >=  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	19	4	add
167	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	        if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	9	4	add
168	[BUG]  [BUGGY]      if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]      if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	        if(p  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	  	compilable	  [FE]  AssertionError  	9	4	add
169	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	3	4	add
170	[BUG]  [BUGGY]  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	3	4	add
171	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	3	4	add
172	[BUG]  [BUGGY]  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }  else  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	3	4	add
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	3	4	add
174	[BUG]  [BUGGY]  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  if  (p  >  a  *  q)  {  d  =  p  *  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    if  (p  >  a  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	3	4	add
175	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	3	4	add
176	[BUG]  [BUGGY]  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  *  q;  if  (p  >  q  *  q)  {  d  =  p  *  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    *    q;    if  (p  >  q  *  q)  {  d  =  p  *  q;  }	  	compilable	  [FE]  AssertionError  	3	4	add
177	[BUG]  [BUGGY]  d  =  m  /  q;  if  (m  /  q  >  a)  {  if(x  >  a)  {  d  =  m  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  if  (m  /  q  >  a)  {  if(x  >  a)  {  d  =  m  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    q;    if  (m  /  q  >  a)  {  if(x  >  a)  {  d  =  m  /  q;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
178	[BUG]  [BUGGY]  d  =  m  /  q;  if  (m  /  q  >  a)  {  if  (x  <  =  m)  {  d  =  m  /  q;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  if  (m  /  q  >  a)  {  if  (x  <  =  m)  {  d  =  m  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    q;    if  (m  /  q  >  a)  {  if  (x  <  =  m)  {  d  =  m  /  q;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
179	[BUG]  [BUGGY]  d  =  m  /  q;  if  (m  /  q  >  a)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  m  /  q;  if  (m  /  q  >  a)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    m    /    q;    if  (m  /  q  >  a)  {  if  (x  <  =  m)  {  d  =  tol1  +  d;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  a  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d  =  a  /  p;	  d    =    q    /    p;    	compilable	  [FE]  AssertionError  	16	5	replace
181	[BUG]  [BUGGY]  d  =  a  /  p;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  a  /  p;  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d  =  a  /  p;	  d    =    q    /    p;    	compilable	  [FE]  AssertionError  	16	5	replace
182	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  b  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
183	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  b  *(b  -  x)&&  Math.abs(p  -  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    b    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
184	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p  +  m)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
185	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  r)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p    +    m)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
186	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	20	5	replace
187	[BUG]  [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(b  -  x)&&  p  <  q  *(lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	20	5	replace
188	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  =  q  *(b  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	20	5	replace
190	[BUG]  [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(p  +  1)  <  Math.abs(0.5  *  q  *  r))  {  }	      if(x    >    a    *(lo    -    x)&&    p    <    q    *(b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    }    	compilable	  [FE]  AssertionError  	20	5	replace
191	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }	  	compilable	  [FE]  AssertionError  	15	4	add
192	[BUG]  [BUGGY]  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }	  	compilable	  [FE]  AssertionError  	15	4	add
193	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }	  	compilable	  [FE]  AssertionError  	15	4	add
194	[BUG]  [BUGGY]  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  p  /  p;  }	  	compilable	  [FE]  AssertionError  	15	4	add
195	[BUG]  [BUGGY]  d  =  q  /  p;  if  (q  /  p  >  a)  {  if(x  >  a)  {  d  =  q  /  p;  }  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  if  (q  /  p  >  a)  {  if(x  >  a)  {  d  =  q  /  p;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    p;    if  (q  /  p  >  a)  {  if(x  >  a)  {  d  =  q  /  p;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	add
196	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }	  	compilable	  [FE]  AssertionError  	15	4	add
197	[BUG]  [BUGGY]  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  q  /  p;  if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    q    /    p;    if  (q  /  p  >  a)  {  d  =  q  /  p;  }  else  {  d  =  tol1  +  d;  }	  	compilable	  [FE]  AssertionError  	15	4	add
198	[BUG]  [BUGGY]  d  =  p  /  r;  if  (p  >  a  /  r)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  if  (p  >  a  /  r)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    if  (p  >  a  /  r)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  ')'  expected	1	None	add
199	[BUG]  [BUGGY]  d  =  p  /  r;  if  (p  >  a  /  r)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  if  (p  >  a  /  r)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    if  (p  >  a  /  r)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(0.5  *  q  *  r))  {  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
200	[BUG]  [BUGGY]  d  =  p  /  r;  if  (p  >  a  /  r)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  if  (p  >  a  /  r)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    if  (p  >  a  /  r)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(Math.abs(0.5  *  q  *  r))  {	  	non-compiled	[CE]  ')'  expected	1	None	add
201	[BUG]  [BUGGY]  d  =  p  /  r;  if  (p  >  a  /  r)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(1.0  *  q  *  r))  {  }  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  p  /  r;  if  (p  >  a  /  r)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(1.0  *  q  *  r))  {  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    p    /    r;    if  (p  >  a  /  r)  {  if  (x  >  a  *(lo  -  x)&&  p  <  q  *(b  -  x)&&  Math.abs(1.0  *  q  *  r))  {  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
202	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	17	4	add
203	[BUG]  [BUGGY]  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	17	4	add
204	[BUG]  [BUGGY]  d  =  r  /  q;  if  (r  /  q  >  a)  {  if(x  >  a)  {  d  =  r  /  q;  }  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  if  (r  /  q  >  a)  {  if(x  >  a)  {  d  =  r  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    q;    if  (r  /  q  >  a)  {  if(x  >  a)  {  d  =  r  /  q;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	add
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	add	d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	17	4	add
206	[BUG]  [BUGGY]  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  d  =  r  /  q;  if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }  [BUGGY]    u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	d    =    r    /    q;    if  (r  /  q  >  a)  {  d  =  r  /  q;  }  else  {  d  =  r  /  q;  }	  	compilable	  [FE]  AssertionError  	17	4	add
207	[BUG]  [BUGGY]  if(x  >  a  *  (b  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {      [BUGGY]  if(x  >  a  *  (b  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  [CLASS]  BrentOptimizer  [METHOD]  localMin  [RETURN_TYPE]  double  boolean  isMinim  UnivariateRealFunction  f  GoalType  goalType  double  lo  double  mid  double  hi  double  eps  double  t  [VARIABLES]  UnivariateRealFunction  f  GoalType  goalType  boolean  isMinim  double  GOLDEN_SECTION  a  b  d  e  eps  fu  fv  fw  fx  hi  lo  m  max  mid  min  p  q  r  startValue  t  tol1  tol2  u  v  w  x  int  count  	projects/Math66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	0.8164965809277261	158	158	4	replace	if(x  >  a  *  (b  -  x)&&  p  <  q  *  (lo  -  x)&&  Math.abs(p)  <  Math.abs(0.5  *  q  *  r))  {	      if(x    >    a    *    (lo    -    x)&&    p    <    q    *    (b    -    x)&&    Math.abs(p)    <    Math.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
